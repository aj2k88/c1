var automaton = (function (t) {
  var e = {};
  function n(i) {
    if (e[i]) return e[i].exports;
    var r = (e[i] = { i: i, l: !1, exports: {} });
    return t[i].call(r.exports, r, r.exports, n), (r.l = !0), r.exports;
  }
  return (
    (n.m = t),
    (n.c = e),
    (n.d = function (t, e, i) {
      n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: i });
    }),
    (n.r = function (t) {
      'undefined' != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(t, '__esModule', { value: !0 });
    }),
    (n.t = function (t, e) {
      if ((1 & e && (t = n(t)), 8 & e)) return t;
      if (4 & e && 'object' == typeof t && t && t.__esModule) return t;
      var i = Object.create(null);
      if (
        (n.r(i),
        Object.defineProperty(i, 'default', { enumerable: !0, value: t }),
        2 & e && 'string' != typeof t)
      )
        for (var r in t)
          n.d(
            i,
            r,
            function (e) {
              return t[e];
            }.bind(null, r)
          );
      return i;
    }),
    (n.n = function (t) {
      var e =
        t && t.__esModule
          ? function () {
              return t.default;
            }
          : function () {
              return t;
            };
      return n.d(e, 'a', e), e;
    }),
    (n.o = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }),
    (n.p = ''),
    n((n.s = 35))
  );
})([
  function (t, e, n) {
    'use strict';
    var i = n(36);
    t.exports = i;
  },
  function (t, e, n) {
    'use strict';
    var i = n(8),
      r = [
        'kind',
        'resolve',
        'construct',
        'instanceOf',
        'predicate',
        'represent',
        'defaultStyle',
        'styleAliases',
      ],
      s = ['scalar', 'sequence', 'mapping'];
    t.exports = function (t, e) {
      var n, a;
      if (
        ((e = e || {}),
        Object.keys(e).forEach(function (e) {
          if (-1 === r.indexOf(e))
            throw new i(
              'Unknown option "' +
                e +
                '" is met in definition of "' +
                t +
                '" YAML type.'
            );
        }),
        (this.tag = t),
        (this.kind = e.kind || null),
        (this.resolve =
          e.resolve ||
          function () {
            return !0;
          }),
        (this.construct =
          e.construct ||
          function (t) {
            return t;
          }),
        (this.instanceOf = e.instanceOf || null),
        (this.predicate = e.predicate || null),
        (this.represent = e.represent || null),
        (this.defaultStyle = e.defaultStyle || null),
        (this.styleAliases =
          ((n = e.styleAliases || null),
          (a = {}),
          null !== n &&
            Object.keys(n).forEach(function (t) {
              n[t].forEach(function (e) {
                a[String(e)] = t;
              });
            }),
          a)),
        -1 === s.indexOf(this.kind))
      )
        throw new i(
          'Unknown kind "' +
            this.kind +
            '" is specified for "' +
            t +
            '" YAML type.'
        );
    };
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 }),
      (function (t) {
        (t.CLICK = 'CLICK'),
          (t.CONTAINS_TEXT = 'CONTAINS_TEXT'),
          (t.CONFIRM_PRESENCE = 'CONFIRM_PRESENCE'),
          (t.CONTEXT_SWITCH = 'CONTEXT_SWITCH'),
          (t.NONE = 'NONE'),
          (t.SELECT = 'SELECT'),
          (t.ENTER_TEXT = 'ENTER_TEXT'),
          (t.SLEEP = 'SLEEP'),
          (t.SLIDE = 'SLIDE'),
          (t.SUBMIT = 'SUBMIT');
      })(e.ActionType || (e.ActionType = {}));
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }),
      s =
        (this && this.__awaiter) ||
        function (t, e, n, i) {
          return new (n || (n = Promise))(function (r, s) {
            function a(t) {
              try {
                u(i.next(t));
              } catch (t) {
                s(t);
              }
            }
            function o(t) {
              try {
                u(i.throw(t));
              } catch (t) {
                s(t);
              }
            }
            function u(t) {
              t.done
                ? r(t.value)
                : new n(function (e) {
                    e(t.value);
                  }).then(a, o);
            }
            u((i = i.apply(t, e || [])).next());
          });
        },
      a =
        (this && this.__generator) ||
        function (t, e) {
          var n,
            i,
            r,
            s,
            a = {
              label: 0,
              sent: function () {
                if (1 & r[0]) throw r[1];
                return r[1];
              },
              trys: [],
              ops: [],
            };
          return (
            (s = { next: o(0), throw: o(1), return: o(2) }),
            'function' == typeof Symbol &&
              (s[Symbol.iterator] = function () {
                return this;
              }),
            s
          );
          function o(s) {
            return function (o) {
              return (function (s) {
                if (n) throw new TypeError('Generator is already executing.');
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      i &&
                        (r =
                          2 & s[0]
                            ? i.return
                            : s[0]
                            ? i.throw || ((r = i.return) && r.call(i), 0)
                            : i.next) &&
                        !(r = r.call(i, s[1])).done)
                    )
                      return r;
                    switch (((i = 0), r && (s = [2 & s[0], r.value]), s[0])) {
                      case 0:
                      case 1:
                        r = s;
                        break;
                      case 4:
                        return a.label++, { value: s[1], done: !1 };
                      case 5:
                        a.label++, (i = s[1]), (s = [0]);
                        continue;
                      case 7:
                        (s = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(r = (r = a.trys).length > 0 && r[r.length - 1]) &&
                          (6 === s[0] || 2 === s[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === s[0] &&
                          (!r || (s[1] > r[0] && s[1] < r[3]))
                        ) {
                          a.label = s[1];
                          break;
                        }
                        if (6 === s[0] && a.label < r[1]) {
                          (a.label = r[1]), (r = s);
                          break;
                        }
                        if (r && a.label < r[2]) {
                          (a.label = r[2]), a.ops.push(s);
                          break;
                        }
                        r[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    s = e.call(t, a);
                  } catch (t) {
                    (s = [6, t]), (i = 0);
                  } finally {
                    n = r = 0;
                  }
                if (5 & s[0]) throw s[1];
                return { value: s[0] ? s[1] : void 0, done: !0 };
              })([s, o]);
            };
          }
        };
    Object.defineProperty(e, '__esModule', { value: !0 });
    var o = n(13),
      u = n(4),
      c = n(19),
      h = n(30),
      l = n(18),
      p = n(7);
    !(function (t) {
      (t.CLASSNAME = 'CLASSNAME'),
        (t.CSS_SELECTOR = 'CSS_SELECTOR'),
        (t.ID = 'ID'),
        (t.ID_VARIABLE = 'ID_VARIABLE'),
        (t.LINK_TEXT = 'LINK_TEXT'),
        (t.NA = 'NA'),
        (t.NAME = 'NAME'),
        (t.NONE = 'NONE'),
        (t.XPATH = 'XPATH');
    })(e.SelectorType || (e.SelectorType = {}));
    var f = (function (t) {
      function e(e) {
        var n = t.call(this) || this;
        return (
          (n.description = e),
          (n.selector = null),
          (n.variableDefinitions = null),
          n
        );
      }
      return (
        r(e, t),
        (e.prototype.select = function (t) {
          if (null === t) throw new Error('The selector cannot be null');
          return (this.selector = t), this;
        }),
        (e.prototype.with = function (t) {
          return (this.selectorType = t), this;
        }),
        (e.prototype.then = function (t) {
          return (this.action = t), this;
        }),
        (e.prototype.addVariableDefinitions = function (t) {
          return (this.variableDefinitions = t), this;
        }),
        (e.prototype.getSelector = function () {
          return this.selector;
        }),
        (e.prototype.getVariableDefinitions = function () {
          return this.variableDefinitions;
        }),
        (e.prototype.resolveVariables = function (t) {
          return s(this, void 0, void 0, function () {
            var e = this;
            return a(this, function (n) {
              if (null == t)
                throw new Error(
                  this.getStepName() +
                    ' expects a valid variable resolution manager to be provided'
                );
              return [
                2,
                new Promise(function (n, i) {
                  if (
                    null !== e.variableDefinitions &&
                    void 0 !== e.variableDefinitions &&
                    e.variableDefinitions.length > 0
                  ) {
                    var r = e;
                    !(function () {
                      s(this, void 0, void 0, function () {
                        var e, s, o, u, c;
                        return a(this, function (a) {
                          switch (a.label) {
                            case 0:
                              a.trys.push([0, 5, , 6]),
                                (e = 0),
                                (s = r.variableDefinitions),
                                (a.label = 1);
                            case 1:
                              return e < s.length
                                ? ((o = s[e]),
                                  [4, t.resolveVariable(o.getName())])
                                : [3, 4];
                            case 2:
                              (u = a.sent()),
                                r.replaceVariableWithValue(u, o),
                                (a.label = 3);
                            case 3:
                              return e++, [3, 1];
                            case 4:
                              return n(!0), [3, 6];
                            case 5:
                              return (c = a.sent()), i(c), [3, 6];
                            case 6:
                              return [2];
                          }
                        });
                      });
                    })();
                  } else n(!0);
                }),
              ];
            });
          });
        }),
        (e.prototype.replaceVariableWithValue = function (t, n) {
          if (null == t)
            throw new Error('variable must not be null or undefined');
          if (null == n)
            throw new Error('A variable definition must be provided');
          var i = t.getValue(),
            r = n.getInputFormat(),
            s = n.getOutputFormat();
          (null == r && null == s) || (i = e.formatValue(r, s, i));
          var a = '${' + t.getName() + '}';
          if (
            (this.selector instanceof l.StringSelector &&
              this.selector.setValue(this.selector.getValue().replace(a, i)),
            this.action instanceof p.AbstractActionWithValue)
          ) {
            var o = this.action;
            o.setValue(o.getValue().replace(a, i));
          }
        }),
        (e.prototype.isValid = function () {
          return e.isValid(this);
        }),
        (e.validFormat = function (t) {
          return (
            ['M', 'MM', 'MMM', 'MMMM', 'Y', 'YY', 'YYY', 'YYYY'].indexOf(t) > -1
          );
        }),
        (e.formatValue = function (t, n, i, r) {
          if (null != n && !e.validFormat(n))
            throw new Error(
              'The output format of ' + n + ' is not a valid format'
            );
          var s = !1;
          n.indexOf('M') > -1 && (s = !0),
            null == r && (r = c.InputType.STRING);
          var a = void 0;
          return (
            (a = s ? e.getMonthAsNumber(i, r, t) : e.getYearAsNumber(i, r)),
            n.indexOf('M') > -1 ? h().month(a).format(n) : h().year(a).format(n)
          );
        }),
        (e.getMonthAsNumber = function (t, n, i) {
          switch (n) {
            case c.InputType.DATE:
              if (t instanceof Date) return t.getMonth();
              throw new Error('Input was declared a Date, but it is not.');
            case c.InputType.NUMBER:
              if ('number' == typeof t) {
                if (t >= 1 && t <= 12) return t - 1;
                throw new Error('Months can only be between 1 and 12.');
              }
              throw new Error('Input was declared a Number, but it is not.');
            case c.InputType.STRING:
            default:
              if (null != i) {
                if (!e.validFormat(i))
                  throw new Error(
                    'The input format of ' + i + ' is not a valid format'
                  );
              } else i = 'MM';
              var r = h(t + '/01/2000', i + '/DD/YYYY').month();
              if (
                0 === r &&
                '1' !== t &&
                '01' !== t &&
                'jan' !== t.toLowerCase() &&
                'january' !== t.toLowerCase()
              )
                throw new Error(t + ' is not valid');
              return r;
          }
        }),
        (e.getYearAsNumber = function (t, n) {
          switch (n) {
            case c.InputType.DATE:
              if (t instanceof Date) return t.getFullYear();
              throw new Error('Input was declared a Date, but it is not.');
            case c.InputType.NUMBER:
              if ('number' == typeof t) {
                if (t >= 1 && t <= 9999 && t % 1 == 0)
                  return e.getYearAsNumber(t.toString(), c.InputType.STRING);
                throw new Error('Years must be a positive integer');
              }
              throw new Error('Input was declared a Number, but it is not.');
            case c.InputType.STRING:
            default:
              if ('string' != typeof t || isNaN(Number(t)))
                throw new Error('The value of ' + t + ' is not a valid format');
              var i = [null, 'Y', 'YY', 'YYY', 'YYYY'][t.length];
              return h('01/01/' + t, 'MM/DD/' + i).year();
          }
        }),
        (e.isValid = function (t) {
          if (null == t) return !1;
          var e =
              null !== t.selector &&
              void 0 !== t.selector &&
              t.selector.isValid(),
            n = !!e && null !== t.selectorType && void 0 !== t.selectorType;
          return (
            null !== t.action &&
            void 0 !== t.action &&
            null !== t.description &&
            void 0 !== t.description &&
            n &&
            e
          );
        }),
        (e.cast = function (t) {
          if ('string' == typeof t) {
            var e = n(0).safeLoad(t);
            return this.cast(e);
          }
          return u.StepParser.parseNavigationStep(t);
        }),
        e
      );
    })(o.AbstractSimpleStep);
    e.NavigationStep = f;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = n(3),
      r = n(21),
      s = n(15),
      a = n(16),
      o = n(17),
      u = n(24),
      c = n(12),
      h = n(18),
      l = n(19),
      p = n(64),
      f = (function () {
        function t() {}
        return (
          (t.parse = function (e) {
            var i = null;
            'string' == typeof e ? (i = n(0).safeLoad(e)) : (i = e);
            if (
              !i.hasOwnProperty('description') &&
              !i.hasOwnProperty('timeToSleepInMillis')
            )
              throw Error('Not a valid IStep');
            if (i.hasOwnProperty('if') && i.hasOwnProperty('else'))
              return t.parseIfElseStep(i);
            if (i.hasOwnProperty('if') && i.hasOwnProperty('then'))
              return t.parseIFTTTStep(i);
            if (i.hasOwnProperty('timeToSleepInMillis'))
              return t.parseSleepStep(i);
            if (i.hasOwnProperty('select') && i.hasOwnProperty('then'))
              return t.parseNavigationStep(i);
            throw new Error('Unknown Step type');
          }),
          (t.parseIfElseStep = function (e) {
            var n = Object.create(o.IfElseStep.prototype),
              i = t.parse(e.if);
            i.setOptional();
            var r = null;
            e.hasOwnProperty('elseIf') && (r = t.parse(e.elseIf)).setOptional();
            var s = t.parse(e.else);
            void 0 === e.url && (e.url = null);
            var a = t.parseUnless(e.unless);
            return Object.assign(n, {
              description: e.description,
              url: e.url,
              __ifStep: i,
              __elseIfStep: r,
              __elseStep: s,
              unlessCriteria: a,
            });
          }),
          (t.parseIFTTTStep = function (e) {
            var n = Object.create(a.IFTTTStep.prototype),
              i = t.parse(e.if);
            i.setOptional();
            var r = [];
            for (var s in e.then) s && r.push(t.parse(e.then[s]));
            if (r.length < 1)
              throw new Error('There must be at least 1 then step');
            void 0 === e.url && (e.url = null);
            var o = t.parseUnless(e.unless);
            return Object.assign(n, {
              description: e.description,
              url: e.url,
              __ifThis: i,
              __thenThese: r,
              unlessCriteria: o,
            });
          }),
          (t.parseSleepStep = function (e) {
            if (
              null == e ||
              null === e.timeToSleepInMillis ||
              void 0 === e.timeToSleepInMillis
            )
              throw new Error('Invalid sleep step');
            if (
              'number' != typeof e.timeToSleepInMillis &&
              'string' != typeof e.timeToSleepInMillis
            )
              throw new Error('Invalid value for timeToSleepInMillis');
            if ('string' == typeof e.timeToSleepInMillis) {
              var n = parseInt(e.timeToSleepInMillis, 10);
              if (isNaN(n))
                throw new Error(
                  e.timeToSleepInMillis + ' is not a valid number'
                );
              e.timeToSleepInMillis = n;
            }
            var r = t.parseUnless(e.unless),
              a = Object.create(s.SleepStep.prototype);
            return (
              void 0 === e.url && (e.url = null),
              Object.assign(a, {
                description: e.description ? e.description : 'Pause',
                url: e.url,
                selectorType: i.SelectorType.NONE,
                action: new c.SleepAction(e.timeToSleepInMillis),
                timeToSleepInMillis: e.timeToSleepInMillis,
                unlessCriteria: r,
              })
            );
          }),
          (t.parseNavigationStep = function (e) {
            var n,
              r = Object.create(i.NavigationStep.prototype),
              s = t.parseSelector(e.select),
              a = u.ActionParser.parse(e.then),
              o = !1;
            if (null !== e.optional && void 0 !== e.optional)
              if ('string' == typeof e.optional) {
                var c = e.optional.toLowerCase();
                if ('true' === c || 't' === c) o = !0;
                else {
                  if ('false' !== c && 'f' !== c)
                    throw new Error('isOptional must be true or false');
                  o = !1;
                }
              } else {
                if ('boolean' != typeof e.optional)
                  throw new Error('Invalid type for isOptional');
                o = e.optional;
              }
            if (null !== e.vars && void 0 !== e.vars)
              for (var h in ((n = []), e.vars))
                h && n.push(l.VariableDefinition.cast(e.vars[h]));
            void 0 === e.url && (e.url = null);
            var p = t.parseUnless(e.unless);
            return Object.assign(r, {
              description: e.description,
              url: e.url,
              selectorType: e.with,
              selector: s,
              action: a,
              optional: o,
              variableDefinitions: n,
              unlessCriteria: p,
            });
          }),
          (t.parseSelector = function (t) {
            var e = null;
            if (t.hasOwnProperty('value')) e = h.StringSelector.cast(t);
            else if ('string' == typeof t) e = new h.StringSelector(t);
            else {
              if (!t.hasOwnProperty('pattern'))
                throw new Error('Unknown select type');
              e = r.VariableSelector.cast(t);
            }
            return e;
          }),
          (t.parseUnless = function (t) {
            var e = null;
            if (null != t) {
              if (
                (!t.hasOwnProperty('found') && !t.hasOwnProperty('notFound')) ||
                !t.hasOwnProperty('with')
              )
                throw new Error('Invalid format for unless');
              e = p.UnlessSelectionCriteria.cast(t);
            }
            return e;
          }),
          t
        );
      })();
    e.StepParser = f;
  },
  function (t, e, n) {
    'use strict';
    function i(t) {
      return null == t;
    }
    (t.exports.isNothing = i),
      (t.exports.isObject = function (t) {
        return 'object' == typeof t && null !== t;
      }),
      (t.exports.toArray = function (t) {
        return Array.isArray(t) ? t : i(t) ? [] : [t];
      }),
      (t.exports.repeat = function (t, e) {
        var n,
          i = '';
        for (n = 0; n < e; n += 1) i += t;
        return i;
      }),
      (t.exports.isNegativeZero = function (t) {
        return 0 === t && Number.NEGATIVE_INFINITY === 1 / t;
      }),
      (t.exports.extend = function (t, e) {
        var n, i, r, s;
        if (e)
          for (n = 0, i = (s = Object.keys(e)).length; n < i; n += 1)
            t[(r = s[n])] = e[r];
        return t;
      });
  },
  function (t, e, n) {
    'use strict';
    var i = n(5),
      r = n(8),
      s = n(1);
    function a(t, e, n) {
      var i = [];
      return (
        t.include.forEach(function (t) {
          n = a(t, e, n);
        }),
        t[e].forEach(function (t) {
          n.forEach(function (e, n) {
            e.tag === t.tag && e.kind === t.kind && i.push(n);
          }),
            n.push(t);
        }),
        n.filter(function (t, e) {
          return -1 === i.indexOf(e);
        })
      );
    }
    function o(t) {
      (this.include = t.include || []),
        (this.implicit = t.implicit || []),
        (this.explicit = t.explicit || []),
        this.implicit.forEach(function (t) {
          if (t.loadKind && 'scalar' !== t.loadKind)
            throw new r(
              'There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.'
            );
        }),
        (this.compiledImplicit = a(this, 'implicit', [])),
        (this.compiledExplicit = a(this, 'explicit', [])),
        (this.compiledTypeMap = (function () {
          var t,
            e,
            n = { scalar: {}, sequence: {}, mapping: {}, fallback: {} };
          function i(t) {
            n[t.kind][t.tag] = n.fallback[t.tag] = t;
          }
          for (t = 0, e = arguments.length; t < e; t += 1)
            arguments[t].forEach(i);
          return n;
        })(this.compiledImplicit, this.compiledExplicit));
    }
    (o.DEFAULT = null),
      (o.create = function () {
        var t, e;
        switch (arguments.length) {
          case 1:
            (t = o.DEFAULT), (e = arguments[0]);
            break;
          case 2:
            (t = arguments[0]), (e = arguments[1]);
            break;
          default:
            throw new r('Wrong number of arguments for Schema.create function');
        }
        if (
          ((t = i.toArray(t)),
          (e = i.toArray(e)),
          !t.every(function (t) {
            return t instanceof o;
          }))
        )
          throw new r(
            'Specified list of super schemas (or a single Schema object) contains a non-Schema object.'
          );
        if (
          !e.every(function (t) {
            return t instanceof s;
          })
        )
          throw new r(
            'Specified list of YAML types (or a single Type object) contains a non-Type object.'
          );
        return new o({ include: t, explicit: e });
      }),
      (t.exports = o);
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = n(2),
      r = (function () {
        function t() {}
        return (
          (t.prototype.setValue = function (t) {
            this.value = t;
          }),
          (t.prototype.getValue = function () {
            return this.value;
          }),
          (t.prototype.getActionType = function () {
            return this.actionType;
          }),
          (t.prototype.isValid = function () {
            return (
              null !== this.value &&
              void 0 !== this.value &&
              null !== this.actionType &&
              void 0 !== this.actionType &&
              Object.values(i.ActionType).includes(this.actionType)
            );
          }),
          t
        );
      })();
    e.AbstractActionWithValue = r;
  },
  function (t, e, n) {
    'use strict';
    function i(t, e) {
      Error.call(this),
        (this.name = 'YAMLException'),
        (this.reason = t),
        (this.mark = e),
        (this.message =
          (this.reason || '(unknown reason)') +
          (this.mark ? ' ' + this.mark.toString() : '')),
        Error.captureStackTrace
          ? Error.captureStackTrace(this, this.constructor)
          : (this.stack = new Error().stack || '');
    }
    (i.prototype = Object.create(Error.prototype)),
      (i.prototype.constructor = i),
      (i.prototype.toString = function (t) {
        var e = this.name + ': ';
        return (
          (e += this.reason || '(unknown reason)'),
          !t && this.mark && (e += ' ' + this.mark.toString()),
          e
        );
      }),
      (t.exports = i);
  },
  function (t, e, n) {
    'use strict';
    var i = n(6);
    t.exports = new i({
      include: [n(22)],
      implicit: [n(46), n(47)],
      explicit: [n(48), n(54), n(55), n(56)],
    });
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = (function () {
      function t() {
        (this.optional = !1),
          (this.successfullyRun = !1),
          (this.description = null),
          (this.url = null),
          (this.unlessCriteria = null),
          (this.failureReason = null);
      }
      return (
        (t.prototype.getDescription = function () {
          return this.description;
        }),
        (t.prototype.getStepName = function () {
          return this.description
            .trim()
            .replace(new RegExp(' ', 'g'), '')
            .replace(new RegExp("'", 'g'), '');
        }),
        (t.prototype.isOptional = function () {
          return this.optional;
        }),
        (t.prototype.setOptional = function () {
          return (this.optional = !0), this;
        }),
        (t.prototype.getUrl = function () {
          return this.url;
        }),
        (t.prototype.setUrl = function (t) {
          return (this.url = t), this;
        }),
        (t.prototype.isSuccessfullyRun = function () {
          return this.successfullyRun;
        }),
        (t.prototype.setSuccessfullyRun = function (t) {
          return (this.successfullyRun = t), this;
        }),
        (t.prototype.getFailureReason = function () {
          return this.failureReason;
        }),
        (t.prototype.setFailureReason = function (t) {
          return (this.failureReason = t), this;
        }),
        (t.prototype.unless = function (t) {
          this.unlessCriteria = t;
        }),
        (t.prototype.getUnless = function () {
          return this.unlessCriteria;
        }),
        t
      );
    })();
    e.AbstractStep = i;
  },
  function (t, e, n) {
    'use strict';
    var i = n(6);
    t.exports = i.DEFAULT = new i({
      include: [n(9)],
      explicit: [n(57), n(58), n(59)],
    });
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = n(2),
      r = (function () {
        function t(t) {
          (this.actionType = i.ActionType.SLEEP),
            (this.timeToSleepInMillis = t);
        }
        return (
          (t.prototype.getActionType = function () {
            return this.actionType;
          }),
          (t.prototype.getTimeToSleepInMillis = function () {
            return this.timeToSleepInMillis;
          }),
          (t.prototype.isValid = function () {
            var t = null !== this.actionType && void 0 !== this.actionType,
              e =
                null !== this.timeToSleepInMillis &&
                void 0 !== this.timeToSleepInMillis;
            return t && e;
          }),
          (t.cast = function (e) {
            if ('string' == typeof e) {
              var r = n(0).safeLoad(e);
              return this.cast(r);
            }
            var s = Object.create(t.prototype);
            if (!Object.values(i.ActionType).includes(e.type))
              throw new Error(e.type + ' is not a valid type');
            if (
              null === e.timeToSleepInMillis ||
              void 0 === e.timeToSleepInMillis ||
              ('number' != typeof e.timeToSleepInMillis &&
                'string' != typeof e.timeToSleepInMillis)
            )
              throw new Error('A timeToSleepInMillis must be provided');
            if ('string' == typeof e.timeToSleepInMillis) {
              var a = parseInt(e.timeToSleepInMillis, 10);
              if (isNaN(a))
                throw new Error(
                  e.timeToSleepInMillis + ' is not a valid number'
                );
              e.timeToSleepInMillis = a;
            }
            return Object.assign(s, {
              actionType: e.type,
              timeToSleepInMillis: e.timeToSleepInMillis,
            });
          }),
          t
        );
      })();
    e.SleepAction = r;
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = (function (t) {
      function e() {
        var e = t.call(this) || this;
        return (e.selectorType = null), (e.action = null), e;
      }
      return (
        r(e, t),
        (e.prototype.getSelectorType = function () {
          return this.selectorType;
        }),
        (e.prototype.getAction = function () {
          return this.action;
        }),
        e
      );
    })(n(10).AbstractStep);
    e.AbstractSimpleStep = s;
  },
  function (t, e, n) {
    'use strict';
    var i = n(6);
    t.exports = new i({ explicit: [n(39), n(40), n(41)] });
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(13),
      a = n(3),
      o = n(12),
      u = n(4),
      c = (function (t) {
        function e(e) {
          var n = t.call(this) || this;
          return (
            (n.timeToSleepInMillis = e),
            (n.selectorType = a.SelectorType.NONE),
            (n.action = new o.SleepAction(e)),
            (n.description = 'Pause'),
            n
          );
        }
        return (
          r(e, t),
          (e.prototype.getTimeToSleepInMillis = function () {
            return this.timeToSleepInMillis;
          }),
          (e.prototype.setOptional = function () {
            throw new Error('Not Implemented');
          }),
          (e.prototype.isValid = function () {
            return (
              null !== this.timeToSleepInMillis &&
              void 0 !== this.timeToSleepInMillis &&
              this.timeToSleepInMillis > -1
            );
          }),
          (e.cast = function (t) {
            if ('string' == typeof t) {
              var e = n(0).safeLoad(t);
              return this.cast(e);
            }
            return u.StepParser.parseSleepStep(t);
          }),
          e
        );
      })(s.AbstractSimpleStep);
    e.SleepStep = c;
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(10),
      a = n(4),
      o = (function (t) {
        function e(e) {
          var n = t.call(this) || this;
          return (n.description = e), n;
        }
        return (
          r(e, t),
          (e.prototype.ifThis = function (t) {
            return t.setOptional(), (this.__ifThis = t), this;
          }),
          (e.prototype.then = function (t) {
            return (
              (null !== this.__thenThese && void 0 !== this.__thenThese) ||
                (this.__thenThese = []),
              this.__thenThese.push(t),
              this
            );
          }),
          (e.prototype.isValid = function () {
            return (
              null != this.__ifThis &&
              null != this.__thenThese &&
              this.__thenThese.length > 0
            );
          }),
          (e.prototype.getIfThis = function () {
            return this.__ifThis;
          }),
          (e.prototype.getThenThese = function () {
            return this.__thenThese;
          }),
          (e.cast = function (t) {
            if ('string' == typeof t) {
              var e = n(0).safeLoad(t);
              return this.cast(e);
            }
            return a.StepParser.parseIFTTTStep(t);
          }),
          e
        );
      })(s.AbstractStep);
    e.IFTTTStep = o;
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(10),
      a = n(4),
      o = (function (t) {
        function e(e) {
          var n = t.call(this) || this;
          return (n.description = e), n;
        }
        return (
          r(e, t),
          (e.prototype.ifStep = function (t) {
            return t.setOptional(), (this.__ifStep = t), this;
          }),
          (e.prototype.elseIfStep = function (t) {
            return t.setOptional(), (this.__elseIfStep = t), this;
          }),
          (e.prototype.elseStep = function (t) {
            return (this.__elseStep = t), this;
          }),
          (e.prototype.isValid = function () {
            return null != this.__ifStep && null != this.__elseStep;
          }),
          (e.prototype.getIfStep = function () {
            return this.__ifStep;
          }),
          (e.prototype.getElseIfStep = function () {
            return this.__elseIfStep;
          }),
          (e.prototype.getElseStep = function () {
            return this.__elseStep;
          }),
          (e.cast = function (t) {
            if ('string' == typeof t) {
              var e = n(0).safeLoad(t);
              return this.cast(e);
            }
            return a.StepParser.parseIfElseStep(t);
          }),
          e
        );
      })(s.AbstractStep);
    e.IfElseStep = o;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = (function () {
      function t(t) {
        this.value = t;
      }
      return (
        (t.prototype.setValue = function (t) {
          this.value = t;
        }),
        (t.prototype.getValue = function () {
          return this.value;
        }),
        (t.prototype.isValid = function () {
          return (
            null !== this.value &&
            void 0 !== this.value &&
            this.value.length > 0
          );
        }),
        (t.cast = function (e) {
          if ('string' == typeof e) {
            var i = n(0).safeLoad(e);
            return this.cast(i);
          }
          var r = Object.create(t.prototype);
          if (
            null === e.value ||
            void 0 === e.value ||
            'string' != typeof e.value ||
            e.value.length <= 0
          )
            throw new Error(
              'value must be a string with at least one character'
            );
          return Object.assign(r, { value: e.value });
        }),
        t
      );
    })();
    e.StringSelector = i;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i,
      r = n(3);
    !(function (t) {
      (t.DATE = 'DATE'), (t.NUMBER = 'NUMBER'), (t.STRING = 'STRING');
    })((i = e.InputType || (e.InputType = {})));
    var s = (function () {
      function t(t) {
        this.name = t;
      }
      return (
        (t.prototype.withInputFormat = function (t) {
          return (this.inputFormat = t), this;
        }),
        (t.prototype.withInputType = function (t) {
          return (this.inputType = t), this;
        }),
        (t.prototype.withOutputFormat = function (t) {
          return (this.outputFormat = t), this;
        }),
        (t.prototype.getName = function () {
          return this.name;
        }),
        (t.prototype.getInputFormat = function () {
          return this.inputFormat;
        }),
        (t.prototype.getInputType = function () {
          return null === this.inputType || void 0 === this.inputType
            ? i.STRING
            : this.inputType;
        }),
        (t.prototype.getOutputFormat = function () {
          return this.outputFormat;
        }),
        (t.prototype.isValid = function () {
          var t = !0;
          null !== this.inputFormat &&
            void 0 !== this.inputFormat &&
            (t = r.NavigationStep.validFormat(this.inputFormat));
          var e = !0;
          null !== this.inputType &&
            void 0 !== this.inputType &&
            (e = Object.values(i).includes(this.inputType));
          var n = !0;
          return (
            null !== this.outputFormat &&
              void 0 !== this.outputFormat &&
              (n = r.NavigationStep.validFormat(this.outputFormat)),
            null !== this.name &&
              void 0 !== this.name &&
              this.name.length > 0 &&
              n &&
              e &&
              t
          );
        }),
        (t.cast = function (e) {
          if ('string' == typeof e) {
            var r = n(0).safeLoad(e);
            return this.cast(r);
          }
          var s = Object.create(t.prototype);
          if (null === e.name || void 0 === e.name || e.name.length < 1)
            throw new Error('A name must be provided');
          if (
            (void 0 === e.inputFormat && (e.inputFormat = null),
            void 0 === e.inputType)
          )
            e.inputType = null;
          else if (!Object.values(i).includes(e.inputType))
            throw new Error(e.inputType + ' is not a valid type');
          return (
            void 0 === e.outputFormat && (e.outputFormat = null),
            Object.assign(s, {
              name: e.name,
              inputFormat: e.inputFormat,
              inputType: e.inputType,
              outputFormat: e.outputFormat,
            })
          );
        }),
        t
      );
    })();
    e.VariableDefinition = s;
  },
  function (t, e, n) {
    'use strict';
    var i =
        (this && this.__awaiter) ||
        function (t, e, n, i) {
          return new (n || (n = Promise))(function (r, s) {
            function a(t) {
              try {
                u(i.next(t));
              } catch (t) {
                s(t);
              }
            }
            function o(t) {
              try {
                u(i.throw(t));
              } catch (t) {
                s(t);
              }
            }
            function u(t) {
              t.done
                ? r(t.value)
                : new n(function (e) {
                    e(t.value);
                  }).then(a, o);
            }
            u((i = i.apply(t, e || [])).next());
          });
        },
      r =
        (this && this.__generator) ||
        function (t, e) {
          var n,
            i,
            r,
            s,
            a = {
              label: 0,
              sent: function () {
                if (1 & r[0]) throw r[1];
                return r[1];
              },
              trys: [],
              ops: [],
            };
          return (
            (s = { next: o(0), throw: o(1), return: o(2) }),
            'function' == typeof Symbol &&
              (s[Symbol.iterator] = function () {
                return this;
              }),
            s
          );
          function o(s) {
            return function (o) {
              return (function (s) {
                if (n) throw new TypeError('Generator is already executing.');
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      i &&
                        (r =
                          2 & s[0]
                            ? i.return
                            : s[0]
                            ? i.throw || ((r = i.return) && r.call(i), 0)
                            : i.next) &&
                        !(r = r.call(i, s[1])).done)
                    )
                      return r;
                    switch (((i = 0), r && (s = [2 & s[0], r.value]), s[0])) {
                      case 0:
                      case 1:
                        r = s;
                        break;
                      case 4:
                        return a.label++, { value: s[1], done: !1 };
                      case 5:
                        a.label++, (i = s[1]), (s = [0]);
                        continue;
                      case 7:
                        (s = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(r = (r = a.trys).length > 0 && r[r.length - 1]) &&
                          (6 === s[0] || 2 === s[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === s[0] &&
                          (!r || (s[1] > r[0] && s[1] < r[3]))
                        ) {
                          a.label = s[1];
                          break;
                        }
                        if (6 === s[0] && a.label < r[1]) {
                          (a.label = r[1]), (r = s);
                          break;
                        }
                        if (r && a.label < r[2]) {
                          (a.label = r[2]), a.ops.push(s);
                          break;
                        }
                        r[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    s = e.call(t, a);
                  } catch (t) {
                    (s = [6, t]), (i = 0);
                  } finally {
                    n = r = 0;
                  }
                if (5 & s[0]) throw s[1];
                return { value: s[0] ? s[1] : void 0, done: !0 };
              })([s, o]);
            };
          }
        };
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(3),
      a = n(2),
      o = (function () {
        function t() {}
        return (
          (t.prototype.setup = function (t) {
            return Promise.resolve(!0);
          }),
          (t.prototype.teardown = function (t) {
            return Promise.resolve(!0);
          }),
          (t.prototype.findElement = function (t) {
            var e = this.getSelectorFunction(t);
            return null === e ? null : e();
          }),
          (t.prototype.performAction = function (t, e) {
            return null === t || null === e ? Promise.resolve(!1) : e(t);
          }),
          (t.prototype.findElementAndPerformAction = function (t, e) {
            return i(this, void 0, void 0, function () {
              var n, i, s;
              return r(this, function (r) {
                (n = this.getActionForNavigationStep(t)), (i = this);
                try {
                  return (
                    (s = 15),
                    e && (s = 5),
                    [
                      2,
                      i.findElementWithTimeout(t, s).then(
                        function (t) {
                          return i.performAction(t, n);
                        },
                        function (t) {
                          return Promise.reject(t);
                        }
                      ),
                    ]
                  );
                } catch (t) {
                  return [2, Promise.reject(t)];
                }
                return [2];
              });
            });
          }),
          (t.prototype.getActionForNavigationStep = function (t) {
            if (!s.NavigationStep.isValid(t))
              throw new Error(
                'getActionForNavigationStep called with an invalid step'
              );
            switch (t.getAction().getActionType()) {
              case a.ActionType.CLICK:
                return this.getClickAction(t);
              case a.ActionType.CONFIRM_PRESENCE:
                return this.getConfirmPresenceAction(t);
              case a.ActionType.CONTEXT_SWITCH:
                return this.getContextSwitchAction(t);
              case a.ActionType.SELECT:
                return this.getSelectAction(t);
              case a.ActionType.ENTER_TEXT:
                return this.getEnterTextAction(t);
              case a.ActionType.SUBMIT:
                return this.getSubmitAction(t);
              case a.ActionType.SLIDE:
                return this.getSlideAction(t);
              case a.ActionType.CONTAINS_TEXT:
                return this.getContainsTextAction(t);
              case a.ActionType.SLEEP:
              case a.ActionType.NONE:
              default:
                return null;
            }
          }),
          (t.prototype.getSelectorFunction = function (e) {
            if (e.selectorType === s.SelectorType.ID_VARIABLE) {
              for (
                var n = this.getSelectorFunctionByType(
                  s.SelectorType.ID,
                  e.selector.getNextSelector()
                );
                !t.isElementPresent(n);

              )
                n = this.getSelectorFunctionByType(
                  s.SelectorType.ID,
                  e.selector.getNextSelector()
                );
              return n;
            }
            return this.getSelectorFunctionByType(
              e.selectorType,
              e.selector.getValue()
            );
          }),
          (t.prototype.shouldShortCircuitStep = function (t) {
            var e = null,
              n = !1,
              i = !1;
            return (
              null !== t &&
                t.found &&
                (n =
                  null != (e = this.findElement(t)) &&
                  !e.hidden &&
                  !e.disabled),
              null === t ||
                t.found ||
                (i =
                  null == (e = this.findElement(t)) || e.hidden || e.disabled),
              n || i
            );
          }),
          (t.isElementPresent = function (t) {
            var e = t();
            return null != e;
          }),
          (t.getLineageOfElement = function (t) {
            for (var e = [], n = t; 'BODY' !== n.tagName; ) {
              var i = n.parentNode;
              e.push(i), (n = i);
            }
            for (var r = Array.from(t.children), s = Array(); r.length > 0; ) {
              for (var a = 0, o = r; a < o.length; a++) {
                var u = o[a];
                s = s.concat(Array.from(u.children));
              }
              (e = e.concat(r)), (r = s), (s = Array());
            }
            return e;
          }),
          t
        );
      })();
    e.AbstractExecutionEngine = o;
  },
  function (t, e, n) {
    'use strict';
    var i;
    Object.defineProperty(e, '__esModule', { value: !0 }),
      (function (t) {
        (t.ALPHABETICAL_UPPERCASE_CHAR = 'ALPHABETICAL_UPPERCASE_CHAR'),
          (t.NUMERICAL_SINGLE = 'NUMERICAL_SINGLE');
      })((i = e.VariationType || (e.VariationType = {})));
    var r = (function () {
      function t(e, n) {
        if (!t.isPatternValid(e))
          throw new Error(
            'The pattern must contain the substring <VAR> somewhere in it.'
          );
        (this.pattern = e), (this.variationType = n);
      }
      return (
        (t.prototype.getNextSelector = function () {
          var t = this.getNextVariableValue();
          return this.pattern.split('<VAR>').join(t);
        }),
        (t.prototype.getNextVariableValue = function () {
          switch (this.variationType) {
            case i.ALPHABETICAL_UPPERCASE_CHAR:
              return this.getNextAlphabeticUppercaseValue();
            case i.NUMERICAL_SINGLE:
            default:
              return this.getNextNumericValue();
          }
        }),
        (t.prototype.getNextAlphabeticUppercaseValue = function () {
          if (null == this.lastUsedValue || 0 === this.lastUsedValue.length)
            this.lastUsedValue = 'A';
          else {
            var t = this.lastUsedValue.charAt(0).charCodeAt(0);
            this.lastUsedValue = String.fromCharCode(t + 1).toString();
          }
          return this.lastUsedValue;
        }),
        (t.prototype.getNextNumericValue = function () {
          if (null == this.lastUsedValue || 0 === this.lastUsedValue.length)
            this.lastUsedValue = '1';
          else {
            var t = parseInt(this.lastUsedValue, 10);
            this.lastUsedValue = String(t + 1).toString();
          }
          return this.lastUsedValue;
        }),
        (t.prototype.getPattern = function () {
          return this.pattern;
        }),
        (t.prototype.getVariationType = function () {
          return this.variationType;
        }),
        (t.prototype.isValid = function () {
          return (
            t.isPatternValid(this.pattern) &&
            null !== this.variationType &&
            void 0 !== this.variationType
          );
        }),
        (t.isPatternValid = function (t) {
          return null != t && -1 !== t.indexOf('<VAR');
        }),
        (t.cast = function (e) {
          if ('string' == typeof e) {
            var r = n(0).safeLoad(e);
            return this.cast(r);
          }
          if (!t.isPatternValid(e.pattern))
            throw new Error('Must contain a valid pattern');
          if (
            null === e.type ||
            void 0 === e.type ||
            !Object.values(i).includes(e.type)
          )
            throw new Error('Must contain a valid type');
          var s = Object.create(t.prototype);
          return Object.assign(s, {
            pattern: e.pattern,
            variationType: e.type,
          });
        }),
        t
      );
    })();
    e.VariableSelector = r;
  },
  function (t, e, n) {
    'use strict';
    var i = n(6);
    t.exports = new i({ include: [n(23)] });
  },
  function (t, e, n) {
    'use strict';
    var i = n(6);
    t.exports = new i({
      include: [n(14)],
      implicit: [n(42), n(43), n(44), n(45)],
    });
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = n(25),
      r = n(26),
      s = n(27),
      a = n(12),
      o = n(28),
      u = n(62),
      c = n(63),
      h = (function () {
        function t() {}
        return (
          (t.parse = function (t) {
            var e = null;
            'string' == typeof t ? (e = n(0).safeLoad(t)) : (e = t);
            if (!e.hasOwnProperty('type')) throw Error('Not a valid IAction');
            return e.hasOwnProperty('text')
              ? i.TextEntryAction.cast(e)
              : e.hasOwnProperty('valueToSelect')
              ? r.SelectAction.cast(e)
              : e.hasOwnProperty('navigationStep')
              ? s.IFrameNavigationAction.cast(e)
              : e.hasOwnProperty('timeToSleepInMillis')
              ? a.SleepAction.cast(e)
              : e.hasOwnProperty('valueToSlideTo')
              ? u.SlideAction.cast(e)
              : e.hasOwnProperty('searchText')
              ? c.ContainsTextAction.cast(e)
              : o.NavigationAction.cast(e);
          }),
          t
        );
      })();
    e.ActionParser = h;
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(2),
      a = (function (t) {
        function e(e) {
          var n = t.call(this) || this;
          return (n.actionType = s.ActionType.ENTER_TEXT), (n.value = e), n;
        }
        return (
          r(e, t),
          (e.cast = function (t) {
            if ('string' == typeof t) {
              var i = n(0).safeLoad(t);
              return this.cast(i);
            }
            var r = Object.create(e.prototype);
            if (!Object.values(s.ActionType).includes(t.type))
              throw new Error(t.type + ' is not a valid type');
            if (
              null === t.text ||
              void 0 === t.text ||
              'string' != typeof t.text ||
              t.text.length < 1
            )
              throw new Error('A valueToSelect must be provided');
            return Object.assign(r, { actionType: t.type, value: t.text });
          }),
          e
        );
      })(n(7).AbstractActionWithValue);
    e.TextEntryAction = a;
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(2),
      a = (function (t) {
        function e(e) {
          var n = t.call(this) || this;
          return (n.actionType = s.ActionType.SELECT), (n.value = e), n;
        }
        return (
          r(e, t),
          (e.cast = function (t) {
            if ('string' == typeof t) {
              var i = n(0).safeLoad(t);
              return this.cast(i);
            }
            var r = Object.create(e.prototype);
            if (!Object.values(s.ActionType).includes(t.type))
              throw new Error(t.type + ' is not a valid type');
            if (
              null === t.valueToSelect ||
              void 0 === t.valueToSelect ||
              'string' != typeof t.valueToSelect ||
              t.valueToSelect.length < 1
            )
              throw new Error('A valueToSelect must be provided');
            return Object.assign(r, {
              actionType: t.type,
              value: t.valueToSelect,
            });
          }),
          e
        );
      })(n(7).AbstractActionWithValue);
    e.SelectAction = a;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = n(2),
      r = n(3),
      s = (function () {
        function t(t, e) {
          (this.actionType = t), (this.iFrameNavigationStep = e);
        }
        return (
          (t.prototype.getActionType = function () {
            return this.actionType;
          }),
          (t.prototype.getiFrameNavigationStep = function () {
            return this.iFrameNavigationStep;
          }),
          (t.prototype.isValid = function () {
            var t =
                null !== this.actionType &&
                void 0 !== this.actionType &&
                Object.values(i.ActionType).includes(this.actionType),
              e =
                null !== this.iFrameNavigationStep &&
                void 0 !== this.iFrameNavigationStep &&
                this.iFrameNavigationStep.isValid();
            return t && e;
          }),
          (t.cast = function (e) {
            if ('string' == typeof e) {
              var s = n(0).safeLoad(e);
              return this.cast(s);
            }
            var a = Object.create(t.prototype);
            if (!Object.values(i.ActionType).includes(e.type))
              throw new Error(e.type + ' is not a valid type');
            return Object.assign(a, {
              actionType: e.type,
              iFrameNavigationStep: r.NavigationStep.cast(e.navigationStep),
            });
          }),
          t
        );
      })();
    e.IFrameNavigationAction = s;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = n(2),
      r = (function () {
        function t(t) {
          this.actionType = t;
        }
        return (
          (t.prototype.getActionType = function () {
            return this.actionType;
          }),
          (t.prototype.isValid = function () {
            return (
              null !== this.actionType &&
              void 0 !== this.actionType &&
              Object.values(i.ActionType).includes(this.actionType)
            );
          }),
          (t.cast = function (e) {
            if ('string' == typeof e) {
              var r = n(0).safeLoad(e);
              return this.cast(r);
            }
            var s = Object.create(t.prototype);
            if (!Object.values(i.ActionType).includes(e.type))
              throw new Error(e.type + ' is not a valid type');
            return Object.assign(s, { actionType: e.type });
          }),
          t
        );
      })();
    e.NavigationAction = r;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = (function () {
      function t(t, e) {
        (this._selector = t), (this._selectorType = e);
      }
      return (
        Object.defineProperty(t.prototype, 'selector', {
          get: function () {
            return this._selector;
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(t.prototype, 'selectorType', {
          get: function () {
            return this._selectorType;
          },
          enumerable: !0,
          configurable: !0,
        }),
        t
      );
    })();
    e.SelectionCriteria = i;
  },
  function (t, e, n) {
    (function (t) {
      t.exports = (function () {
        'use strict';
        var e, n;
        function i() {
          return e.apply(null, arguments);
        }
        function r(t) {
          return (
            t instanceof Array ||
            '[object Array]' === Object.prototype.toString.call(t)
          );
        }
        function s(t) {
          return (
            null != t && '[object Object]' === Object.prototype.toString.call(t)
          );
        }
        function a(t) {
          return void 0 === t;
        }
        function o(t) {
          return (
            'number' == typeof t ||
            '[object Number]' === Object.prototype.toString.call(t)
          );
        }
        function u(t) {
          return (
            t instanceof Date ||
            '[object Date]' === Object.prototype.toString.call(t)
          );
        }
        function c(t, e) {
          var n,
            i = [];
          for (n = 0; n < t.length; ++n) i.push(e(t[n], n));
          return i;
        }
        function h(t, e) {
          return Object.prototype.hasOwnProperty.call(t, e);
        }
        function l(t, e) {
          for (var n in e) h(e, n) && (t[n] = e[n]);
          return (
            h(e, 'toString') && (t.toString = e.toString),
            h(e, 'valueOf') && (t.valueOf = e.valueOf),
            t
          );
        }
        function p(t, e, n, i) {
          return Te(t, e, n, i, !0).utc();
        }
        function f(t) {
          return (
            null == t._pf &&
              (t._pf = {
                empty: !1,
                unusedTokens: [],
                unusedInput: [],
                overflow: -2,
                charsLeftOver: 0,
                nullInput: !1,
                invalidMonth: null,
                invalidFormat: !1,
                userInvalidated: !1,
                iso: !1,
                parsedDateParts: [],
                meridiem: null,
                rfc2822: !1,
                weekdayMismatch: !1,
              }),
            t._pf
          );
        }
        function d(t) {
          if (null == t._isValid) {
            var e = f(t),
              i = n.call(e.parsedDateParts, function (t) {
                return null != t;
              }),
              r =
                !isNaN(t._d.getTime()) &&
                e.overflow < 0 &&
                !e.empty &&
                !e.invalidMonth &&
                !e.invalidWeekday &&
                !e.weekdayMismatch &&
                !e.nullInput &&
                !e.invalidFormat &&
                !e.userInvalidated &&
                (!e.meridiem || (e.meridiem && i));
            if (
              (t._strict &&
                (r =
                  r &&
                  0 === e.charsLeftOver &&
                  0 === e.unusedTokens.length &&
                  void 0 === e.bigHour),
              null != Object.isFrozen && Object.isFrozen(t))
            )
              return r;
            t._isValid = r;
          }
          return t._isValid;
        }
        function m(t) {
          var e = p(NaN);
          return null != t ? l(f(e), t) : (f(e).userInvalidated = !0), e;
        }
        n = Array.prototype.some
          ? Array.prototype.some
          : function (t) {
              for (var e = Object(this), n = e.length >>> 0, i = 0; i < n; i++)
                if (i in e && t.call(this, e[i], i, e)) return !0;
              return !1;
            };
        var y = (i.momentProperties = []);
        function v(t, e) {
          var n, i, r;
          if (
            (a(e._isAMomentObject) || (t._isAMomentObject = e._isAMomentObject),
            a(e._i) || (t._i = e._i),
            a(e._f) || (t._f = e._f),
            a(e._l) || (t._l = e._l),
            a(e._strict) || (t._strict = e._strict),
            a(e._tzm) || (t._tzm = e._tzm),
            a(e._isUTC) || (t._isUTC = e._isUTC),
            a(e._offset) || (t._offset = e._offset),
            a(e._pf) || (t._pf = f(e)),
            a(e._locale) || (t._locale = e._locale),
            y.length > 0)
          )
            for (n = 0; n < y.length; n++)
              (i = y[n]), a((r = e[i])) || (t[i] = r);
          return t;
        }
        var g = !1;
        function x(t) {
          v(this, t),
            (this._d = new Date(null != t._d ? t._d.getTime() : NaN)),
            this.isValid() || (this._d = new Date(NaN)),
            !1 === g && ((g = !0), i.updateOffset(this), (g = !1));
        }
        function D(t) {
          return t instanceof x || (null != t && null != t._isAMomentObject);
        }
        function S(t) {
          return t < 0 ? Math.ceil(t) || 0 : Math.floor(t);
        }
        function E(t) {
          var e = +t,
            n = 0;
          return 0 !== e && isFinite(e) && (n = S(e)), n;
        }
        function w(t, e, n) {
          var i,
            r = Math.min(t.length, e.length),
            s = Math.abs(t.length - e.length),
            a = 0;
          for (i = 0; i < r; i++)
            ((n && t[i] !== e[i]) || (!n && E(t[i]) !== E(e[i]))) && a++;
          return a + s;
        }
        function A(t) {
          !1 === i.suppressDeprecationWarnings &&
            'undefined' != typeof console &&
            console.warn &&
            console.warn('Deprecation warning: ' + t);
        }
        function C(t, e) {
          var n = !0;
          return l(function () {
            if (
              (null != i.deprecationHandler && i.deprecationHandler(null, t), n)
            ) {
              for (var r, s = [], a = 0; a < arguments.length; a++) {
                if (((r = ''), 'object' == typeof arguments[a])) {
                  for (var o in ((r += '\n[' + a + '] '), arguments[0]))
                    r += o + ': ' + arguments[0][o] + ', ';
                  r = r.slice(0, -2);
                } else r = arguments[a];
                s.push(r);
              }
              A(
                t +
                  '\nArguments: ' +
                  Array.prototype.slice.call(s).join('') +
                  '\n' +
                  new Error().stack
              ),
                (n = !1);
            }
            return e.apply(this, arguments);
          }, e);
        }
        var b,
          F = {};
        function k(t, e) {
          null != i.deprecationHandler && i.deprecationHandler(t, e),
            F[t] || (A(e), (F[t] = !0));
        }
        function T(t) {
          return (
            t instanceof Function ||
            '[object Function]' === Object.prototype.toString.call(t)
          );
        }
        function _(t, e) {
          var n,
            i = l({}, t);
          for (n in e)
            h(e, n) &&
              (s(t[n]) && s(e[n])
                ? ((i[n] = {}), l(i[n], t[n]), l(i[n], e[n]))
                : null != e[n]
                ? (i[n] = e[n])
                : delete i[n]);
          for (n in t) h(t, n) && !h(e, n) && s(t[n]) && (i[n] = l({}, i[n]));
          return i;
        }
        function M(t) {
          null != t && this.set(t);
        }
        (i.suppressDeprecationWarnings = !1),
          (i.deprecationHandler = null),
          (b = Object.keys
            ? Object.keys
            : function (t) {
                var e,
                  n = [];
                for (e in t) h(t, e) && n.push(e);
                return n;
              });
        var P = {};
        function I(t, e) {
          var n = t.toLowerCase();
          P[n] = P[n + 's'] = P[e] = t;
        }
        function O(t) {
          return 'string' == typeof t ? P[t] || P[t.toLowerCase()] : void 0;
        }
        function N(t) {
          var e,
            n,
            i = {};
          for (n in t) h(t, n) && (e = O(n)) && (i[e] = t[n]);
          return i;
        }
        var B = {};
        function L(t, e) {
          B[t] = e;
        }
        function U(t, e, n) {
          var i = '' + Math.abs(t),
            r = e - i.length,
            s = t >= 0;
          return (
            (s ? (n ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, r)).toString().substr(1) +
            i
          );
        }
        var R =
            /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
          Y = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
          j = {},
          X = {};
        function V(t, e, n, i) {
          var r = i;
          'string' == typeof i &&
            (r = function () {
              return this[i]();
            }),
            t && (X[t] = r),
            e &&
              (X[e[0]] = function () {
                return U(r.apply(this, arguments), e[1], e[2]);
              }),
            n &&
              (X[n] = function () {
                return this.localeData().ordinal(r.apply(this, arguments), t);
              });
        }
        function J(t, e) {
          return t.isValid()
            ? ((e = z(e, t.localeData())),
              (j[e] =
                j[e] ||
                (function (t) {
                  var e,
                    n,
                    i,
                    r = t.match(R);
                  for (e = 0, n = r.length; e < n; e++)
                    X[r[e]]
                      ? (r[e] = X[r[e]])
                      : (r[e] = (i = r[e]).match(/\[[\s\S]/)
                          ? i.replace(/^\[|\]$/g, '')
                          : i.replace(/\\/g, ''));
                  return function (e) {
                    var i,
                      s = '';
                    for (i = 0; i < n; i++)
                      s += T(r[i]) ? r[i].call(e, t) : r[i];
                    return s;
                  };
                })(e)),
              j[e](t))
            : t.localeData().invalidDate();
        }
        function z(t, e) {
          var n = 5;
          function i(t) {
            return e.longDateFormat(t) || t;
          }
          for (Y.lastIndex = 0; n >= 0 && Y.test(t); )
            (t = t.replace(Y, i)), (Y.lastIndex = 0), (n -= 1);
          return t;
        }
        var H = /\d/,
          W = /\d\d/,
          G = /\d{3}/,
          K = /\d{4}/,
          q = /[+-]?\d{6}/,
          Z = /\d\d?/,
          $ = /\d\d\d\d?/,
          Q = /\d\d\d\d\d\d?/,
          tt = /\d{1,3}/,
          et = /\d{1,4}/,
          nt = /[+-]?\d{1,6}/,
          it = /\d+/,
          rt = /[+-]?\d+/,
          st = /Z|[+-]\d\d:?\d\d/gi,
          at = /Z|[+-]\d\d(?::?\d\d)?/gi,
          ot =
            /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
          ut = {};
        function ct(t, e, n) {
          ut[t] = T(e)
            ? e
            : function (t, i) {
                return t && n ? n : e;
              };
        }
        function ht(t, e) {
          return h(ut, t)
            ? ut[t](e._strict, e._locale)
            : new RegExp(
                lt(
                  t
                    .replace('\\', '')
                    .replace(
                      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
                      function (t, e, n, i, r) {
                        return e || n || i || r;
                      }
                    )
                )
              );
        }
        function lt(t) {
          return t.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
        }
        var pt = {};
        function ft(t, e) {
          var n,
            i = e;
          for (
            'string' == typeof t && (t = [t]),
              o(e) &&
                (i = function (t, n) {
                  n[e] = E(t);
                }),
              n = 0;
            n < t.length;
            n++
          )
            pt[t[n]] = i;
        }
        function dt(t, e) {
          ft(t, function (t, n, i, r) {
            (i._w = i._w || {}), e(t, i._w, i, r);
          });
        }
        function mt(t, e, n) {
          null != e && h(pt, t) && pt[t](e, n._a, n, t);
        }
        var yt = 0,
          vt = 1,
          gt = 2,
          xt = 3,
          Dt = 4,
          St = 5,
          Et = 6,
          wt = 7,
          At = 8;
        function Ct(t) {
          return bt(t) ? 366 : 365;
        }
        function bt(t) {
          return (t % 4 == 0 && t % 100 != 0) || t % 400 == 0;
        }
        V('Y', 0, 0, function () {
          var t = this.year();
          return t <= 9999 ? '' + t : '+' + t;
        }),
          V(0, ['YY', 2], 0, function () {
            return this.year() % 100;
          }),
          V(0, ['YYYY', 4], 0, 'year'),
          V(0, ['YYYYY', 5], 0, 'year'),
          V(0, ['YYYYYY', 6, !0], 0, 'year'),
          I('year', 'y'),
          L('year', 1),
          ct('Y', rt),
          ct('YY', Z, W),
          ct('YYYY', et, K),
          ct('YYYYY', nt, q),
          ct('YYYYYY', nt, q),
          ft(['YYYYY', 'YYYYYY'], yt),
          ft('YYYY', function (t, e) {
            e[yt] = 2 === t.length ? i.parseTwoDigitYear(t) : E(t);
          }),
          ft('YY', function (t, e) {
            e[yt] = i.parseTwoDigitYear(t);
          }),
          ft('Y', function (t, e) {
            e[yt] = parseInt(t, 10);
          }),
          (i.parseTwoDigitYear = function (t) {
            return E(t) + (E(t) > 68 ? 1900 : 2e3);
          });
        var Ft,
          kt = Tt('FullYear', !0);
        function Tt(t, e) {
          return function (n) {
            return null != n
              ? (Mt(this, t, n), i.updateOffset(this, e), this)
              : _t(this, t);
          };
        }
        function _t(t, e) {
          return t.isValid()
            ? t._d['get' + (t._isUTC ? 'UTC' : '') + e]()
            : NaN;
        }
        function Mt(t, e, n) {
          t.isValid() &&
            !isNaN(n) &&
            ('FullYear' === e &&
            bt(t.year()) &&
            1 === t.month() &&
            29 === t.date()
              ? t._d['set' + (t._isUTC ? 'UTC' : '') + e](
                  n,
                  t.month(),
                  Pt(n, t.month())
                )
              : t._d['set' + (t._isUTC ? 'UTC' : '') + e](n));
        }
        function Pt(t, e) {
          if (isNaN(t) || isNaN(e)) return NaN;
          var n,
            i = ((e % (n = 12)) + n) % n;
          return (
            (t += (e - i) / 12),
            1 === i ? (bt(t) ? 29 : 28) : 31 - ((i % 7) % 2)
          );
        }
        (Ft = Array.prototype.indexOf
          ? Array.prototype.indexOf
          : function (t) {
              var e;
              for (e = 0; e < this.length; ++e) if (this[e] === t) return e;
              return -1;
            }),
          V('M', ['MM', 2], 'Mo', function () {
            return this.month() + 1;
          }),
          V('MMM', 0, 0, function (t) {
            return this.localeData().monthsShort(this, t);
          }),
          V('MMMM', 0, 0, function (t) {
            return this.localeData().months(this, t);
          }),
          I('month', 'M'),
          L('month', 8),
          ct('M', Z),
          ct('MM', Z, W),
          ct('MMM', function (t, e) {
            return e.monthsShortRegex(t);
          }),
          ct('MMMM', function (t, e) {
            return e.monthsRegex(t);
          }),
          ft(['M', 'MM'], function (t, e) {
            e[vt] = E(t) - 1;
          }),
          ft(['MMM', 'MMMM'], function (t, e, n, i) {
            var r = n._locale.monthsParse(t, i, n._strict);
            null != r ? (e[vt] = r) : (f(n).invalidMonth = t);
          });
        var It = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
          Ot =
            'January_February_March_April_May_June_July_August_September_October_November_December'.split(
              '_'
            ),
          Nt = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
        function Bt(t, e) {
          var n;
          if (!t.isValid()) return t;
          if ('string' == typeof e)
            if (/^\d+$/.test(e)) e = E(e);
            else if (!o((e = t.localeData().monthsParse(e)))) return t;
          return (
            (n = Math.min(t.date(), Pt(t.year(), e))),
            t._d['set' + (t._isUTC ? 'UTC' : '') + 'Month'](e, n),
            t
          );
        }
        function Lt(t) {
          return null != t
            ? (Bt(this, t), i.updateOffset(this, !0), this)
            : _t(this, 'Month');
        }
        var Ut = ot,
          Rt = ot;
        function Yt() {
          function t(t, e) {
            return e.length - t.length;
          }
          var e,
            n,
            i = [],
            r = [],
            s = [];
          for (e = 0; e < 12; e++)
            (n = p([2e3, e])),
              i.push(this.monthsShort(n, '')),
              r.push(this.months(n, '')),
              s.push(this.months(n, '')),
              s.push(this.monthsShort(n, ''));
          for (i.sort(t), r.sort(t), s.sort(t), e = 0; e < 12; e++)
            (i[e] = lt(i[e])), (r[e] = lt(r[e]));
          for (e = 0; e < 24; e++) s[e] = lt(s[e]);
          (this._monthsRegex = new RegExp('^(' + s.join('|') + ')', 'i')),
            (this._monthsShortRegex = this._monthsRegex),
            (this._monthsStrictRegex = new RegExp(
              '^(' + r.join('|') + ')',
              'i'
            )),
            (this._monthsShortStrictRegex = new RegExp(
              '^(' + i.join('|') + ')',
              'i'
            ));
        }
        function jt(t) {
          var e;
          if (t < 100 && t >= 0) {
            var n = Array.prototype.slice.call(arguments);
            (n[0] = t + 400),
              (e = new Date(Date.UTC.apply(null, n))),
              isFinite(e.getUTCFullYear()) && e.setUTCFullYear(t);
          } else e = new Date(Date.UTC.apply(null, arguments));
          return e;
        }
        function Xt(t, e, n) {
          var i = 7 + e - n,
            r = (7 + jt(t, 0, i).getUTCDay() - e) % 7;
          return -r + i - 1;
        }
        function Vt(t, e, n, i, r) {
          var s,
            a,
            o = (7 + n - i) % 7,
            u = Xt(t, i, r),
            c = 1 + 7 * (e - 1) + o + u;
          return (
            c <= 0
              ? (a = Ct((s = t - 1)) + c)
              : c > Ct(t)
              ? ((s = t + 1), (a = c - Ct(t)))
              : ((s = t), (a = c)),
            { year: s, dayOfYear: a }
          );
        }
        function Jt(t, e, n) {
          var i,
            r,
            s = Xt(t.year(), e, n),
            a = Math.floor((t.dayOfYear() - s - 1) / 7) + 1;
          return (
            a < 1
              ? ((r = t.year() - 1), (i = a + zt(r, e, n)))
              : a > zt(t.year(), e, n)
              ? ((i = a - zt(t.year(), e, n)), (r = t.year() + 1))
              : ((r = t.year()), (i = a)),
            { week: i, year: r }
          );
        }
        function zt(t, e, n) {
          var i = Xt(t, e, n),
            r = Xt(t + 1, e, n);
          return (Ct(t) - i + r) / 7;
        }
        function Ht(t, e) {
          return t.slice(e, 7).concat(t.slice(0, e));
        }
        V('w', ['ww', 2], 'wo', 'week'),
          V('W', ['WW', 2], 'Wo', 'isoWeek'),
          I('week', 'w'),
          I('isoWeek', 'W'),
          L('week', 5),
          L('isoWeek', 5),
          ct('w', Z),
          ct('ww', Z, W),
          ct('W', Z),
          ct('WW', Z, W),
          dt(['w', 'ww', 'W', 'WW'], function (t, e, n, i) {
            e[i.substr(0, 1)] = E(t);
          }),
          V('d', 0, 'do', 'day'),
          V('dd', 0, 0, function (t) {
            return this.localeData().weekdaysMin(this, t);
          }),
          V('ddd', 0, 0, function (t) {
            return this.localeData().weekdaysShort(this, t);
          }),
          V('dddd', 0, 0, function (t) {
            return this.localeData().weekdays(this, t);
          }),
          V('e', 0, 0, 'weekday'),
          V('E', 0, 0, 'isoWeekday'),
          I('day', 'd'),
          I('weekday', 'e'),
          I('isoWeekday', 'E'),
          L('day', 11),
          L('weekday', 11),
          L('isoWeekday', 11),
          ct('d', Z),
          ct('e', Z),
          ct('E', Z),
          ct('dd', function (t, e) {
            return e.weekdaysMinRegex(t);
          }),
          ct('ddd', function (t, e) {
            return e.weekdaysShortRegex(t);
          }),
          ct('dddd', function (t, e) {
            return e.weekdaysRegex(t);
          }),
          dt(['dd', 'ddd', 'dddd'], function (t, e, n, i) {
            var r = n._locale.weekdaysParse(t, i, n._strict);
            null != r ? (e.d = r) : (f(n).invalidWeekday = t);
          }),
          dt(['d', 'e', 'E'], function (t, e, n, i) {
            e[i] = E(t);
          });
        var Wt =
            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
              '_'
            ),
          Gt = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          Kt = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          qt = ot,
          Zt = ot,
          $t = ot;
        function Qt() {
          function t(t, e) {
            return e.length - t.length;
          }
          var e,
            n,
            i,
            r,
            s,
            a = [],
            o = [],
            u = [],
            c = [];
          for (e = 0; e < 7; e++)
            (n = p([2e3, 1]).day(e)),
              (i = this.weekdaysMin(n, '')),
              (r = this.weekdaysShort(n, '')),
              (s = this.weekdays(n, '')),
              a.push(i),
              o.push(r),
              u.push(s),
              c.push(i),
              c.push(r),
              c.push(s);
          for (a.sort(t), o.sort(t), u.sort(t), c.sort(t), e = 0; e < 7; e++)
            (o[e] = lt(o[e])), (u[e] = lt(u[e])), (c[e] = lt(c[e]));
          (this._weekdaysRegex = new RegExp('^(' + c.join('|') + ')', 'i')),
            (this._weekdaysShortRegex = this._weekdaysRegex),
            (this._weekdaysMinRegex = this._weekdaysRegex),
            (this._weekdaysStrictRegex = new RegExp(
              '^(' + u.join('|') + ')',
              'i'
            )),
            (this._weekdaysShortStrictRegex = new RegExp(
              '^(' + o.join('|') + ')',
              'i'
            )),
            (this._weekdaysMinStrictRegex = new RegExp(
              '^(' + a.join('|') + ')',
              'i'
            ));
        }
        function te() {
          return this.hours() % 12 || 12;
        }
        function ee(t, e) {
          V(t, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), e);
          });
        }
        function ne(t, e) {
          return e._meridiemParse;
        }
        V('H', ['HH', 2], 0, 'hour'),
          V('h', ['hh', 2], 0, te),
          V('k', ['kk', 2], 0, function () {
            return this.hours() || 24;
          }),
          V('hmm', 0, 0, function () {
            return '' + te.apply(this) + U(this.minutes(), 2);
          }),
          V('hmmss', 0, 0, function () {
            return (
              '' + te.apply(this) + U(this.minutes(), 2) + U(this.seconds(), 2)
            );
          }),
          V('Hmm', 0, 0, function () {
            return '' + this.hours() + U(this.minutes(), 2);
          }),
          V('Hmmss', 0, 0, function () {
            return (
              '' + this.hours() + U(this.minutes(), 2) + U(this.seconds(), 2)
            );
          }),
          ee('a', !0),
          ee('A', !1),
          I('hour', 'h'),
          L('hour', 13),
          ct('a', ne),
          ct('A', ne),
          ct('H', Z),
          ct('h', Z),
          ct('k', Z),
          ct('HH', Z, W),
          ct('hh', Z, W),
          ct('kk', Z, W),
          ct('hmm', $),
          ct('hmmss', Q),
          ct('Hmm', $),
          ct('Hmmss', Q),
          ft(['H', 'HH'], xt),
          ft(['k', 'kk'], function (t, e, n) {
            var i = E(t);
            e[xt] = 24 === i ? 0 : i;
          }),
          ft(['a', 'A'], function (t, e, n) {
            (n._isPm = n._locale.isPM(t)), (n._meridiem = t);
          }),
          ft(['h', 'hh'], function (t, e, n) {
            (e[xt] = E(t)), (f(n).bigHour = !0);
          }),
          ft('hmm', function (t, e, n) {
            var i = t.length - 2;
            (e[xt] = E(t.substr(0, i))),
              (e[Dt] = E(t.substr(i))),
              (f(n).bigHour = !0);
          }),
          ft('hmmss', function (t, e, n) {
            var i = t.length - 4,
              r = t.length - 2;
            (e[xt] = E(t.substr(0, i))),
              (e[Dt] = E(t.substr(i, 2))),
              (e[St] = E(t.substr(r))),
              (f(n).bigHour = !0);
          }),
          ft('Hmm', function (t, e, n) {
            var i = t.length - 2;
            (e[xt] = E(t.substr(0, i))), (e[Dt] = E(t.substr(i)));
          }),
          ft('Hmmss', function (t, e, n) {
            var i = t.length - 4,
              r = t.length - 2;
            (e[xt] = E(t.substr(0, i))),
              (e[Dt] = E(t.substr(i, 2))),
              (e[St] = E(t.substr(r)));
          });
        var ie,
          re = Tt('Hours', !0),
          se = {
            calendar: {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            },
            longDateFormat: {
              LTS: 'h:mm:ss A',
              LT: 'h:mm A',
              L: 'MM/DD/YYYY',
              LL: 'MMMM D, YYYY',
              LLL: 'MMMM D, YYYY h:mm A',
              LLLL: 'dddd, MMMM D, YYYY h:mm A',
            },
            invalidDate: 'Invalid date',
            ordinal: '%d',
            dayOfMonthOrdinalParse: /\d{1,2}/,
            relativeTime: {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            },
            months: Ot,
            monthsShort: Nt,
            week: { dow: 0, doy: 6 },
            weekdays: Wt,
            weekdaysMin: Kt,
            weekdaysShort: Gt,
            meridiemParse: /[ap]\.?m?\.?/i,
          },
          ae = {},
          oe = {};
        function ue(t) {
          return t ? t.toLowerCase().replace('_', '-') : t;
        }
        function ce(e) {
          var n = null;
          if (!ae[e] && void 0 !== t && t && t.exports)
            try {
              (n = ie._abbr),
                !(function () {
                  var t = new Error("Cannot find module 'undefined'");
                  throw ((t.code = 'MODULE_NOT_FOUND'), t);
                })(),
                he(n);
            } catch (t) {}
          return ae[e];
        }
        function he(t, e) {
          var n;
          return (
            t &&
              ((n = a(e) ? pe(t) : le(t, e))
                ? (ie = n)
                : 'undefined' != typeof console &&
                  console.warn &&
                  console.warn(
                    'Locale ' + t + ' not found. Did you forget to load it?'
                  )),
            ie._abbr
          );
        }
        function le(t, e) {
          if (null !== e) {
            var n,
              i = se;
            if (((e.abbr = t), null != ae[t]))
              k(
                'defineLocaleOverride',
                'use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
              ),
                (i = ae[t]._config);
            else if (null != e.parentLocale)
              if (null != ae[e.parentLocale]) i = ae[e.parentLocale]._config;
              else {
                if (null == (n = ce(e.parentLocale)))
                  return (
                    oe[e.parentLocale] || (oe[e.parentLocale] = []),
                    oe[e.parentLocale].push({ name: t, config: e }),
                    null
                  );
                i = n._config;
              }
            return (
              (ae[t] = new M(_(i, e))),
              oe[t] &&
                oe[t].forEach(function (t) {
                  le(t.name, t.config);
                }),
              he(t),
              ae[t]
            );
          }
          return delete ae[t], null;
        }
        function pe(t) {
          var e;
          if ((t && t._locale && t._locale._abbr && (t = t._locale._abbr), !t))
            return ie;
          if (!r(t)) {
            if ((e = ce(t))) return e;
            t = [t];
          }
          return (function (t) {
            for (var e, n, i, r, s = 0; s < t.length; ) {
              for (
                r = ue(t[s]).split('-'),
                  e = r.length,
                  n = (n = ue(t[s + 1])) ? n.split('-') : null;
                e > 0;

              ) {
                if ((i = ce(r.slice(0, e).join('-')))) return i;
                if (n && n.length >= e && w(r, n, !0) >= e - 1) break;
                e--;
              }
              s++;
            }
            return ie;
          })(t);
        }
        function fe(t) {
          var e,
            n = t._a;
          return (
            n &&
              -2 === f(t).overflow &&
              ((e =
                n[vt] < 0 || n[vt] > 11
                  ? vt
                  : n[gt] < 1 || n[gt] > Pt(n[yt], n[vt])
                  ? gt
                  : n[xt] < 0 ||
                    n[xt] > 24 ||
                    (24 === n[xt] &&
                      (0 !== n[Dt] || 0 !== n[St] || 0 !== n[Et]))
                  ? xt
                  : n[Dt] < 0 || n[Dt] > 59
                  ? Dt
                  : n[St] < 0 || n[St] > 59
                  ? St
                  : n[Et] < 0 || n[Et] > 999
                  ? Et
                  : -1),
              f(t)._overflowDayOfYear && (e < yt || e > gt) && (e = gt),
              f(t)._overflowWeeks && -1 === e && (e = wt),
              f(t)._overflowWeekday && -1 === e && (e = At),
              (f(t).overflow = e)),
            t
          );
        }
        function de(t, e, n) {
          return null != t ? t : null != e ? e : n;
        }
        function me(t) {
          var e,
            n,
            r,
            s,
            a,
            o = [];
          if (!t._d) {
            for (
              r = (function (t) {
                var e = new Date(i.now());
                return t._useUTC
                  ? [e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate()]
                  : [e.getFullYear(), e.getMonth(), e.getDate()];
              })(t),
                t._w &&
                  null == t._a[gt] &&
                  null == t._a[vt] &&
                  (function (t) {
                    var e, n, i, r, s, a, o, u;
                    if (null != (e = t._w).GG || null != e.W || null != e.E)
                      (s = 1),
                        (a = 4),
                        (n = de(e.GG, t._a[yt], Jt(_e(), 1, 4).year)),
                        (i = de(e.W, 1)),
                        ((r = de(e.E, 1)) < 1 || r > 7) && (u = !0);
                    else {
                      (s = t._locale._week.dow), (a = t._locale._week.doy);
                      var c = Jt(_e(), s, a);
                      (n = de(e.gg, t._a[yt], c.year)),
                        (i = de(e.w, c.week)),
                        null != e.d
                          ? ((r = e.d) < 0 || r > 6) && (u = !0)
                          : null != e.e
                          ? ((r = e.e + s), (e.e < 0 || e.e > 6) && (u = !0))
                          : (r = s);
                    }
                    i < 1 || i > zt(n, s, a)
                      ? (f(t)._overflowWeeks = !0)
                      : null != u
                      ? (f(t)._overflowWeekday = !0)
                      : ((o = Vt(n, i, r, s, a)),
                        (t._a[yt] = o.year),
                        (t._dayOfYear = o.dayOfYear));
                  })(t),
                null != t._dayOfYear &&
                  ((a = de(t._a[yt], r[yt])),
                  (t._dayOfYear > Ct(a) || 0 === t._dayOfYear) &&
                    (f(t)._overflowDayOfYear = !0),
                  (n = jt(a, 0, t._dayOfYear)),
                  (t._a[vt] = n.getUTCMonth()),
                  (t._a[gt] = n.getUTCDate())),
                e = 0;
              e < 3 && null == t._a[e];
              ++e
            )
              t._a[e] = o[e] = r[e];
            for (; e < 7; e++)
              t._a[e] = o[e] = null == t._a[e] ? (2 === e ? 1 : 0) : t._a[e];
            24 === t._a[xt] &&
              0 === t._a[Dt] &&
              0 === t._a[St] &&
              0 === t._a[Et] &&
              ((t._nextDay = !0), (t._a[xt] = 0)),
              (t._d = (
                t._useUTC
                  ? jt
                  : function (t, e, n, i, r, s, a) {
                      var o;
                      return (
                        t < 100 && t >= 0
                          ? ((o = new Date(t + 400, e, n, i, r, s, a)),
                            isFinite(o.getFullYear()) && o.setFullYear(t))
                          : (o = new Date(t, e, n, i, r, s, a)),
                        o
                      );
                    }
              ).apply(null, o)),
              (s = t._useUTC ? t._d.getUTCDay() : t._d.getDay()),
              null != t._tzm &&
                t._d.setUTCMinutes(t._d.getUTCMinutes() - t._tzm),
              t._nextDay && (t._a[xt] = 24),
              t._w &&
                void 0 !== t._w.d &&
                t._w.d !== s &&
                (f(t).weekdayMismatch = !0);
          }
        }
        var ye =
            /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
          ve =
            /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
          ge = /Z|[+-]\d\d(?::?\d\d)?/,
          xe = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, !1],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, !1],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, !1],
            ['YYYYDDD', /\d{7}/],
          ],
          De = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
          ],
          Se = /^\/?Date\((\-?\d+)/i;
        function Ee(t) {
          var e,
            n,
            i,
            r,
            s,
            a,
            o = t._i,
            u = ye.exec(o) || ve.exec(o);
          if (u) {
            for (f(t).iso = !0, e = 0, n = xe.length; e < n; e++)
              if (xe[e][1].exec(u[1])) {
                (r = xe[e][0]), (i = !1 !== xe[e][2]);
                break;
              }
            if (null == r) return void (t._isValid = !1);
            if (u[3]) {
              for (e = 0, n = De.length; e < n; e++)
                if (De[e][1].exec(u[3])) {
                  s = (u[2] || ' ') + De[e][0];
                  break;
                }
              if (null == s) return void (t._isValid = !1);
            }
            if (!i && null != s) return void (t._isValid = !1);
            if (u[4]) {
              if (!ge.exec(u[4])) return void (t._isValid = !1);
              a = 'Z';
            }
            (t._f = r + (s || '') + (a || '')), Fe(t);
          } else t._isValid = !1;
        }
        var we =
          /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
        function Ae(t) {
          var e = parseInt(t, 10);
          return e <= 49 ? 2e3 + e : e <= 999 ? 1900 + e : e;
        }
        var Ce = {
          UT: 0,
          GMT: 0,
          EDT: -240,
          EST: -300,
          CDT: -300,
          CST: -360,
          MDT: -360,
          MST: -420,
          PDT: -420,
          PST: -480,
        };
        function be(t) {
          var e,
            n,
            i,
            r,
            s,
            a,
            o,
            u = we.exec(
              t._i
                .replace(/\([^)]*\)|[\n\t]/g, ' ')
                .replace(/(\s\s+)/g, ' ')
                .replace(/^\s\s*/, '')
                .replace(/\s\s*$/, '')
            );
          if (u) {
            var c =
              ((e = u[4]),
              (n = u[3]),
              (i = u[2]),
              (r = u[5]),
              (s = u[6]),
              (a = u[7]),
              (o = [
                Ae(e),
                Nt.indexOf(n),
                parseInt(i, 10),
                parseInt(r, 10),
                parseInt(s, 10),
              ]),
              a && o.push(parseInt(a, 10)),
              o);
            if (
              !(function (t, e, n) {
                if (t) {
                  var i = Gt.indexOf(t),
                    r = new Date(e[0], e[1], e[2]).getDay();
                  if (i !== r)
                    return (f(n).weekdayMismatch = !0), (n._isValid = !1), !1;
                }
                return !0;
              })(u[1], c, t)
            )
              return;
            (t._a = c),
              (t._tzm = (function (t, e, n) {
                if (t) return Ce[t];
                if (e) return 0;
                var i = parseInt(n, 10),
                  r = i % 100,
                  s = (i - r) / 100;
                return 60 * s + r;
              })(u[8], u[9], u[10])),
              (t._d = jt.apply(null, t._a)),
              t._d.setUTCMinutes(t._d.getUTCMinutes() - t._tzm),
              (f(t).rfc2822 = !0);
          } else t._isValid = !1;
        }
        function Fe(t) {
          if (t._f !== i.ISO_8601)
            if (t._f !== i.RFC_2822) {
              (t._a = []), (f(t).empty = !0);
              var e,
                n,
                r,
                s,
                a,
                o = '' + t._i,
                u = o.length,
                c = 0;
              for (
                r = z(t._f, t._locale).match(R) || [], e = 0;
                e < r.length;
                e++
              )
                (s = r[e]),
                  (n = (o.match(ht(s, t)) || [])[0]) &&
                    ((a = o.substr(0, o.indexOf(n))).length > 0 &&
                      f(t).unusedInput.push(a),
                    (o = o.slice(o.indexOf(n) + n.length)),
                    (c += n.length)),
                  X[s]
                    ? (n ? (f(t).empty = !1) : f(t).unusedTokens.push(s),
                      mt(s, n, t))
                    : t._strict && !n && f(t).unusedTokens.push(s);
              (f(t).charsLeftOver = u - c),
                o.length > 0 && f(t).unusedInput.push(o),
                t._a[xt] <= 12 &&
                  !0 === f(t).bigHour &&
                  t._a[xt] > 0 &&
                  (f(t).bigHour = void 0),
                (f(t).parsedDateParts = t._a.slice(0)),
                (f(t).meridiem = t._meridiem),
                (t._a[xt] = (function (t, e, n) {
                  var i;
                  return null == n
                    ? e
                    : null != t.meridiemHour
                    ? t.meridiemHour(e, n)
                    : null != t.isPM
                    ? ((i = t.isPM(n)) && e < 12 && (e += 12),
                      i || 12 !== e || (e = 0),
                      e)
                    : e;
                })(t._locale, t._a[xt], t._meridiem)),
                me(t),
                fe(t);
            } else be(t);
          else Ee(t);
        }
        function ke(t) {
          var e = t._i,
            n = t._f;
          return (
            (t._locale = t._locale || pe(t._l)),
            null === e || (void 0 === n && '' === e)
              ? m({ nullInput: !0 })
              : ('string' == typeof e && (t._i = e = t._locale.preparse(e)),
                D(e)
                  ? new x(fe(e))
                  : (u(e)
                      ? (t._d = e)
                      : r(n)
                      ? (function (t) {
                          var e, n, i, r, s;
                          if (0 === t._f.length)
                            return (
                              (f(t).invalidFormat = !0),
                              void (t._d = new Date(NaN))
                            );
                          for (r = 0; r < t._f.length; r++)
                            (s = 0),
                              (e = v({}, t)),
                              null != t._useUTC && (e._useUTC = t._useUTC),
                              (e._f = t._f[r]),
                              Fe(e),
                              d(e) &&
                                ((s += f(e).charsLeftOver),
                                (s += 10 * f(e).unusedTokens.length),
                                (f(e).score = s),
                                (null == i || s < i) && ((i = s), (n = e)));
                          l(t, n || e);
                        })(t)
                      : n
                      ? Fe(t)
                      : (function (t) {
                          var e = t._i;
                          a(e)
                            ? (t._d = new Date(i.now()))
                            : u(e)
                            ? (t._d = new Date(e.valueOf()))
                            : 'string' == typeof e
                            ? (function (t) {
                                var e = Se.exec(t._i);
                                null === e
                                  ? (Ee(t),
                                    !1 === t._isValid &&
                                      (delete t._isValid,
                                      be(t),
                                      !1 === t._isValid &&
                                        (delete t._isValid,
                                        i.createFromInputFallback(t))))
                                  : (t._d = new Date(+e[1]));
                              })(t)
                            : r(e)
                            ? ((t._a = c(e.slice(0), function (t) {
                                return parseInt(t, 10);
                              })),
                              me(t))
                            : s(e)
                            ? (function (t) {
                                if (!t._d) {
                                  var e = N(t._i);
                                  (t._a = c(
                                    [
                                      e.year,
                                      e.month,
                                      e.day || e.date,
                                      e.hour,
                                      e.minute,
                                      e.second,
                                      e.millisecond,
                                    ],
                                    function (t) {
                                      return t && parseInt(t, 10);
                                    }
                                  )),
                                    me(t);
                                }
                              })(t)
                            : o(e)
                            ? (t._d = new Date(e))
                            : i.createFromInputFallback(t);
                        })(t),
                    d(t) || (t._d = null),
                    t))
          );
        }
        function Te(t, e, n, i, a) {
          var o,
            u = {};
          return (
            (!0 !== n && !1 !== n) || ((i = n), (n = void 0)),
            ((s(t) &&
              (function (t) {
                if (Object.getOwnPropertyNames)
                  return 0 === Object.getOwnPropertyNames(t).length;
                var e;
                for (e in t) if (t.hasOwnProperty(e)) return !1;
                return !0;
              })(t)) ||
              (r(t) && 0 === t.length)) &&
              (t = void 0),
            (u._isAMomentObject = !0),
            (u._useUTC = u._isUTC = a),
            (u._l = n),
            (u._i = t),
            (u._f = e),
            (u._strict = i),
            (o = new x(fe(ke(u))))._nextDay &&
              (o.add(1, 'd'), (o._nextDay = void 0)),
            o
          );
        }
        function _e(t, e, n, i) {
          return Te(t, e, n, i, !1);
        }
        (i.createFromInputFallback = C(
          'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
          function (t) {
            t._d = new Date(t._i + (t._useUTC ? ' UTC' : ''));
          }
        )),
          (i.ISO_8601 = function () {}),
          (i.RFC_2822 = function () {});
        var Me = C(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
              var t = _e.apply(null, arguments);
              return this.isValid() && t.isValid()
                ? t < this
                  ? this
                  : t
                : m();
            }
          ),
          Pe = C(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
              var t = _e.apply(null, arguments);
              return this.isValid() && t.isValid()
                ? t > this
                  ? this
                  : t
                : m();
            }
          );
        function Ie(t, e) {
          var n, i;
          if ((1 === e.length && r(e[0]) && (e = e[0]), !e.length)) return _e();
          for (n = e[0], i = 1; i < e.length; ++i)
            (e[i].isValid() && !e[i][t](n)) || (n = e[i]);
          return n;
        }
        var Oe = [
          'year',
          'quarter',
          'month',
          'week',
          'day',
          'hour',
          'minute',
          'second',
          'millisecond',
        ];
        function Ne(t) {
          var e = N(t),
            n = e.year || 0,
            i = e.quarter || 0,
            r = e.month || 0,
            s = e.week || e.isoWeek || 0,
            a = e.day || 0,
            o = e.hour || 0,
            u = e.minute || 0,
            c = e.second || 0,
            h = e.millisecond || 0;
          (this._isValid = (function (t) {
            for (var e in t)
              if (-1 === Ft.call(Oe, e) || (null != t[e] && isNaN(t[e])))
                return !1;
            for (var n = !1, i = 0; i < Oe.length; ++i)
              if (t[Oe[i]]) {
                if (n) return !1;
                parseFloat(t[Oe[i]]) !== E(t[Oe[i]]) && (n = !0);
              }
            return !0;
          })(e)),
            (this._milliseconds = +h + 1e3 * c + 6e4 * u + 1e3 * o * 60 * 60),
            (this._days = +a + 7 * s),
            (this._months = +r + 3 * i + 12 * n),
            (this._data = {}),
            (this._locale = pe()),
            this._bubble();
        }
        function Be(t) {
          return t instanceof Ne;
        }
        function Le(t) {
          return t < 0 ? -1 * Math.round(-1 * t) : Math.round(t);
        }
        function Ue(t, e) {
          V(t, 0, 0, function () {
            var t = this.utcOffset(),
              n = '+';
            return (
              t < 0 && ((t = -t), (n = '-')),
              n + U(~~(t / 60), 2) + e + U(~~t % 60, 2)
            );
          });
        }
        Ue('Z', ':'),
          Ue('ZZ', ''),
          ct('Z', at),
          ct('ZZ', at),
          ft(['Z', 'ZZ'], function (t, e, n) {
            (n._useUTC = !0), (n._tzm = Ye(at, t));
          });
        var Re = /([\+\-]|\d\d)/gi;
        function Ye(t, e) {
          var n = (e || '').match(t);
          if (null === n) return null;
          var i = n[n.length - 1] || [],
            r = (i + '').match(Re) || ['-', 0, 0],
            s = 60 * r[1] + E(r[2]);
          return 0 === s ? 0 : '+' === r[0] ? s : -s;
        }
        function je(t, e) {
          var n, r;
          return e._isUTC
            ? ((n = e.clone()),
              (r =
                (D(t) || u(t) ? t.valueOf() : _e(t).valueOf()) - n.valueOf()),
              n._d.setTime(n._d.valueOf() + r),
              i.updateOffset(n, !1),
              n)
            : _e(t).local();
        }
        function Xe(t) {
          return 15 * -Math.round(t._d.getTimezoneOffset() / 15);
        }
        function Ve() {
          return !!this.isValid() && this._isUTC && 0 === this._offset;
        }
        i.updateOffset = function () {};
        var Je = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,
          ze =
            /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
        function He(t, e) {
          var n,
            i,
            r,
            s,
            a,
            u,
            c = t,
            l = null;
          return (
            Be(t)
              ? (c = { ms: t._milliseconds, d: t._days, M: t._months })
              : o(t)
              ? ((c = {}), e ? (c[e] = t) : (c.milliseconds = t))
              : (l = Je.exec(t))
              ? ((n = '-' === l[1] ? -1 : 1),
                (c = {
                  y: 0,
                  d: E(l[gt]) * n,
                  h: E(l[xt]) * n,
                  m: E(l[Dt]) * n,
                  s: E(l[St]) * n,
                  ms: E(Le(1e3 * l[Et])) * n,
                }))
              : (l = ze.exec(t))
              ? ((n = '-' === l[1] ? -1 : 1),
                (c = {
                  y: We(l[2], n),
                  M: We(l[3], n),
                  w: We(l[4], n),
                  d: We(l[5], n),
                  h: We(l[6], n),
                  m: We(l[7], n),
                  s: We(l[8], n),
                }))
              : null == c
              ? (c = {})
              : 'object' == typeof c &&
                ('from' in c || 'to' in c) &&
                ((s = _e(c.from)),
                (a = _e(c.to)),
                (r =
                  s.isValid() && a.isValid()
                    ? ((a = je(a, s)),
                      s.isBefore(a)
                        ? (u = Ge(s, a))
                        : (((u = Ge(a, s)).milliseconds = -u.milliseconds),
                          (u.months = -u.months)),
                      u)
                    : { milliseconds: 0, months: 0 }),
                ((c = {}).ms = r.milliseconds),
                (c.M = r.months)),
            (i = new Ne(c)),
            Be(t) && h(t, '_locale') && (i._locale = t._locale),
            i
          );
        }
        function We(t, e) {
          var n = t && parseFloat(t.replace(',', '.'));
          return (isNaN(n) ? 0 : n) * e;
        }
        function Ge(t, e) {
          var n = {};
          return (
            (n.months = e.month() - t.month() + 12 * (e.year() - t.year())),
            t.clone().add(n.months, 'M').isAfter(e) && --n.months,
            (n.milliseconds = +e - +t.clone().add(n.months, 'M')),
            n
          );
        }
        function Ke(t, e) {
          return function (n, i) {
            var r;
            return (
              null === i ||
                isNaN(+i) ||
                (k(
                  e,
                  'moment().' +
                    e +
                    '(period, number) is deprecated. Please use moment().' +
                    e +
                    '(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                ),
                (r = n),
                (n = i),
                (i = r)),
              qe(this, He((n = 'string' == typeof n ? +n : n), i), t),
              this
            );
          };
        }
        function qe(t, e, n, r) {
          var s = e._milliseconds,
            a = Le(e._days),
            o = Le(e._months);
          t.isValid() &&
            ((r = null == r || r),
            o && Bt(t, _t(t, 'Month') + o * n),
            a && Mt(t, 'Date', _t(t, 'Date') + a * n),
            s && t._d.setTime(t._d.valueOf() + s * n),
            r && i.updateOffset(t, a || o));
        }
        (He.fn = Ne.prototype),
          (He.invalid = function () {
            return He(NaN);
          });
        var Ze = Ke(1, 'add'),
          $e = Ke(-1, 'subtract');
        function Qe(t, e) {
          var n,
            i,
            r = 12 * (e.year() - t.year()) + (e.month() - t.month()),
            s = t.clone().add(r, 'months');
          return (
            e - s < 0
              ? ((n = t.clone().add(r - 1, 'months')), (i = (e - s) / (s - n)))
              : ((n = t.clone().add(r + 1, 'months')), (i = (e - s) / (n - s))),
            -(r + i) || 0
          );
        }
        function tn(t) {
          var e;
          return void 0 === t
            ? this._locale._abbr
            : (null != (e = pe(t)) && (this._locale = e), this);
        }
        (i.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ'),
          (i.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]');
        var en = C(
          'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
          function (t) {
            return void 0 === t ? this.localeData() : this.locale(t);
          }
        );
        function nn() {
          return this._locale;
        }
        var rn = 1e3,
          sn = 60 * rn,
          an = 60 * sn,
          on = 3506328 * an;
        function un(t, e) {
          return ((t % e) + e) % e;
        }
        function cn(t, e, n) {
          return t < 100 && t >= 0
            ? new Date(t + 400, e, n) - on
            : new Date(t, e, n).valueOf();
        }
        function hn(t, e, n) {
          return t < 100 && t >= 0
            ? Date.UTC(t + 400, e, n) - on
            : Date.UTC(t, e, n);
        }
        function ln(t, e) {
          V(0, [t, t.length], 0, e);
        }
        function pn(t, e, n, i, r) {
          var s;
          return null == t
            ? Jt(this, i, r).year
            : ((s = zt(t, i, r)),
              e > s && (e = s),
              function (t, e, n, i, r) {
                var s = Vt(t, e, n, i, r),
                  a = jt(s.year, 0, s.dayOfYear);
                return (
                  this.year(a.getUTCFullYear()),
                  this.month(a.getUTCMonth()),
                  this.date(a.getUTCDate()),
                  this
                );
              }.call(this, t, e, n, i, r));
        }
        V(0, ['gg', 2], 0, function () {
          return this.weekYear() % 100;
        }),
          V(0, ['GG', 2], 0, function () {
            return this.isoWeekYear() % 100;
          }),
          ln('gggg', 'weekYear'),
          ln('ggggg', 'weekYear'),
          ln('GGGG', 'isoWeekYear'),
          ln('GGGGG', 'isoWeekYear'),
          I('weekYear', 'gg'),
          I('isoWeekYear', 'GG'),
          L('weekYear', 1),
          L('isoWeekYear', 1),
          ct('G', rt),
          ct('g', rt),
          ct('GG', Z, W),
          ct('gg', Z, W),
          ct('GGGG', et, K),
          ct('gggg', et, K),
          ct('GGGGG', nt, q),
          ct('ggggg', nt, q),
          dt(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (t, e, n, i) {
            e[i.substr(0, 2)] = E(t);
          }),
          dt(['gg', 'GG'], function (t, e, n, r) {
            e[r] = i.parseTwoDigitYear(t);
          }),
          V('Q', 0, 'Qo', 'quarter'),
          I('quarter', 'Q'),
          L('quarter', 7),
          ct('Q', H),
          ft('Q', function (t, e) {
            e[vt] = 3 * (E(t) - 1);
          }),
          V('D', ['DD', 2], 'Do', 'date'),
          I('date', 'D'),
          L('date', 9),
          ct('D', Z),
          ct('DD', Z, W),
          ct('Do', function (t, e) {
            return t
              ? e._dayOfMonthOrdinalParse || e._ordinalParse
              : e._dayOfMonthOrdinalParseLenient;
          }),
          ft(['D', 'DD'], gt),
          ft('Do', function (t, e) {
            e[gt] = E(t.match(Z)[0]);
          });
        var fn = Tt('Date', !0);
        V('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'),
          I('dayOfYear', 'DDD'),
          L('dayOfYear', 4),
          ct('DDD', tt),
          ct('DDDD', G),
          ft(['DDD', 'DDDD'], function (t, e, n) {
            n._dayOfYear = E(t);
          }),
          V('m', ['mm', 2], 0, 'minute'),
          I('minute', 'm'),
          L('minute', 14),
          ct('m', Z),
          ct('mm', Z, W),
          ft(['m', 'mm'], Dt);
        var dn = Tt('Minutes', !1);
        V('s', ['ss', 2], 0, 'second'),
          I('second', 's'),
          L('second', 15),
          ct('s', Z),
          ct('ss', Z, W),
          ft(['s', 'ss'], St);
        var mn,
          yn = Tt('Seconds', !1);
        for (
          V('S', 0, 0, function () {
            return ~~(this.millisecond() / 100);
          }),
            V(0, ['SS', 2], 0, function () {
              return ~~(this.millisecond() / 10);
            }),
            V(0, ['SSS', 3], 0, 'millisecond'),
            V(0, ['SSSS', 4], 0, function () {
              return 10 * this.millisecond();
            }),
            V(0, ['SSSSS', 5], 0, function () {
              return 100 * this.millisecond();
            }),
            V(0, ['SSSSSS', 6], 0, function () {
              return 1e3 * this.millisecond();
            }),
            V(0, ['SSSSSSS', 7], 0, function () {
              return 1e4 * this.millisecond();
            }),
            V(0, ['SSSSSSSS', 8], 0, function () {
              return 1e5 * this.millisecond();
            }),
            V(0, ['SSSSSSSSS', 9], 0, function () {
              return 1e6 * this.millisecond();
            }),
            I('millisecond', 'ms'),
            L('millisecond', 16),
            ct('S', tt, H),
            ct('SS', tt, W),
            ct('SSS', tt, G),
            mn = 'SSSS';
          mn.length <= 9;
          mn += 'S'
        )
          ct(mn, it);
        function vn(t, e) {
          e[Et] = E(1e3 * ('0.' + t));
        }
        for (mn = 'S'; mn.length <= 9; mn += 'S') ft(mn, vn);
        var gn = Tt('Milliseconds', !1);
        V('z', 0, 0, 'zoneAbbr'), V('zz', 0, 0, 'zoneName');
        var xn = x.prototype;
        function Dn(t) {
          return t;
        }
        (xn.add = Ze),
          (xn.calendar = function (t, e) {
            var n = t || _e(),
              r = je(n, this).startOf('day'),
              s = i.calendarFormat(this, r) || 'sameElse',
              a = e && (T(e[s]) ? e[s].call(this, n) : e[s]);
            return this.format(a || this.localeData().calendar(s, this, _e(n)));
          }),
          (xn.clone = function () {
            return new x(this);
          }),
          (xn.diff = function (t, e, n) {
            var i, r, s;
            if (!this.isValid()) return NaN;
            if (!(i = je(t, this)).isValid()) return NaN;
            switch (
              ((r = 6e4 * (i.utcOffset() - this.utcOffset())), (e = O(e)))
            ) {
              case 'year':
                s = Qe(this, i) / 12;
                break;
              case 'month':
                s = Qe(this, i);
                break;
              case 'quarter':
                s = Qe(this, i) / 3;
                break;
              case 'second':
                s = (this - i) / 1e3;
                break;
              case 'minute':
                s = (this - i) / 6e4;
                break;
              case 'hour':
                s = (this - i) / 36e5;
                break;
              case 'day':
                s = (this - i - r) / 864e5;
                break;
              case 'week':
                s = (this - i - r) / 6048e5;
                break;
              default:
                s = this - i;
            }
            return n ? s : S(s);
          }),
          (xn.endOf = function (t) {
            var e;
            if (void 0 === (t = O(t)) || 'millisecond' === t || !this.isValid())
              return this;
            var n = this._isUTC ? hn : cn;
            switch (t) {
              case 'year':
                e = n(this.year() + 1, 0, 1) - 1;
                break;
              case 'quarter':
                e =
                  n(this.year(), this.month() - (this.month() % 3) + 3, 1) - 1;
                break;
              case 'month':
                e = n(this.year(), this.month() + 1, 1) - 1;
                break;
              case 'week':
                e =
                  n(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday() + 7
                  ) - 1;
                break;
              case 'isoWeek':
                e =
                  n(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1) + 7
                  ) - 1;
                break;
              case 'day':
              case 'date':
                e = n(this.year(), this.month(), this.date() + 1) - 1;
                break;
              case 'hour':
                (e = this._d.valueOf()),
                  (e +=
                    an -
                    un(e + (this._isUTC ? 0 : this.utcOffset() * sn), an) -
                    1);
                break;
              case 'minute':
                (e = this._d.valueOf()), (e += sn - un(e, sn) - 1);
                break;
              case 'second':
                (e = this._d.valueOf()), (e += rn - un(e, rn) - 1);
            }
            return this._d.setTime(e), i.updateOffset(this, !0), this;
          }),
          (xn.format = function (t) {
            t || (t = this.isUtc() ? i.defaultFormatUtc : i.defaultFormat);
            var e = J(this, t);
            return this.localeData().postformat(e);
          }),
          (xn.from = function (t, e) {
            return this.isValid() && ((D(t) && t.isValid()) || _e(t).isValid())
              ? He({ to: this, from: t }).locale(this.locale()).humanize(!e)
              : this.localeData().invalidDate();
          }),
          (xn.fromNow = function (t) {
            return this.from(_e(), t);
          }),
          (xn.to = function (t, e) {
            return this.isValid() && ((D(t) && t.isValid()) || _e(t).isValid())
              ? He({ from: this, to: t }).locale(this.locale()).humanize(!e)
              : this.localeData().invalidDate();
          }),
          (xn.toNow = function (t) {
            return this.to(_e(), t);
          }),
          (xn.get = function (t) {
            return T(this[(t = O(t))]) ? this[t]() : this;
          }),
          (xn.invalidAt = function () {
            return f(this).overflow;
          }),
          (xn.isAfter = function (t, e) {
            var n = D(t) ? t : _e(t);
            return (
              !(!this.isValid() || !n.isValid()) &&
              ('millisecond' === (e = O(e) || 'millisecond')
                ? this.valueOf() > n.valueOf()
                : n.valueOf() < this.clone().startOf(e).valueOf())
            );
          }),
          (xn.isBefore = function (t, e) {
            var n = D(t) ? t : _e(t);
            return (
              !(!this.isValid() || !n.isValid()) &&
              ('millisecond' === (e = O(e) || 'millisecond')
                ? this.valueOf() < n.valueOf()
                : this.clone().endOf(e).valueOf() < n.valueOf())
            );
          }),
          (xn.isBetween = function (t, e, n, i) {
            var r = D(t) ? t : _e(t),
              s = D(e) ? e : _e(e);
            return (
              !!(this.isValid() && r.isValid() && s.isValid()) &&
              ('(' === (i = i || '()')[0]
                ? this.isAfter(r, n)
                : !this.isBefore(r, n)) &&
              (')' === i[1] ? this.isBefore(s, n) : !this.isAfter(s, n))
            );
          }),
          (xn.isSame = function (t, e) {
            var n,
              i = D(t) ? t : _e(t);
            return (
              !(!this.isValid() || !i.isValid()) &&
              ('millisecond' === (e = O(e) || 'millisecond')
                ? this.valueOf() === i.valueOf()
                : ((n = i.valueOf()),
                  this.clone().startOf(e).valueOf() <= n &&
                    n <= this.clone().endOf(e).valueOf()))
            );
          }),
          (xn.isSameOrAfter = function (t, e) {
            return this.isSame(t, e) || this.isAfter(t, e);
          }),
          (xn.isSameOrBefore = function (t, e) {
            return this.isSame(t, e) || this.isBefore(t, e);
          }),
          (xn.isValid = function () {
            return d(this);
          }),
          (xn.lang = en),
          (xn.locale = tn),
          (xn.localeData = nn),
          (xn.max = Pe),
          (xn.min = Me),
          (xn.parsingFlags = function () {
            return l({}, f(this));
          }),
          (xn.set = function (t, e) {
            if ('object' == typeof t)
              for (
                var n = (function (t) {
                    var e = [];
                    for (var n in t) e.push({ unit: n, priority: B[n] });
                    return (
                      e.sort(function (t, e) {
                        return t.priority - e.priority;
                      }),
                      e
                    );
                  })((t = N(t))),
                  i = 0;
                i < n.length;
                i++
              )
                this[n[i].unit](t[n[i].unit]);
            else if (T(this[(t = O(t))])) return this[t](e);
            return this;
          }),
          (xn.startOf = function (t) {
            var e;
            if (void 0 === (t = O(t)) || 'millisecond' === t || !this.isValid())
              return this;
            var n = this._isUTC ? hn : cn;
            switch (t) {
              case 'year':
                e = n(this.year(), 0, 1);
                break;
              case 'quarter':
                e = n(this.year(), this.month() - (this.month() % 3), 1);
                break;
              case 'month':
                e = n(this.year(), this.month(), 1);
                break;
              case 'week':
                e = n(this.year(), this.month(), this.date() - this.weekday());
                break;
              case 'isoWeek':
                e = n(
                  this.year(),
                  this.month(),
                  this.date() - (this.isoWeekday() - 1)
                );
                break;
              case 'day':
              case 'date':
                e = n(this.year(), this.month(), this.date());
                break;
              case 'hour':
                (e = this._d.valueOf()),
                  (e -= un(e + (this._isUTC ? 0 : this.utcOffset() * sn), an));
                break;
              case 'minute':
                (e = this._d.valueOf()), (e -= un(e, sn));
                break;
              case 'second':
                (e = this._d.valueOf()), (e -= un(e, rn));
            }
            return this._d.setTime(e), i.updateOffset(this, !0), this;
          }),
          (xn.subtract = $e),
          (xn.toArray = function () {
            var t = this;
            return [
              t.year(),
              t.month(),
              t.date(),
              t.hour(),
              t.minute(),
              t.second(),
              t.millisecond(),
            ];
          }),
          (xn.toObject = function () {
            var t = this;
            return {
              years: t.year(),
              months: t.month(),
              date: t.date(),
              hours: t.hours(),
              minutes: t.minutes(),
              seconds: t.seconds(),
              milliseconds: t.milliseconds(),
            };
          }),
          (xn.toDate = function () {
            return new Date(this.valueOf());
          }),
          (xn.toISOString = function (t) {
            if (!this.isValid()) return null;
            var e = !0 !== t,
              n = e ? this.clone().utc() : this;
            return n.year() < 0 || n.year() > 9999
              ? J(
                  n,
                  e
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
                )
              : T(Date.prototype.toISOString)
              ? e
                ? this.toDate().toISOString()
                : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3)
                    .toISOString()
                    .replace('Z', J(n, 'Z'))
              : J(
                  n,
                  e
                    ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
                );
          }),
          (xn.inspect = function () {
            if (!this.isValid()) return 'moment.invalid(/* ' + this._i + ' */)';
            var t = 'moment',
              e = '';
            this.isLocal() ||
              ((t = 0 === this.utcOffset() ? 'moment.utc' : 'moment.parseZone'),
              (e = 'Z'));
            var n = '[' + t + '("]',
              i = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY',
              r = e + '[")]';
            return this.format(n + i + '-MM-DD[T]HH:mm:ss.SSS' + r);
          }),
          (xn.toJSON = function () {
            return this.isValid() ? this.toISOString() : null;
          }),
          (xn.toString = function () {
            return this.clone()
              .locale('en')
              .format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
          }),
          (xn.unix = function () {
            return Math.floor(this.valueOf() / 1e3);
          }),
          (xn.valueOf = function () {
            return this._d.valueOf() - 6e4 * (this._offset || 0);
          }),
          (xn.creationData = function () {
            return {
              input: this._i,
              format: this._f,
              locale: this._locale,
              isUTC: this._isUTC,
              strict: this._strict,
            };
          }),
          (xn.year = kt),
          (xn.isLeapYear = function () {
            return bt(this.year());
          }),
          (xn.weekYear = function (t) {
            return pn.call(
              this,
              t,
              this.week(),
              this.weekday(),
              this.localeData()._week.dow,
              this.localeData()._week.doy
            );
          }),
          (xn.isoWeekYear = function (t) {
            return pn.call(this, t, this.isoWeek(), this.isoWeekday(), 1, 4);
          }),
          (xn.quarter = xn.quarters =
            function (t) {
              return null == t
                ? Math.ceil((this.month() + 1) / 3)
                : this.month(3 * (t - 1) + (this.month() % 3));
            }),
          (xn.month = Lt),
          (xn.daysInMonth = function () {
            return Pt(this.year(), this.month());
          }),
          (xn.week = xn.weeks =
            function (t) {
              var e = this.localeData().week(this);
              return null == t ? e : this.add(7 * (t - e), 'd');
            }),
          (xn.isoWeek = xn.isoWeeks =
            function (t) {
              var e = Jt(this, 1, 4).week;
              return null == t ? e : this.add(7 * (t - e), 'd');
            }),
          (xn.weeksInYear = function () {
            var t = this.localeData()._week;
            return zt(this.year(), t.dow, t.doy);
          }),
          (xn.isoWeeksInYear = function () {
            return zt(this.year(), 1, 4);
          }),
          (xn.date = fn),
          (xn.day = xn.days =
            function (t) {
              if (!this.isValid()) return null != t ? this : NaN;
              var e = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
              return null != t
                ? ((t = (function (t, e) {
                    return 'string' != typeof t
                      ? t
                      : isNaN(t)
                      ? 'number' == typeof (t = e.weekdaysParse(t))
                        ? t
                        : null
                      : parseInt(t, 10);
                  })(t, this.localeData())),
                  this.add(t - e, 'd'))
                : e;
            }),
          (xn.weekday = function (t) {
            if (!this.isValid()) return null != t ? this : NaN;
            var e = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return null == t ? e : this.add(t - e, 'd');
          }),
          (xn.isoWeekday = function (t) {
            if (!this.isValid()) return null != t ? this : NaN;
            if (null != t) {
              var e = (function (t, e) {
                return 'string' == typeof t
                  ? e.weekdaysParse(t) % 7 || 7
                  : isNaN(t)
                  ? null
                  : t;
              })(t, this.localeData());
              return this.day(this.day() % 7 ? e : e - 7);
            }
            return this.day() || 7;
          }),
          (xn.dayOfYear = function (t) {
            var e =
              Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) /
                  864e5
              ) + 1;
            return null == t ? e : this.add(t - e, 'd');
          }),
          (xn.hour = xn.hours = re),
          (xn.minute = xn.minutes = dn),
          (xn.second = xn.seconds = yn),
          (xn.millisecond = xn.milliseconds = gn),
          (xn.utcOffset = function (t, e, n) {
            var r,
              s = this._offset || 0;
            if (!this.isValid()) return null != t ? this : NaN;
            if (null != t) {
              if ('string' == typeof t) {
                if (null === (t = Ye(at, t))) return this;
              } else Math.abs(t) < 16 && !n && (t *= 60);
              return (
                !this._isUTC && e && (r = Xe(this)),
                (this._offset = t),
                (this._isUTC = !0),
                null != r && this.add(r, 'm'),
                s !== t &&
                  (!e || this._changeInProgress
                    ? qe(this, He(t - s, 'm'), 1, !1)
                    : this._changeInProgress ||
                      ((this._changeInProgress = !0),
                      i.updateOffset(this, !0),
                      (this._changeInProgress = null))),
                this
              );
            }
            return this._isUTC ? s : Xe(this);
          }),
          (xn.utc = function (t) {
            return this.utcOffset(0, t);
          }),
          (xn.local = function (t) {
            return (
              this._isUTC &&
                (this.utcOffset(0, t),
                (this._isUTC = !1),
                t && this.subtract(Xe(this), 'm')),
              this
            );
          }),
          (xn.parseZone = function () {
            if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);
            else if ('string' == typeof this._i) {
              var t = Ye(st, this._i);
              null != t ? this.utcOffset(t) : this.utcOffset(0, !0);
            }
            return this;
          }),
          (xn.hasAlignedHourOffset = function (t) {
            return (
              !!this.isValid() &&
              ((t = t ? _e(t).utcOffset() : 0),
              (this.utcOffset() - t) % 60 == 0)
            );
          }),
          (xn.isDST = function () {
            return (
              this.utcOffset() > this.clone().month(0).utcOffset() ||
              this.utcOffset() > this.clone().month(5).utcOffset()
            );
          }),
          (xn.isLocal = function () {
            return !!this.isValid() && !this._isUTC;
          }),
          (xn.isUtcOffset = function () {
            return !!this.isValid() && this._isUTC;
          }),
          (xn.isUtc = Ve),
          (xn.isUTC = Ve),
          (xn.zoneAbbr = function () {
            return this._isUTC ? 'UTC' : '';
          }),
          (xn.zoneName = function () {
            return this._isUTC ? 'Coordinated Universal Time' : '';
          }),
          (xn.dates = C('dates accessor is deprecated. Use date instead.', fn)),
          (xn.months = C(
            'months accessor is deprecated. Use month instead',
            Lt
          )),
          (xn.years = C('years accessor is deprecated. Use year instead', kt)),
          (xn.zone = C(
            'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
            function (t, e) {
              return null != t
                ? ('string' != typeof t && (t = -t), this.utcOffset(t, e), this)
                : -this.utcOffset();
            }
          )),
          (xn.isDSTShifted = C(
            'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
            function () {
              if (!a(this._isDSTShifted)) return this._isDSTShifted;
              var t = {};
              if ((v(t, this), (t = ke(t))._a)) {
                var e = t._isUTC ? p(t._a) : _e(t._a);
                this._isDSTShifted = this.isValid() && w(t._a, e.toArray()) > 0;
              } else this._isDSTShifted = !1;
              return this._isDSTShifted;
            }
          ));
        var Sn = M.prototype;
        function En(t, e, n, i) {
          var r = pe(),
            s = p().set(i, e);
          return r[n](s, t);
        }
        function wn(t, e, n) {
          if ((o(t) && ((e = t), (t = void 0)), (t = t || ''), null != e))
            return En(t, e, n, 'month');
          var i,
            r = [];
          for (i = 0; i < 12; i++) r[i] = En(t, i, n, 'month');
          return r;
        }
        function An(t, e, n, i) {
          'boolean' == typeof t
            ? (o(e) && ((n = e), (e = void 0)), (e = e || ''))
            : ((n = e = t),
              (t = !1),
              o(e) && ((n = e), (e = void 0)),
              (e = e || ''));
          var r,
            s = pe(),
            a = t ? s._week.dow : 0;
          if (null != n) return En(e, (n + a) % 7, i, 'day');
          var u = [];
          for (r = 0; r < 7; r++) u[r] = En(e, (r + a) % 7, i, 'day');
          return u;
        }
        (Sn.calendar = function (t, e, n) {
          var i = this._calendar[t] || this._calendar.sameElse;
          return T(i) ? i.call(e, n) : i;
        }),
          (Sn.longDateFormat = function (t) {
            var e = this._longDateFormat[t],
              n = this._longDateFormat[t.toUpperCase()];
            return e || !n
              ? e
              : ((this._longDateFormat[t] = n.replace(
                  /MMMM|MM|DD|dddd/g,
                  function (t) {
                    return t.slice(1);
                  }
                )),
                this._longDateFormat[t]);
          }),
          (Sn.invalidDate = function () {
            return this._invalidDate;
          }),
          (Sn.ordinal = function (t) {
            return this._ordinal.replace('%d', t);
          }),
          (Sn.preparse = Dn),
          (Sn.postformat = Dn),
          (Sn.relativeTime = function (t, e, n, i) {
            var r = this._relativeTime[n];
            return T(r) ? r(t, e, n, i) : r.replace(/%d/i, t);
          }),
          (Sn.pastFuture = function (t, e) {
            var n = this._relativeTime[t > 0 ? 'future' : 'past'];
            return T(n) ? n(e) : n.replace(/%s/i, e);
          }),
          (Sn.set = function (t) {
            var e, n;
            for (n in t) T((e = t[n])) ? (this[n] = e) : (this['_' + n] = e);
            (this._config = t),
              (this._dayOfMonthOrdinalParseLenient = new RegExp(
                (this._dayOfMonthOrdinalParse.source ||
                  this._ordinalParse.source) +
                  '|' +
                  /\d{1,2}/.source
              ));
          }),
          (Sn.months = function (t, e) {
            return t
              ? r(this._months)
                ? this._months[t.month()]
                : this._months[
                    (this._months.isFormat || It).test(e)
                      ? 'format'
                      : 'standalone'
                  ][t.month()]
              : r(this._months)
              ? this._months
              : this._months.standalone;
          }),
          (Sn.monthsShort = function (t, e) {
            return t
              ? r(this._monthsShort)
                ? this._monthsShort[t.month()]
                : this._monthsShort[It.test(e) ? 'format' : 'standalone'][
                    t.month()
                  ]
              : r(this._monthsShort)
              ? this._monthsShort
              : this._monthsShort.standalone;
          }),
          (Sn.monthsParse = function (t, e, n) {
            var i, r, s;
            if (this._monthsParseExact)
              return function (t, e, n) {
                var i,
                  r,
                  s,
                  a = t.toLocaleLowerCase();
                if (!this._monthsParse)
                  for (
                    this._monthsParse = [],
                      this._longMonthsParse = [],
                      this._shortMonthsParse = [],
                      i = 0;
                    i < 12;
                    ++i
                  )
                    (s = p([2e3, i])),
                      (this._shortMonthsParse[i] = this.monthsShort(
                        s,
                        ''
                      ).toLocaleLowerCase()),
                      (this._longMonthsParse[i] = this.months(
                        s,
                        ''
                      ).toLocaleLowerCase());
                return n
                  ? 'MMM' === e
                    ? -1 !== (r = Ft.call(this._shortMonthsParse, a))
                      ? r
                      : null
                    : -1 !== (r = Ft.call(this._longMonthsParse, a))
                    ? r
                    : null
                  : 'MMM' === e
                  ? -1 !== (r = Ft.call(this._shortMonthsParse, a))
                    ? r
                    : -1 !== (r = Ft.call(this._longMonthsParse, a))
                    ? r
                    : null
                  : -1 !== (r = Ft.call(this._longMonthsParse, a))
                  ? r
                  : -1 !== (r = Ft.call(this._shortMonthsParse, a))
                  ? r
                  : null;
              }.call(this, t, e, n);
            for (
              this._monthsParse ||
                ((this._monthsParse = []),
                (this._longMonthsParse = []),
                (this._shortMonthsParse = [])),
                i = 0;
              i < 12;
              i++
            ) {
              if (
                ((r = p([2e3, i])),
                n &&
                  !this._longMonthsParse[i] &&
                  ((this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(r, '').replace('.', '') + '$',
                    'i'
                  )),
                  (this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(r, '').replace('.', '') + '$',
                    'i'
                  ))),
                n ||
                  this._monthsParse[i] ||
                  ((s =
                    '^' + this.months(r, '') + '|^' + this.monthsShort(r, '')),
                  (this._monthsParse[i] = new RegExp(s.replace('.', ''), 'i'))),
                n && 'MMMM' === e && this._longMonthsParse[i].test(t))
              )
                return i;
              if (n && 'MMM' === e && this._shortMonthsParse[i].test(t))
                return i;
              if (!n && this._monthsParse[i].test(t)) return i;
            }
          }),
          (Sn.monthsRegex = function (t) {
            return this._monthsParseExact
              ? (h(this, '_monthsRegex') || Yt.call(this),
                t ? this._monthsStrictRegex : this._monthsRegex)
              : (h(this, '_monthsRegex') || (this._monthsRegex = Rt),
                this._monthsStrictRegex && t
                  ? this._monthsStrictRegex
                  : this._monthsRegex);
          }),
          (Sn.monthsShortRegex = function (t) {
            return this._monthsParseExact
              ? (h(this, '_monthsRegex') || Yt.call(this),
                t ? this._monthsShortStrictRegex : this._monthsShortRegex)
              : (h(this, '_monthsShortRegex') || (this._monthsShortRegex = Ut),
                this._monthsShortStrictRegex && t
                  ? this._monthsShortStrictRegex
                  : this._monthsShortRegex);
          }),
          (Sn.week = function (t) {
            return Jt(t, this._week.dow, this._week.doy).week;
          }),
          (Sn.firstDayOfYear = function () {
            return this._week.doy;
          }),
          (Sn.firstDayOfWeek = function () {
            return this._week.dow;
          }),
          (Sn.weekdays = function (t, e) {
            var n = r(this._weekdays)
              ? this._weekdays
              : this._weekdays[
                  t && !0 !== t && this._weekdays.isFormat.test(e)
                    ? 'format'
                    : 'standalone'
                ];
            return !0 === t ? Ht(n, this._week.dow) : t ? n[t.day()] : n;
          }),
          (Sn.weekdaysMin = function (t) {
            return !0 === t
              ? Ht(this._weekdaysMin, this._week.dow)
              : t
              ? this._weekdaysMin[t.day()]
              : this._weekdaysMin;
          }),
          (Sn.weekdaysShort = function (t) {
            return !0 === t
              ? Ht(this._weekdaysShort, this._week.dow)
              : t
              ? this._weekdaysShort[t.day()]
              : this._weekdaysShort;
          }),
          (Sn.weekdaysParse = function (t, e, n) {
            var i, r, s;
            if (this._weekdaysParseExact)
              return function (t, e, n) {
                var i,
                  r,
                  s,
                  a = t.toLocaleLowerCase();
                if (!this._weekdaysParse)
                  for (
                    this._weekdaysParse = [],
                      this._shortWeekdaysParse = [],
                      this._minWeekdaysParse = [],
                      i = 0;
                    i < 7;
                    ++i
                  )
                    (s = p([2e3, 1]).day(i)),
                      (this._minWeekdaysParse[i] = this.weekdaysMin(
                        s,
                        ''
                      ).toLocaleLowerCase()),
                      (this._shortWeekdaysParse[i] = this.weekdaysShort(
                        s,
                        ''
                      ).toLocaleLowerCase()),
                      (this._weekdaysParse[i] = this.weekdays(
                        s,
                        ''
                      ).toLocaleLowerCase());
                return n
                  ? 'dddd' === e
                    ? -1 !== (r = Ft.call(this._weekdaysParse, a))
                      ? r
                      : null
                    : 'ddd' === e
                    ? -1 !== (r = Ft.call(this._shortWeekdaysParse, a))
                      ? r
                      : null
                    : -1 !== (r = Ft.call(this._minWeekdaysParse, a))
                    ? r
                    : null
                  : 'dddd' === e
                  ? -1 !== (r = Ft.call(this._weekdaysParse, a))
                    ? r
                    : -1 !== (r = Ft.call(this._shortWeekdaysParse, a))
                    ? r
                    : -1 !== (r = Ft.call(this._minWeekdaysParse, a))
                    ? r
                    : null
                  : 'ddd' === e
                  ? -1 !== (r = Ft.call(this._shortWeekdaysParse, a))
                    ? r
                    : -1 !== (r = Ft.call(this._weekdaysParse, a))
                    ? r
                    : -1 !== (r = Ft.call(this._minWeekdaysParse, a))
                    ? r
                    : null
                  : -1 !== (r = Ft.call(this._minWeekdaysParse, a))
                  ? r
                  : -1 !== (r = Ft.call(this._weekdaysParse, a))
                  ? r
                  : -1 !== (r = Ft.call(this._shortWeekdaysParse, a))
                  ? r
                  : null;
              }.call(this, t, e, n);
            for (
              this._weekdaysParse ||
                ((this._weekdaysParse = []),
                (this._minWeekdaysParse = []),
                (this._shortWeekdaysParse = []),
                (this._fullWeekdaysParse = [])),
                i = 0;
              i < 7;
              i++
            ) {
              if (
                ((r = p([2e3, 1]).day(i)),
                n &&
                  !this._fullWeekdaysParse[i] &&
                  ((this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(r, '').replace('.', '\\.?') + '$',
                    'i'
                  )),
                  (this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(r, '').replace('.', '\\.?') + '$',
                    'i'
                  )),
                  (this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(r, '').replace('.', '\\.?') + '$',
                    'i'
                  ))),
                this._weekdaysParse[i] ||
                  ((s =
                    '^' +
                    this.weekdays(r, '') +
                    '|^' +
                    this.weekdaysShort(r, '') +
                    '|^' +
                    this.weekdaysMin(r, '')),
                  (this._weekdaysParse[i] = new RegExp(
                    s.replace('.', ''),
                    'i'
                  ))),
                n && 'dddd' === e && this._fullWeekdaysParse[i].test(t))
              )
                return i;
              if (n && 'ddd' === e && this._shortWeekdaysParse[i].test(t))
                return i;
              if (n && 'dd' === e && this._minWeekdaysParse[i].test(t))
                return i;
              if (!n && this._weekdaysParse[i].test(t)) return i;
            }
          }),
          (Sn.weekdaysRegex = function (t) {
            return this._weekdaysParseExact
              ? (h(this, '_weekdaysRegex') || Qt.call(this),
                t ? this._weekdaysStrictRegex : this._weekdaysRegex)
              : (h(this, '_weekdaysRegex') || (this._weekdaysRegex = qt),
                this._weekdaysStrictRegex && t
                  ? this._weekdaysStrictRegex
                  : this._weekdaysRegex);
          }),
          (Sn.weekdaysShortRegex = function (t) {
            return this._weekdaysParseExact
              ? (h(this, '_weekdaysRegex') || Qt.call(this),
                t ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
              : (h(this, '_weekdaysShortRegex') ||
                  (this._weekdaysShortRegex = Zt),
                this._weekdaysShortStrictRegex && t
                  ? this._weekdaysShortStrictRegex
                  : this._weekdaysShortRegex);
          }),
          (Sn.weekdaysMinRegex = function (t) {
            return this._weekdaysParseExact
              ? (h(this, '_weekdaysRegex') || Qt.call(this),
                t ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
              : (h(this, '_weekdaysMinRegex') || (this._weekdaysMinRegex = $t),
                this._weekdaysMinStrictRegex && t
                  ? this._weekdaysMinStrictRegex
                  : this._weekdaysMinRegex);
          }),
          (Sn.isPM = function (t) {
            return 'p' === (t + '').toLowerCase().charAt(0);
          }),
          (Sn.meridiem = function (t, e, n) {
            return t > 11 ? (n ? 'pm' : 'PM') : n ? 'am' : 'AM';
          }),
          he('en', {
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function (t) {
              var e = t % 10,
                n =
                  1 === E((t % 100) / 10)
                    ? 'th'
                    : 1 === e
                    ? 'st'
                    : 2 === e
                    ? 'nd'
                    : 3 === e
                    ? 'rd'
                    : 'th';
              return t + n;
            },
          }),
          (i.lang = C(
            'moment.lang is deprecated. Use moment.locale instead.',
            he
          )),
          (i.langData = C(
            'moment.langData is deprecated. Use moment.localeData instead.',
            pe
          ));
        var Cn = Math.abs;
        function bn(t, e, n, i) {
          var r = He(e, n);
          return (
            (t._milliseconds += i * r._milliseconds),
            (t._days += i * r._days),
            (t._months += i * r._months),
            t._bubble()
          );
        }
        function Fn(t) {
          return t < 0 ? Math.floor(t) : Math.ceil(t);
        }
        function kn(t) {
          return (4800 * t) / 146097;
        }
        function Tn(t) {
          return (146097 * t) / 4800;
        }
        function _n(t) {
          return function () {
            return this.as(t);
          };
        }
        var Mn = _n('ms'),
          Pn = _n('s'),
          In = _n('m'),
          On = _n('h'),
          Nn = _n('d'),
          Bn = _n('w'),
          Ln = _n('M'),
          Un = _n('Q'),
          Rn = _n('y');
        function Yn(t) {
          return function () {
            return this.isValid() ? this._data[t] : NaN;
          };
        }
        var jn = Yn('milliseconds'),
          Xn = Yn('seconds'),
          Vn = Yn('minutes'),
          Jn = Yn('hours'),
          zn = Yn('days'),
          Hn = Yn('months'),
          Wn = Yn('years'),
          Gn = Math.round,
          Kn = { ss: 44, s: 45, m: 45, h: 22, d: 26, M: 11 },
          qn = Math.abs;
        function Zn(t) {
          return (t > 0) - (t < 0) || +t;
        }
        function $n() {
          if (!this.isValid()) return this.localeData().invalidDate();
          var t,
            e,
            n = qn(this._milliseconds) / 1e3,
            i = qn(this._days),
            r = qn(this._months);
          (t = S(n / 60)), (e = S(t / 60)), (n %= 60), (t %= 60);
          var s = S(r / 12),
            a = (r %= 12),
            o = i,
            u = e,
            c = t,
            h = n ? n.toFixed(3).replace(/\.?0+$/, '') : '',
            l = this.asSeconds();
          if (!l) return 'P0D';
          var p = l < 0 ? '-' : '',
            f = Zn(this._months) !== Zn(l) ? '-' : '',
            d = Zn(this._days) !== Zn(l) ? '-' : '',
            m = Zn(this._milliseconds) !== Zn(l) ? '-' : '';
          return (
            p +
            'P' +
            (s ? f + s + 'Y' : '') +
            (a ? f + a + 'M' : '') +
            (o ? d + o + 'D' : '') +
            (u || c || h ? 'T' : '') +
            (u ? m + u + 'H' : '') +
            (c ? m + c + 'M' : '') +
            (h ? m + h + 'S' : '')
          );
        }
        var Qn = Ne.prototype;
        return (
          (Qn.isValid = function () {
            return this._isValid;
          }),
          (Qn.abs = function () {
            var t = this._data;
            return (
              (this._milliseconds = Cn(this._milliseconds)),
              (this._days = Cn(this._days)),
              (this._months = Cn(this._months)),
              (t.milliseconds = Cn(t.milliseconds)),
              (t.seconds = Cn(t.seconds)),
              (t.minutes = Cn(t.minutes)),
              (t.hours = Cn(t.hours)),
              (t.months = Cn(t.months)),
              (t.years = Cn(t.years)),
              this
            );
          }),
          (Qn.add = function (t, e) {
            return bn(this, t, e, 1);
          }),
          (Qn.subtract = function (t, e) {
            return bn(this, t, e, -1);
          }),
          (Qn.as = function (t) {
            if (!this.isValid()) return NaN;
            var e,
              n,
              i = this._milliseconds;
            if ('month' === (t = O(t)) || 'quarter' === t || 'year' === t)
              switch (
                ((e = this._days + i / 864e5), (n = this._months + kn(e)), t)
              ) {
                case 'month':
                  return n;
                case 'quarter':
                  return n / 3;
                case 'year':
                  return n / 12;
              }
            else
              switch (((e = this._days + Math.round(Tn(this._months))), t)) {
                case 'week':
                  return e / 7 + i / 6048e5;
                case 'day':
                  return e + i / 864e5;
                case 'hour':
                  return 24 * e + i / 36e5;
                case 'minute':
                  return 1440 * e + i / 6e4;
                case 'second':
                  return 86400 * e + i / 1e3;
                case 'millisecond':
                  return Math.floor(864e5 * e) + i;
                default:
                  throw new Error('Unknown unit ' + t);
              }
          }),
          (Qn.asMilliseconds = Mn),
          (Qn.asSeconds = Pn),
          (Qn.asMinutes = In),
          (Qn.asHours = On),
          (Qn.asDays = Nn),
          (Qn.asWeeks = Bn),
          (Qn.asMonths = Ln),
          (Qn.asQuarters = Un),
          (Qn.asYears = Rn),
          (Qn.valueOf = function () {
            return this.isValid()
              ? this._milliseconds +
                  864e5 * this._days +
                  (this._months % 12) * 2592e6 +
                  31536e6 * E(this._months / 12)
              : NaN;
          }),
          (Qn._bubble = function () {
            var t,
              e,
              n,
              i,
              r,
              s = this._milliseconds,
              a = this._days,
              o = this._months,
              u = this._data;
            return (
              (s >= 0 && a >= 0 && o >= 0) ||
                (s <= 0 && a <= 0 && o <= 0) ||
                ((s += 864e5 * Fn(Tn(o) + a)), (a = 0), (o = 0)),
              (u.milliseconds = s % 1e3),
              (t = S(s / 1e3)),
              (u.seconds = t % 60),
              (e = S(t / 60)),
              (u.minutes = e % 60),
              (n = S(e / 60)),
              (u.hours = n % 24),
              (a += S(n / 24)),
              (r = S(kn(a))),
              (o += r),
              (a -= Fn(Tn(r))),
              (i = S(o / 12)),
              (o %= 12),
              (u.days = a),
              (u.months = o),
              (u.years = i),
              this
            );
          }),
          (Qn.clone = function () {
            return He(this);
          }),
          (Qn.get = function (t) {
            return (t = O(t)), this.isValid() ? this[t + 's']() : NaN;
          }),
          (Qn.milliseconds = jn),
          (Qn.seconds = Xn),
          (Qn.minutes = Vn),
          (Qn.hours = Jn),
          (Qn.days = zn),
          (Qn.weeks = function () {
            return S(this.days() / 7);
          }),
          (Qn.months = Hn),
          (Qn.years = Wn),
          (Qn.humanize = function (t) {
            if (!this.isValid()) return this.localeData().invalidDate();
            var e = this.localeData(),
              n = (function (t, e, n) {
                var i = He(t).abs(),
                  r = Gn(i.as('s')),
                  s = Gn(i.as('m')),
                  a = Gn(i.as('h')),
                  o = Gn(i.as('d')),
                  u = Gn(i.as('M')),
                  c = Gn(i.as('y')),
                  h = (r <= Kn.ss && ['s', r]) ||
                    (r < Kn.s && ['ss', r]) ||
                    (s <= 1 && ['m']) ||
                    (s < Kn.m && ['mm', s]) ||
                    (a <= 1 && ['h']) ||
                    (a < Kn.h && ['hh', a]) ||
                    (o <= 1 && ['d']) ||
                    (o < Kn.d && ['dd', o]) ||
                    (u <= 1 && ['M']) ||
                    (u < Kn.M && ['MM', u]) ||
                    (c <= 1 && ['y']) || ['yy', c];
                return (
                  (h[2] = e),
                  (h[3] = +t > 0),
                  (h[4] = n),
                  function (t, e, n, i, r) {
                    return r.relativeTime(e || 1, !!n, t, i);
                  }.apply(null, h)
                );
              })(this, !t, e);
            return t && (n = e.pastFuture(+this, n)), e.postformat(n);
          }),
          (Qn.toISOString = $n),
          (Qn.toString = $n),
          (Qn.toJSON = $n),
          (Qn.locale = tn),
          (Qn.localeData = nn),
          (Qn.toIsoString = C(
            'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
            $n
          )),
          (Qn.lang = en),
          V('X', 0, 0, 'unix'),
          V('x', 0, 0, 'valueOf'),
          ct('x', rt),
          ct('X', /[+-]?\d+(\.\d{1,3})?/),
          ft('X', function (t, e, n) {
            n._d = new Date(1e3 * parseFloat(t, 10));
          }),
          ft('x', function (t, e, n) {
            n._d = new Date(E(t));
          }),
          (i.version = '2.24.0'),
          (e = _e),
          (i.fn = xn),
          (i.min = function () {
            return Ie('isBefore', [].slice.call(arguments, 0));
          }),
          (i.max = function () {
            return Ie('isAfter', [].slice.call(arguments, 0));
          }),
          (i.now = function () {
            return Date.now ? Date.now() : +new Date();
          }),
          (i.utc = p),
          (i.unix = function (t) {
            return _e(1e3 * t);
          }),
          (i.months = function (t, e) {
            return wn(t, e, 'months');
          }),
          (i.isDate = u),
          (i.locale = he),
          (i.invalid = m),
          (i.duration = He),
          (i.isMoment = D),
          (i.weekdays = function (t, e, n) {
            return An(t, e, n, 'weekdays');
          }),
          (i.parseZone = function () {
            return _e.apply(null, arguments).parseZone();
          }),
          (i.localeData = pe),
          (i.isDuration = Be),
          (i.monthsShort = function (t, e) {
            return wn(t, e, 'monthsShort');
          }),
          (i.weekdaysMin = function (t, e, n) {
            return An(t, e, n, 'weekdaysMin');
          }),
          (i.defineLocale = le),
          (i.updateLocale = function (t, e) {
            if (null != e) {
              var n,
                i,
                r = se;
              null != (i = ce(t)) && (r = i._config),
                (e = _(r, e)),
                ((n = new M(e)).parentLocale = ae[t]),
                (ae[t] = n),
                he(t);
            } else
              null != ae[t] &&
                (null != ae[t].parentLocale
                  ? (ae[t] = ae[t].parentLocale)
                  : null != ae[t] && delete ae[t]);
            return ae[t];
          }),
          (i.locales = function () {
            return b(ae);
          }),
          (i.weekdaysShort = function (t, e, n) {
            return An(t, e, n, 'weekdaysShort');
          }),
          (i.normalizeUnits = O),
          (i.relativeTimeRounding = function (t) {
            return void 0 === t ? Gn : 'function' == typeof t && ((Gn = t), !0);
          }),
          (i.relativeTimeThreshold = function (t, e) {
            return (
              void 0 !== Kn[t] &&
              (void 0 === e
                ? Kn[t]
                : ((Kn[t] = e), 's' === t && (Kn.ss = e - 1), !0))
            );
          }),
          (i.calendarFormat = function (t, e) {
            var n = t.diff(e, 'days', !0);
            return n < -6
              ? 'sameElse'
              : n < -1
              ? 'lastWeek'
              : n < 0
              ? 'lastDay'
              : n < 1
              ? 'sameDay'
              : n < 2
              ? 'nextDay'
              : n < 7
              ? 'nextWeek'
              : 'sameElse';
          }),
          (i.prototype = xn),
          (i.HTML5_FMT = {
            DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
            DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
            DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
            DATE: 'YYYY-MM-DD',
            TIME: 'HH:mm',
            TIME_SECONDS: 'HH:mm:ss',
            TIME_MS: 'HH:mm:ss.SSS',
            WEEK: 'GGGG-[W]WW',
            MONTH: 'YYYY-MM',
          }),
          i
        );
      })();
    }.call(this, n(65)(t)));
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = (function () {
      function t() {}
      return (
        (t.sendHeartbeat = function () {
          window &&
            window.postMessage({ action: 'automaton_still_running' }, '*');
        }),
        t
      );
    })();
    e.Heartbeat = i;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = n(33),
      r = n(4),
      s = (function () {
        function t() {}
        return (
          (t.parseNavigationScenario = function (t) {
            var e = null;
            'string' == typeof t ? (e = n(0).safeLoad(t)) : (e = t);
            void 0 === e.startPoint && (e.startPoint = null);
            for (
              var s = [], a = 0, o = Object.keys(e.steps);
              a < o.length;
              a++
            ) {
              var u = o[a];
              s.push(r.StepParser.parse(e.steps[u]));
            }
            if (
              null === e.name ||
              void 0 === e.name ||
              null === e.url ||
              void 0 === e.url ||
              s.length < 1
            )
              throw new Error(
                'A navigation scenario must have a name, a url, and at least 1 step'
              );
            var c = Object.create(i.NavigationScenario.prototype);
            return Object.assign(c, {
              name: e.name,
              url: e.url,
              startPoint: e.startPoint,
              description: e.description,
              steps: s,
            });
          }),
          t
        );
      })();
    e.ScenarioParser = s;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = n(32),
      r = (function () {
        function t(t, e, n, i) {
          (this.name = t),
            (this.url = e),
            (this.description = n),
            null != i && (this.startPoint = i),
            (this.steps = []);
        }
        return (
          (t.prototype.addStep = function (t) {
            this.steps.push(t);
          }),
          (t.prototype.getName = function () {
            return this.name;
          }),
          (t.prototype.getUrl = function () {
            return this.url;
          }),
          (t.prototype.getStartPoint = function () {
            return this.startPoint;
          }),
          (t.prototype.getDescription = function () {
            return this.description;
          }),
          (t.prototype.getSteps = function () {
            return this.steps;
          }),
          (t.prototype.isValid = function () {
            return (
              null !== this.name &&
              void 0 !== this.name &&
              null !== this.url &&
              void 0 !== this.url &&
              null !== this.steps &&
              void 0 !== this.steps &&
              this.steps.length > 0
            );
          }),
          (t.cast = function (t) {
            if ('string' == typeof t) {
              var e = n(0).safeLoad(t);
              return this.cast(e);
            }
            return i.ScenarioParser.parseNavigationScenario(t);
          }),
          t
        );
      })();
    e.NavigationScenario = r;
  },
  function (t, e, n) {
    'use strict';
    var i =
        (this && this.__awaiter) ||
        function (t, e, n, i) {
          return new (n || (n = Promise))(function (r, s) {
            function a(t) {
              try {
                u(i.next(t));
              } catch (t) {
                s(t);
              }
            }
            function o(t) {
              try {
                u(i.throw(t));
              } catch (t) {
                s(t);
              }
            }
            function u(t) {
              t.done
                ? r(t.value)
                : new n(function (e) {
                    e(t.value);
                  }).then(a, o);
            }
            u((i = i.apply(t, e || [])).next());
          });
        },
      r =
        (this && this.__generator) ||
        function (t, e) {
          var n,
            i,
            r,
            s,
            a = {
              label: 0,
              sent: function () {
                if (1 & r[0]) throw r[1];
                return r[1];
              },
              trys: [],
              ops: [],
            };
          return (
            (s = { next: o(0), throw: o(1), return: o(2) }),
            'function' == typeof Symbol &&
              (s[Symbol.iterator] = function () {
                return this;
              }),
            s
          );
          function o(s) {
            return function (o) {
              return (function (s) {
                if (n) throw new TypeError('Generator is already executing.');
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      i &&
                        (r =
                          2 & s[0]
                            ? i.return
                            : s[0]
                            ? i.throw || ((r = i.return) && r.call(i), 0)
                            : i.next) &&
                        !(r = r.call(i, s[1])).done)
                    )
                      return r;
                    switch (((i = 0), r && (s = [2 & s[0], r.value]), s[0])) {
                      case 0:
                      case 1:
                        r = s;
                        break;
                      case 4:
                        return a.label++, { value: s[1], done: !1 };
                      case 5:
                        a.label++, (i = s[1]), (s = [0]);
                        continue;
                      case 7:
                        (s = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(r = (r = a.trys).length > 0 && r[r.length - 1]) &&
                          (6 === s[0] || 2 === s[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === s[0] &&
                          (!r || (s[1] > r[0] && s[1] < r[3]))
                        ) {
                          a.label = s[1];
                          break;
                        }
                        if (6 === s[0] && a.label < r[1]) {
                          (a.label = r[1]), (r = s);
                          break;
                        }
                        if (r && a.label < r[2]) {
                          (a.label = r[2]), a.ops.push(s);
                          break;
                        }
                        r[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    s = e.call(t, a);
                  } catch (t) {
                    (s = [6, t]), (i = 0);
                  } finally {
                    n = r = 0;
                  }
                if (5 & s[0]) throw s[1];
                return { value: s[0] ? s[1] : void 0, done: !0 };
              })([s, o]);
            };
          }
        };
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = (function () {
      function t() {
        this.resolvers = [];
      }
      return (
        (t.prototype.addResolver = function (t) {
          if (null == t)
            throw new Error('resolver cannot be null or undefined');
          return this.resolvers.push(t), this;
        }),
        (t.prototype.resolveVariable = function (t) {
          var e = this;
          return new Promise(function (n, s) {
            !(function () {
              i(this, void 0, void 0, function () {
                var i, a, o;
                return r(this, function (r) {
                  switch (r.label) {
                    case 0:
                      (a = 0), (r.label = 1);
                    case 1:
                      if (!(a < e.resolvers.length)) return [3, 6];
                      r.label = 2;
                    case 2:
                      return (
                        r.trys.push([2, 4, , 5]),
                        [4, e.resolvers[a].resolveVariable(t)]
                      );
                    case 3:
                      if (null != (o = r.sent())) {
                        if (null != i)
                          return s('Duplicated variables are not allowed'), [2];
                        i = o;
                      }
                      return [3, 5];
                    case 4:
                      return r.sent(), [3, 5];
                    case 5:
                      return a++, [3, 1];
                    case 6:
                      return null == i ? s(t + ' is not defined') : n(i), [2];
                  }
                });
              });
            })();
          });
        }),
        (t.prototype.resolveMultipleVariables = function (t) {
          var e = this;
          return new Promise(function (n, s) {
            !(function () {
              i(this, void 0, void 0, function () {
                var i, a, o, u, c, h;
                return r(this, function (r) {
                  switch (r.label) {
                    case 0:
                      (i = new Map()), (a = 0), (o = t), (r.label = 1);
                    case 1:
                      if (!(a < o.length)) return [3, 6];
                      (u = o[a]), (c = void 0), (r.label = 2);
                    case 2:
                      return (
                        r.trys.push([2, 4, , 5]), [4, e.resolveVariable(u)]
                      );
                    case 3:
                      return (c = r.sent()), i.set(u, c), [3, 5];
                    case 4:
                      return (h = r.sent()), s(h), [2];
                    case 5:
                      return a++, [3, 1];
                    case 6:
                      return n(i), [2];
                  }
                });
              });
            })();
          });
        }),
        t
      );
    })();
    e.VariableResolutionManager = s;
  },
  function (t, e, n) {
    'use strict';
    function i(t) {
      for (var n in t) e.hasOwnProperty(n) || (e[n] = t[n]);
    }
    Object.defineProperty(e, '__esModule', { value: !0 }),
      i(n(20)),
      i(n(66)),
      i(n(31)),
      i(n(67)),
      i(n(68)),
      i(n(34)),
      i(n(33)),
      i(n(69)),
      i(n(19)),
      i(n(7)),
      i(n(2)),
      i(n(27)),
      i(n(28)),
      i(n(26)),
      i(n(12)),
      i(n(25)),
      i(n(24)),
      i(n(4)),
      i(n(18)),
      i(n(21)),
      i(n(13)),
      i(n(10)),
      i(n(17)),
      i(n(16)),
      i(n(3)),
      i(n(15));
  },
  function (t, e, n) {
    'use strict';
    var i = n(37),
      r = n(61);
    function s(t) {
      return function () {
        throw new Error('Function ' + t + ' is deprecated and cannot be used.');
      };
    }
    (t.exports.Type = n(1)),
      (t.exports.Schema = n(6)),
      (t.exports.FAILSAFE_SCHEMA = n(14)),
      (t.exports.JSON_SCHEMA = n(23)),
      (t.exports.CORE_SCHEMA = n(22)),
      (t.exports.DEFAULT_SAFE_SCHEMA = n(9)),
      (t.exports.DEFAULT_FULL_SCHEMA = n(11)),
      (t.exports.load = i.load),
      (t.exports.loadAll = i.loadAll),
      (t.exports.safeLoad = i.safeLoad),
      (t.exports.safeLoadAll = i.safeLoadAll),
      (t.exports.dump = r.dump),
      (t.exports.safeDump = r.safeDump),
      (t.exports.YAMLException = n(8)),
      (t.exports.MINIMAL_SCHEMA = n(14)),
      (t.exports.SAFE_SCHEMA = n(9)),
      (t.exports.DEFAULT_SCHEMA = n(11)),
      (t.exports.scan = s('scan')),
      (t.exports.parse = s('parse')),
      (t.exports.compose = s('compose')),
      (t.exports.addConstructor = s('addConstructor'));
  },
  function (t, e, n) {
    'use strict';
    var i = n(5),
      r = n(8),
      s = n(38),
      a = n(9),
      o = n(11),
      u = Object.prototype.hasOwnProperty,
      c = 1,
      h = 2,
      l = 3,
      p = 4,
      f = 1,
      d = 2,
      m = 3,
      y =
        /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,
      v = /[\x85\u2028\u2029]/,
      g = /[,\[\]\{\}]/,
      x = /^(?:!|!!|![a-z\-]+!)$/i,
      D =
        /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
    function S(t) {
      return Object.prototype.toString.call(t);
    }
    function E(t) {
      return 10 === t || 13 === t;
    }
    function w(t) {
      return 9 === t || 32 === t;
    }
    function A(t) {
      return 9 === t || 32 === t || 10 === t || 13 === t;
    }
    function C(t) {
      return 44 === t || 91 === t || 93 === t || 123 === t || 125 === t;
    }
    function b(t) {
      var e;
      return 48 <= t && t <= 57
        ? t - 48
        : 97 <= (e = 32 | t) && e <= 102
        ? e - 97 + 10
        : -1;
    }
    function F(t) {
      return 48 === t
        ? '\0'
        : 97 === t
        ? ''
        : 98 === t
        ? '\b'
        : 116 === t
        ? '\t'
        : 9 === t
        ? '\t'
        : 110 === t
        ? '\n'
        : 118 === t
        ? '\v'
        : 102 === t
        ? '\f'
        : 114 === t
        ? '\r'
        : 101 === t
        ? ''
        : 32 === t
        ? ' '
        : 34 === t
        ? '"'
        : 47 === t
        ? '/'
        : 92 === t
        ? '\\'
        : 78 === t
        ? ''
        : 95 === t
        ? ' '
        : 76 === t
        ? '\u2028'
        : 80 === t
        ? '\u2029'
        : '';
    }
    function k(t) {
      return t <= 65535
        ? String.fromCharCode(t)
        : String.fromCharCode(
            55296 + ((t - 65536) >> 10),
            56320 + ((t - 65536) & 1023)
          );
    }
    for (var T = new Array(256), _ = new Array(256), M = 0; M < 256; M++)
      (T[M] = F(M) ? 1 : 0), (_[M] = F(M));
    function P(t, e) {
      (this.input = t),
        (this.filename = e.filename || null),
        (this.schema = e.schema || o),
        (this.onWarning = e.onWarning || null),
        (this.legacy = e.legacy || !1),
        (this.json = e.json || !1),
        (this.listener = e.listener || null),
        (this.implicitTypes = this.schema.compiledImplicit),
        (this.typeMap = this.schema.compiledTypeMap),
        (this.length = t.length),
        (this.position = 0),
        (this.line = 0),
        (this.lineStart = 0),
        (this.lineIndent = 0),
        (this.documents = []);
    }
    function I(t, e) {
      return new r(
        e,
        new s(t.filename, t.input, t.position, t.line, t.position - t.lineStart)
      );
    }
    function O(t, e) {
      throw I(t, e);
    }
    function N(t, e) {
      t.onWarning && t.onWarning.call(null, I(t, e));
    }
    var B = {
      YAML: function (t, e, n) {
        var i, r, s;
        null !== t.version && O(t, 'duplication of %YAML directive'),
          1 !== n.length && O(t, 'YAML directive accepts exactly one argument'),
          null === (i = /^([0-9]+)\.([0-9]+)$/.exec(n[0])) &&
            O(t, 'ill-formed argument of the YAML directive'),
          (r = parseInt(i[1], 10)),
          (s = parseInt(i[2], 10)),
          1 !== r && O(t, 'unacceptable YAML version of the document'),
          (t.version = n[0]),
          (t.checkLineBreaks = s < 2),
          1 !== s &&
            2 !== s &&
            N(t, 'unsupported YAML version of the document');
      },
      TAG: function (t, e, n) {
        var i, r;
        2 !== n.length && O(t, 'TAG directive accepts exactly two arguments'),
          (i = n[0]),
          (r = n[1]),
          x.test(i) ||
            O(t, 'ill-formed tag handle (first argument) of the TAG directive'),
          u.call(t.tagMap, i) &&
            O(
              t,
              'there is a previously declared suffix for "' + i + '" tag handle'
            ),
          D.test(r) ||
            O(
              t,
              'ill-formed tag prefix (second argument) of the TAG directive'
            ),
          (t.tagMap[i] = r);
      },
    };
    function L(t, e, n, i) {
      var r, s, a, o;
      if (e < n) {
        if (((o = t.input.slice(e, n)), i))
          for (r = 0, s = o.length; r < s; r += 1)
            9 === (a = o.charCodeAt(r)) ||
              (32 <= a && a <= 1114111) ||
              O(t, 'expected valid JSON character');
        else y.test(o) && O(t, 'the stream contains non-printable characters');
        t.result += o;
      }
    }
    function U(t, e, n, r) {
      var s, a, o, c;
      for (
        i.isObject(n) ||
          O(
            t,
            'cannot merge mappings; the provided source object is unacceptable'
          ),
          o = 0,
          c = (s = Object.keys(n)).length;
        o < c;
        o += 1
      )
        (a = s[o]), u.call(e, a) || ((e[a] = n[a]), (r[a] = !0));
    }
    function R(t, e, n, i, r, s, a, o) {
      var c, h;
      if (Array.isArray(r))
        for (
          c = 0, h = (r = Array.prototype.slice.call(r)).length;
          c < h;
          c += 1
        )
          Array.isArray(r[c]) &&
            O(t, 'nested arrays are not supported inside keys'),
            'object' == typeof r &&
              '[object Object]' === S(r[c]) &&
              (r[c] = '[object Object]');
      if (
        ('object' == typeof r &&
          '[object Object]' === S(r) &&
          (r = '[object Object]'),
        (r = String(r)),
        null === e && (e = {}),
        'tag:yaml.org,2002:merge' === i)
      )
        if (Array.isArray(s))
          for (c = 0, h = s.length; c < h; c += 1) U(t, e, s[c], n);
        else U(t, e, s, n);
      else
        t.json ||
          u.call(n, r) ||
          !u.call(e, r) ||
          ((t.line = a || t.line),
          (t.position = o || t.position),
          O(t, 'duplicated mapping key')),
          (e[r] = s),
          delete n[r];
      return e;
    }
    function Y(t) {
      var e;
      10 === (e = t.input.charCodeAt(t.position))
        ? t.position++
        : 13 === e
        ? (t.position++, 10 === t.input.charCodeAt(t.position) && t.position++)
        : O(t, 'a line break is expected'),
        (t.line += 1),
        (t.lineStart = t.position);
    }
    function j(t, e, n) {
      for (var i = 0, r = t.input.charCodeAt(t.position); 0 !== r; ) {
        for (; w(r); ) r = t.input.charCodeAt(++t.position);
        if (e && 35 === r)
          do {
            r = t.input.charCodeAt(++t.position);
          } while (10 !== r && 13 !== r && 0 !== r);
        if (!E(r)) break;
        for (
          Y(t), r = t.input.charCodeAt(t.position), i++, t.lineIndent = 0;
          32 === r;

        )
          t.lineIndent++, (r = t.input.charCodeAt(++t.position));
      }
      return (
        -1 !== n &&
          0 !== i &&
          t.lineIndent < n &&
          N(t, 'deficient indentation'),
        i
      );
    }
    function X(t) {
      var e,
        n = t.position;
      return !(
        (45 !== (e = t.input.charCodeAt(n)) && 46 !== e) ||
        e !== t.input.charCodeAt(n + 1) ||
        e !== t.input.charCodeAt(n + 2) ||
        ((n += 3), 0 !== (e = t.input.charCodeAt(n)) && !A(e))
      );
    }
    function V(t, e) {
      1 === e
        ? (t.result += ' ')
        : e > 1 && (t.result += i.repeat('\n', e - 1));
    }
    function J(t, e) {
      var n,
        i,
        r = t.tag,
        s = t.anchor,
        a = [],
        o = !1;
      for (
        null !== t.anchor && (t.anchorMap[t.anchor] = a),
          i = t.input.charCodeAt(t.position);
        0 !== i && 45 === i && A(t.input.charCodeAt(t.position + 1));

      )
        if (((o = !0), t.position++, j(t, !0, -1) && t.lineIndent <= e))
          a.push(null), (i = t.input.charCodeAt(t.position));
        else if (
          ((n = t.line),
          W(t, e, l, !1, !0),
          a.push(t.result),
          j(t, !0, -1),
          (i = t.input.charCodeAt(t.position)),
          (t.line === n || t.lineIndent > e) && 0 !== i)
        )
          O(t, 'bad indentation of a sequence entry');
        else if (t.lineIndent < e) break;
      return (
        !!o &&
        ((t.tag = r), (t.anchor = s), (t.kind = 'sequence'), (t.result = a), !0)
      );
    }
    function z(t) {
      var e,
        n,
        i,
        r,
        s = !1,
        a = !1;
      if (33 !== (r = t.input.charCodeAt(t.position))) return !1;
      if (
        (null !== t.tag && O(t, 'duplication of a tag property'),
        60 === (r = t.input.charCodeAt(++t.position))
          ? ((s = !0), (r = t.input.charCodeAt(++t.position)))
          : 33 === r
          ? ((a = !0), (n = '!!'), (r = t.input.charCodeAt(++t.position)))
          : (n = '!'),
        (e = t.position),
        s)
      ) {
        do {
          r = t.input.charCodeAt(++t.position);
        } while (0 !== r && 62 !== r);
        t.position < t.length
          ? ((i = t.input.slice(e, t.position)),
            (r = t.input.charCodeAt(++t.position)))
          : O(t, 'unexpected end of the stream within a verbatim tag');
      } else {
        for (; 0 !== r && !A(r); )
          33 === r &&
            (a
              ? O(t, 'tag suffix cannot contain exclamation marks')
              : ((n = t.input.slice(e - 1, t.position + 1)),
                x.test(n) ||
                  O(t, 'named tag handle cannot contain such characters'),
                (a = !0),
                (e = t.position + 1))),
            (r = t.input.charCodeAt(++t.position));
        (i = t.input.slice(e, t.position)),
          g.test(i) &&
            O(t, 'tag suffix cannot contain flow indicator characters');
      }
      return (
        i &&
          !D.test(i) &&
          O(t, 'tag name cannot contain such characters: ' + i),
        s
          ? (t.tag = i)
          : u.call(t.tagMap, n)
          ? (t.tag = t.tagMap[n] + i)
          : '!' === n
          ? (t.tag = '!' + i)
          : '!!' === n
          ? (t.tag = 'tag:yaml.org,2002:' + i)
          : O(t, 'undeclared tag handle "' + n + '"'),
        !0
      );
    }
    function H(t) {
      var e, n;
      if (38 !== (n = t.input.charCodeAt(t.position))) return !1;
      for (
        null !== t.anchor && O(t, 'duplication of an anchor property'),
          n = t.input.charCodeAt(++t.position),
          e = t.position;
        0 !== n && !A(n) && !C(n);

      )
        n = t.input.charCodeAt(++t.position);
      return (
        t.position === e &&
          O(t, 'name of an anchor node must contain at least one character'),
        (t.anchor = t.input.slice(e, t.position)),
        !0
      );
    }
    function W(t, e, n, r, s) {
      var a,
        o,
        y,
        v,
        g,
        x,
        D,
        S,
        F = 1,
        M = !1,
        P = !1;
      if (
        (null !== t.listener && t.listener('open', t),
        (t.tag = null),
        (t.anchor = null),
        (t.kind = null),
        (t.result = null),
        (a = o = y = p === n || l === n),
        r &&
          j(t, !0, -1) &&
          ((M = !0),
          t.lineIndent > e
            ? (F = 1)
            : t.lineIndent === e
            ? (F = 0)
            : t.lineIndent < e && (F = -1)),
        1 === F)
      )
        for (; z(t) || H(t); )
          j(t, !0, -1)
            ? ((M = !0),
              (y = a),
              t.lineIndent > e
                ? (F = 1)
                : t.lineIndent === e
                ? (F = 0)
                : t.lineIndent < e && (F = -1))
            : (y = !1);
      if (
        (y && (y = M || s),
        (1 !== F && p !== n) ||
          ((D = c === n || h === n ? e : e + 1),
          (S = t.position - t.lineStart),
          1 === F
            ? (y &&
                (J(t, S) ||
                  (function (t, e, n) {
                    var i,
                      r,
                      s,
                      a,
                      o,
                      u = t.tag,
                      c = t.anchor,
                      l = {},
                      f = {},
                      d = null,
                      m = null,
                      y = null,
                      v = !1,
                      g = !1;
                    for (
                      null !== t.anchor && (t.anchorMap[t.anchor] = l),
                        o = t.input.charCodeAt(t.position);
                      0 !== o;

                    ) {
                      if (
                        ((i = t.input.charCodeAt(t.position + 1)),
                        (s = t.line),
                        (a = t.position),
                        (63 !== o && 58 !== o) || !A(i))
                      ) {
                        if (!W(t, n, h, !1, !0)) break;
                        if (t.line === s) {
                          for (o = t.input.charCodeAt(t.position); w(o); )
                            o = t.input.charCodeAt(++t.position);
                          if (58 === o)
                            A((o = t.input.charCodeAt(++t.position))) ||
                              O(
                                t,
                                'a whitespace character is expected after the key-value separator within a block mapping'
                              ),
                              v && (R(t, l, f, d, m, null), (d = m = y = null)),
                              (g = !0),
                              (v = !1),
                              (r = !1),
                              (d = t.tag),
                              (m = t.result);
                          else {
                            if (!g) return (t.tag = u), (t.anchor = c), !0;
                            O(
                              t,
                              'can not read an implicit mapping pair; a colon is missed'
                            );
                          }
                        } else {
                          if (!g) return (t.tag = u), (t.anchor = c), !0;
                          O(
                            t,
                            'can not read a block mapping entry; a multiline key may not be an implicit key'
                          );
                        }
                      } else
                        63 === o
                          ? (v && (R(t, l, f, d, m, null), (d = m = y = null)),
                            (g = !0),
                            (v = !0),
                            (r = !0))
                          : v
                          ? ((v = !1), (r = !0))
                          : O(
                              t,
                              'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line'
                            ),
                          (t.position += 1),
                          (o = i);
                      if (
                        ((t.line === s || t.lineIndent > e) &&
                          (W(t, e, p, !0, r) &&
                            (v ? (m = t.result) : (y = t.result)),
                          v || (R(t, l, f, d, m, y, s, a), (d = m = y = null)),
                          j(t, !0, -1),
                          (o = t.input.charCodeAt(t.position))),
                        t.lineIndent > e && 0 !== o)
                      )
                        O(t, 'bad indentation of a mapping entry');
                      else if (t.lineIndent < e) break;
                    }
                    return (
                      v && R(t, l, f, d, m, null),
                      g &&
                        ((t.tag = u),
                        (t.anchor = c),
                        (t.kind = 'mapping'),
                        (t.result = l)),
                      g
                    );
                  })(t, S, D))) ||
              (function (t, e) {
                var n,
                  i,
                  r,
                  s,
                  a,
                  o,
                  u,
                  h,
                  l,
                  p,
                  f = !0,
                  d = t.tag,
                  m = t.anchor,
                  y = {};
                if (91 === (p = t.input.charCodeAt(t.position)))
                  (r = 93), (o = !1), (i = []);
                else {
                  if (123 !== p) return !1;
                  (r = 125), (o = !0), (i = {});
                }
                for (
                  null !== t.anchor && (t.anchorMap[t.anchor] = i),
                    p = t.input.charCodeAt(++t.position);
                  0 !== p;

                ) {
                  if ((j(t, !0, e), (p = t.input.charCodeAt(t.position)) === r))
                    return (
                      t.position++,
                      (t.tag = d),
                      (t.anchor = m),
                      (t.kind = o ? 'mapping' : 'sequence'),
                      (t.result = i),
                      !0
                    );
                  f || O(t, 'missed comma between flow collection entries'),
                    (l = null),
                    (s = a = !1),
                    63 === p &&
                      A(t.input.charCodeAt(t.position + 1)) &&
                      ((s = a = !0), t.position++, j(t, !0, e)),
                    (n = t.line),
                    W(t, e, c, !1, !0),
                    (h = t.tag),
                    (u = t.result),
                    j(t, !0, e),
                    (p = t.input.charCodeAt(t.position)),
                    (!a && t.line !== n) ||
                      58 !== p ||
                      ((s = !0),
                      (p = t.input.charCodeAt(++t.position)),
                      j(t, !0, e),
                      W(t, e, c, !1, !0),
                      (l = t.result)),
                    o
                      ? R(t, i, y, h, u, l)
                      : s
                      ? i.push(R(t, null, y, h, u, l))
                      : i.push(u),
                    j(t, !0, e),
                    44 === (p = t.input.charCodeAt(t.position))
                      ? ((f = !0), (p = t.input.charCodeAt(++t.position)))
                      : (f = !1);
                }
                O(t, 'unexpected end of the stream within a flow collection');
              })(t, D)
              ? (P = !0)
              : ((o &&
                  (function (t, e) {
                    var n,
                      r,
                      s,
                      a,
                      o,
                      u = f,
                      c = !1,
                      h = !1,
                      l = e,
                      p = 0,
                      y = !1;
                    if (124 === (a = t.input.charCodeAt(t.position))) r = !1;
                    else {
                      if (62 !== a) return !1;
                      r = !0;
                    }
                    for (t.kind = 'scalar', t.result = ''; 0 !== a; )
                      if (
                        43 === (a = t.input.charCodeAt(++t.position)) ||
                        45 === a
                      )
                        f === u
                          ? (u = 43 === a ? m : d)
                          : O(t, 'repeat of a chomping mode identifier');
                      else {
                        if (
                          !((s = 48 <= (o = a) && o <= 57 ? o - 48 : -1) >= 0)
                        )
                          break;
                        0 === s
                          ? O(
                              t,
                              'bad explicit indentation width of a block scalar; it cannot be less than one'
                            )
                          : h
                          ? O(t, 'repeat of an indentation width identifier')
                          : ((l = e + s - 1), (h = !0));
                      }
                    if (w(a)) {
                      do {
                        a = t.input.charCodeAt(++t.position);
                      } while (w(a));
                      if (35 === a)
                        do {
                          a = t.input.charCodeAt(++t.position);
                        } while (!E(a) && 0 !== a);
                    }
                    for (; 0 !== a; ) {
                      for (
                        Y(t),
                          t.lineIndent = 0,
                          a = t.input.charCodeAt(t.position);
                        (!h || t.lineIndent < l) && 32 === a;

                      )
                        t.lineIndent++, (a = t.input.charCodeAt(++t.position));
                      if ((!h && t.lineIndent > l && (l = t.lineIndent), E(a)))
                        p++;
                      else {
                        if (t.lineIndent < l) {
                          u === m
                            ? (t.result += i.repeat('\n', c ? 1 + p : p))
                            : u === f && c && (t.result += '\n');
                          break;
                        }
                        for (
                          r
                            ? w(a)
                              ? ((y = !0),
                                (t.result += i.repeat('\n', c ? 1 + p : p)))
                              : y
                              ? ((y = !1), (t.result += i.repeat('\n', p + 1)))
                              : 0 === p
                              ? c && (t.result += ' ')
                              : (t.result += i.repeat('\n', p))
                            : (t.result += i.repeat('\n', c ? 1 + p : p)),
                            c = !0,
                            h = !0,
                            p = 0,
                            n = t.position;
                          !E(a) && 0 !== a;

                        )
                          a = t.input.charCodeAt(++t.position);
                        L(t, n, t.position, !1);
                      }
                    }
                    return !0;
                  })(t, D)) ||
                (function (t, e) {
                  var n, i, r;
                  if (39 !== (n = t.input.charCodeAt(t.position))) return !1;
                  for (
                    t.kind = 'scalar',
                      t.result = '',
                      t.position++,
                      i = r = t.position;
                    0 !== (n = t.input.charCodeAt(t.position));

                  )
                    if (39 === n) {
                      if (
                        (L(t, i, t.position, !0),
                        39 !== (n = t.input.charCodeAt(++t.position)))
                      )
                        return !0;
                      (i = t.position), t.position++, (r = t.position);
                    } else
                      E(n)
                        ? (L(t, i, r, !0),
                          V(t, j(t, !1, e)),
                          (i = r = t.position))
                        : t.position === t.lineStart && X(t)
                        ? O(
                            t,
                            'unexpected end of the document within a single quoted scalar'
                          )
                        : (t.position++, (r = t.position));
                  O(
                    t,
                    'unexpected end of the stream within a single quoted scalar'
                  );
                })(t, D) ||
                (function (t, e) {
                  var n, i, r, s, a, o, u;
                  if (34 !== (o = t.input.charCodeAt(t.position))) return !1;
                  for (
                    t.kind = 'scalar',
                      t.result = '',
                      t.position++,
                      n = i = t.position;
                    0 !== (o = t.input.charCodeAt(t.position));

                  ) {
                    if (34 === o)
                      return L(t, n, t.position, !0), t.position++, !0;
                    if (92 === o) {
                      if (
                        (L(t, n, t.position, !0),
                        E((o = t.input.charCodeAt(++t.position))))
                      )
                        j(t, !1, e);
                      else if (o < 256 && T[o])
                        (t.result += _[o]), t.position++;
                      else if (
                        (a =
                          120 === (u = o)
                            ? 2
                            : 117 === u
                            ? 4
                            : 85 === u
                            ? 8
                            : 0) > 0
                      ) {
                        for (r = a, s = 0; r > 0; r--)
                          (a = b((o = t.input.charCodeAt(++t.position)))) >= 0
                            ? (s = (s << 4) + a)
                            : O(t, 'expected hexadecimal character');
                        (t.result += k(s)), t.position++;
                      } else O(t, 'unknown escape sequence');
                      n = i = t.position;
                    } else
                      E(o)
                        ? (L(t, n, i, !0),
                          V(t, j(t, !1, e)),
                          (n = i = t.position))
                        : t.position === t.lineStart && X(t)
                        ? O(
                            t,
                            'unexpected end of the document within a double quoted scalar'
                          )
                        : (t.position++, (i = t.position));
                  }
                  O(
                    t,
                    'unexpected end of the stream within a double quoted scalar'
                  );
                })(t, D)
                  ? (P = !0)
                  : !(function (t) {
                      var e, n, i;
                      if (42 !== (i = t.input.charCodeAt(t.position)))
                        return !1;
                      for (
                        i = t.input.charCodeAt(++t.position), e = t.position;
                        0 !== i && !A(i) && !C(i);

                      )
                        i = t.input.charCodeAt(++t.position);
                      return (
                        t.position === e &&
                          O(
                            t,
                            'name of an alias node must contain at least one character'
                          ),
                        (n = t.input.slice(e, t.position)),
                        t.anchorMap.hasOwnProperty(n) ||
                          O(t, 'unidentified alias "' + n + '"'),
                        (t.result = t.anchorMap[n]),
                        j(t, !0, -1),
                        !0
                      );
                    })(t)
                  ? (function (t, e, n) {
                      var i,
                        r,
                        s,
                        a,
                        o,
                        u,
                        c,
                        h,
                        l = t.kind,
                        p = t.result;
                      if (
                        A((h = t.input.charCodeAt(t.position))) ||
                        C(h) ||
                        35 === h ||
                        38 === h ||
                        42 === h ||
                        33 === h ||
                        124 === h ||
                        62 === h ||
                        39 === h ||
                        34 === h ||
                        37 === h ||
                        64 === h ||
                        96 === h
                      )
                        return !1;
                      if (
                        (63 === h || 45 === h) &&
                        (A((i = t.input.charCodeAt(t.position + 1))) ||
                          (n && C(i)))
                      )
                        return !1;
                      for (
                        t.kind = 'scalar',
                          t.result = '',
                          r = s = t.position,
                          a = !1;
                        0 !== h;

                      ) {
                        if (58 === h) {
                          if (
                            A((i = t.input.charCodeAt(t.position + 1))) ||
                            (n && C(i))
                          )
                            break;
                        } else if (35 === h) {
                          if (A(t.input.charCodeAt(t.position - 1))) break;
                        } else {
                          if (
                            (t.position === t.lineStart && X(t)) ||
                            (n && C(h))
                          )
                            break;
                          if (E(h)) {
                            if (
                              ((o = t.line),
                              (u = t.lineStart),
                              (c = t.lineIndent),
                              j(t, !1, -1),
                              t.lineIndent >= e)
                            ) {
                              (a = !0), (h = t.input.charCodeAt(t.position));
                              continue;
                            }
                            (t.position = s),
                              (t.line = o),
                              (t.lineStart = u),
                              (t.lineIndent = c);
                            break;
                          }
                        }
                        a &&
                          (L(t, r, s, !1),
                          V(t, t.line - o),
                          (r = s = t.position),
                          (a = !1)),
                          w(h) || (s = t.position + 1),
                          (h = t.input.charCodeAt(++t.position));
                      }
                      return (
                        L(t, r, s, !1),
                        !!t.result || ((t.kind = l), (t.result = p), !1)
                      );
                    })(t, D, c === n) &&
                    ((P = !0), null === t.tag && (t.tag = '?'))
                  : ((P = !0),
                    (null === t.tag && null === t.anchor) ||
                      O(t, 'alias node should not have any properties')),
                null !== t.anchor && (t.anchorMap[t.anchor] = t.result))
            : 0 === F && (P = y && J(t, S))),
        null !== t.tag && '!' !== t.tag)
      )
        if ('?' === t.tag) {
          for (v = 0, g = t.implicitTypes.length; v < g; v += 1)
            if ((x = t.implicitTypes[v]).resolve(t.result)) {
              (t.result = x.construct(t.result)),
                (t.tag = x.tag),
                null !== t.anchor && (t.anchorMap[t.anchor] = t.result);
              break;
            }
        } else
          u.call(t.typeMap[t.kind || 'fallback'], t.tag)
            ? ((x = t.typeMap[t.kind || 'fallback'][t.tag]),
              null !== t.result &&
                x.kind !== t.kind &&
                O(
                  t,
                  'unacceptable node kind for !<' +
                    t.tag +
                    '> tag; it should be "' +
                    x.kind +
                    '", not "' +
                    t.kind +
                    '"'
                ),
              x.resolve(t.result)
                ? ((t.result = x.construct(t.result)),
                  null !== t.anchor && (t.anchorMap[t.anchor] = t.result))
                : O(
                    t,
                    'cannot resolve a node with !<' + t.tag + '> explicit tag'
                  ))
            : O(t, 'unknown tag !<' + t.tag + '>');
      return (
        null !== t.listener && t.listener('close', t),
        null !== t.tag || null !== t.anchor || P
      );
    }
    function G(t) {
      var e,
        n,
        i,
        r,
        s = t.position,
        a = !1;
      for (
        t.version = null,
          t.checkLineBreaks = t.legacy,
          t.tagMap = {},
          t.anchorMap = {};
        0 !== (r = t.input.charCodeAt(t.position)) &&
        (j(t, !0, -1),
        (r = t.input.charCodeAt(t.position)),
        !(t.lineIndent > 0 || 37 !== r));

      ) {
        for (
          a = !0, r = t.input.charCodeAt(++t.position), e = t.position;
          0 !== r && !A(r);

        )
          r = t.input.charCodeAt(++t.position);
        for (
          i = [],
            (n = t.input.slice(e, t.position)).length < 1 &&
              O(
                t,
                'directive name must not be less than one character in length'
              );
          0 !== r;

        ) {
          for (; w(r); ) r = t.input.charCodeAt(++t.position);
          if (35 === r) {
            do {
              r = t.input.charCodeAt(++t.position);
            } while (0 !== r && !E(r));
            break;
          }
          if (E(r)) break;
          for (e = t.position; 0 !== r && !A(r); )
            r = t.input.charCodeAt(++t.position);
          i.push(t.input.slice(e, t.position));
        }
        0 !== r && Y(t),
          u.call(B, n)
            ? B[n](t, n, i)
            : N(t, 'unknown document directive "' + n + '"');
      }
      j(t, !0, -1),
        0 === t.lineIndent &&
        45 === t.input.charCodeAt(t.position) &&
        45 === t.input.charCodeAt(t.position + 1) &&
        45 === t.input.charCodeAt(t.position + 2)
          ? ((t.position += 3), j(t, !0, -1))
          : a && O(t, 'directives end mark is expected'),
        W(t, t.lineIndent - 1, p, !1, !0),
        j(t, !0, -1),
        t.checkLineBreaks &&
          v.test(t.input.slice(s, t.position)) &&
          N(t, 'non-ASCII line breaks are interpreted as content'),
        t.documents.push(t.result),
        t.position === t.lineStart && X(t)
          ? 46 === t.input.charCodeAt(t.position) &&
            ((t.position += 3), j(t, !0, -1))
          : t.position < t.length - 1 &&
            O(t, 'end of the stream or a document separator is expected');
    }
    function K(t, e) {
      (e = e || {}),
        0 !== (t = String(t)).length &&
          (10 !== t.charCodeAt(t.length - 1) &&
            13 !== t.charCodeAt(t.length - 1) &&
            (t += '\n'),
          65279 === t.charCodeAt(0) && (t = t.slice(1)));
      var n = new P(t, e);
      for (n.input += '\0'; 32 === n.input.charCodeAt(n.position); )
        (n.lineIndent += 1), (n.position += 1);
      for (; n.position < n.length - 1; ) G(n);
      return n.documents;
    }
    function q(t, e, n) {
      var i,
        r,
        s = K(t, n);
      if ('function' != typeof e) return s;
      for (i = 0, r = s.length; i < r; i += 1) e(s[i]);
    }
    function Z(t, e) {
      var n = K(t, e);
      if (0 !== n.length) {
        if (1 === n.length) return n[0];
        throw new r('expected a single document in the stream, but found more');
      }
    }
    (t.exports.loadAll = q),
      (t.exports.load = Z),
      (t.exports.safeLoadAll = function (t, e, n) {
        if ('function' != typeof e) return q(t, i.extend({ schema: a }, n));
        q(t, e, i.extend({ schema: a }, n));
      }),
      (t.exports.safeLoad = function (t, e) {
        return Z(t, i.extend({ schema: a }, e));
      });
  },
  function (t, e, n) {
    'use strict';
    var i = n(5);
    function r(t, e, n, i, r) {
      (this.name = t),
        (this.buffer = e),
        (this.position = n),
        (this.line = i),
        (this.column = r);
    }
    (r.prototype.getSnippet = function (t, e) {
      var n, r, s, a, o;
      if (!this.buffer) return null;
      for (
        t = t || 4, e = e || 75, n = '', r = this.position;
        r > 0 && -1 === '\0\r\n\u2028\u2029'.indexOf(this.buffer.charAt(r - 1));

      )
        if (((r -= 1), this.position - r > e / 2 - 1)) {
          (n = ' ... '), (r += 5);
          break;
        }
      for (
        s = '', a = this.position;
        a < this.buffer.length &&
        -1 === '\0\r\n\u2028\u2029'.indexOf(this.buffer.charAt(a));

      )
        if ((a += 1) - this.position > e / 2 - 1) {
          (s = ' ... '), (a -= 5);
          break;
        }
      return (
        (o = this.buffer.slice(r, a)),
        i.repeat(' ', t) +
          n +
          o +
          s +
          '\n' +
          i.repeat(' ', t + this.position - r + n.length) +
          '^'
      );
    }),
      (r.prototype.toString = function (t) {
        var e,
          n = '';
        return (
          this.name && (n += 'in "' + this.name + '" '),
          (n += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1)),
          t || ((e = this.getSnippet()) && (n += ':\n' + e)),
          n
        );
      }),
      (t.exports = r);
  },
  function (t, e, n) {
    'use strict';
    var i = n(1);
    t.exports = new i('tag:yaml.org,2002:str', {
      kind: 'scalar',
      construct: function (t) {
        return null !== t ? t : '';
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1);
    t.exports = new i('tag:yaml.org,2002:seq', {
      kind: 'sequence',
      construct: function (t) {
        return null !== t ? t : [];
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1);
    t.exports = new i('tag:yaml.org,2002:map', {
      kind: 'mapping',
      construct: function (t) {
        return null !== t ? t : {};
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1);
    t.exports = new i('tag:yaml.org,2002:null', {
      kind: 'scalar',
      resolve: function (t) {
        if (null === t) return !0;
        var e = t.length;
        return (
          (1 === e && '~' === t) ||
          (4 === e && ('null' === t || 'Null' === t || 'NULL' === t))
        );
      },
      construct: function () {
        return null;
      },
      predicate: function (t) {
        return null === t;
      },
      represent: {
        canonical: function () {
          return '~';
        },
        lowercase: function () {
          return 'null';
        },
        uppercase: function () {
          return 'NULL';
        },
        camelcase: function () {
          return 'Null';
        },
      },
      defaultStyle: 'lowercase',
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1);
    t.exports = new i('tag:yaml.org,2002:bool', {
      kind: 'scalar',
      resolve: function (t) {
        if (null === t) return !1;
        var e = t.length;
        return (
          (4 === e && ('true' === t || 'True' === t || 'TRUE' === t)) ||
          (5 === e && ('false' === t || 'False' === t || 'FALSE' === t))
        );
      },
      construct: function (t) {
        return 'true' === t || 'True' === t || 'TRUE' === t;
      },
      predicate: function (t) {
        return '[object Boolean]' === Object.prototype.toString.call(t);
      },
      represent: {
        lowercase: function (t) {
          return t ? 'true' : 'false';
        },
        uppercase: function (t) {
          return t ? 'TRUE' : 'FALSE';
        },
        camelcase: function (t) {
          return t ? 'True' : 'False';
        },
      },
      defaultStyle: 'lowercase',
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(5),
      r = n(1);
    function s(t) {
      return 48 <= t && t <= 55;
    }
    function a(t) {
      return 48 <= t && t <= 57;
    }
    t.exports = new r('tag:yaml.org,2002:int', {
      kind: 'scalar',
      resolve: function (t) {
        if (null === t) return !1;
        var e,
          n,
          i = t.length,
          r = 0,
          o = !1;
        if (!i) return !1;
        if ((('-' !== (e = t[r]) && '+' !== e) || (e = t[++r]), '0' === e)) {
          if (r + 1 === i) return !0;
          if ('b' === (e = t[++r])) {
            for (r++; r < i; r++)
              if ('_' !== (e = t[r])) {
                if ('0' !== e && '1' !== e) return !1;
                o = !0;
              }
            return o && '_' !== e;
          }
          if ('x' === e) {
            for (r++; r < i; r++)
              if ('_' !== (e = t[r])) {
                if (
                  !(
                    (48 <= (n = t.charCodeAt(r)) && n <= 57) ||
                    (65 <= n && n <= 70) ||
                    (97 <= n && n <= 102)
                  )
                )
                  return !1;
                o = !0;
              }
            return o && '_' !== e;
          }
          for (; r < i; r++)
            if ('_' !== (e = t[r])) {
              if (!s(t.charCodeAt(r))) return !1;
              o = !0;
            }
          return o && '_' !== e;
        }
        if ('_' === e) return !1;
        for (; r < i; r++)
          if ('_' !== (e = t[r])) {
            if (':' === e) break;
            if (!a(t.charCodeAt(r))) return !1;
            o = !0;
          }
        return (
          !(!o || '_' === e) &&
          (':' !== e || /^(:[0-5]?[0-9])+$/.test(t.slice(r)))
        );
      },
      construct: function (t) {
        var e,
          n,
          i = t,
          r = 1,
          s = [];
        return (
          -1 !== i.indexOf('_') && (i = i.replace(/_/g, '')),
          ('-' !== (e = i[0]) && '+' !== e) ||
            ('-' === e && (r = -1), (e = (i = i.slice(1))[0])),
          '0' === i
            ? 0
            : '0' === e
            ? 'b' === i[1]
              ? r * parseInt(i.slice(2), 2)
              : 'x' === i[1]
              ? r * parseInt(i, 16)
              : r * parseInt(i, 8)
            : -1 !== i.indexOf(':')
            ? (i.split(':').forEach(function (t) {
                s.unshift(parseInt(t, 10));
              }),
              (i = 0),
              (n = 1),
              s.forEach(function (t) {
                (i += t * n), (n *= 60);
              }),
              r * i)
            : r * parseInt(i, 10)
        );
      },
      predicate: function (t) {
        return (
          '[object Number]' === Object.prototype.toString.call(t) &&
          t % 1 == 0 &&
          !i.isNegativeZero(t)
        );
      },
      represent: {
        binary: function (t) {
          return t >= 0 ? '0b' + t.toString(2) : '-0b' + t.toString(2).slice(1);
        },
        octal: function (t) {
          return t >= 0 ? '0' + t.toString(8) : '-0' + t.toString(8).slice(1);
        },
        decimal: function (t) {
          return t.toString(10);
        },
        hexadecimal: function (t) {
          return t >= 0
            ? '0x' + t.toString(16).toUpperCase()
            : '-0x' + t.toString(16).toUpperCase().slice(1);
        },
      },
      defaultStyle: 'decimal',
      styleAliases: {
        binary: [2, 'bin'],
        octal: [8, 'oct'],
        decimal: [10, 'dec'],
        hexadecimal: [16, 'hex'],
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(5),
      r = n(1),
      s = new RegExp(
        '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$'
      );
    var a = /^[-+]?[0-9]+e/;
    t.exports = new r('tag:yaml.org,2002:float', {
      kind: 'scalar',
      resolve: function (t) {
        return null !== t && !(!s.test(t) || '_' === t[t.length - 1]);
      },
      construct: function (t) {
        var e, n, i, r;
        return (
          (n = '-' === (e = t.replace(/_/g, '').toLowerCase())[0] ? -1 : 1),
          (r = []),
          '+-'.indexOf(e[0]) >= 0 && (e = e.slice(1)),
          '.inf' === e
            ? 1 === n
              ? Number.POSITIVE_INFINITY
              : Number.NEGATIVE_INFINITY
            : '.nan' === e
            ? NaN
            : e.indexOf(':') >= 0
            ? (e.split(':').forEach(function (t) {
                r.unshift(parseFloat(t, 10));
              }),
              (e = 0),
              (i = 1),
              r.forEach(function (t) {
                (e += t * i), (i *= 60);
              }),
              n * e)
            : n * parseFloat(e, 10)
        );
      },
      predicate: function (t) {
        return (
          '[object Number]' === Object.prototype.toString.call(t) &&
          (t % 1 != 0 || i.isNegativeZero(t))
        );
      },
      represent: function (t, e) {
        var n;
        if (isNaN(t))
          switch (e) {
            case 'lowercase':
              return '.nan';
            case 'uppercase':
              return '.NAN';
            case 'camelcase':
              return '.NaN';
          }
        else if (Number.POSITIVE_INFINITY === t)
          switch (e) {
            case 'lowercase':
              return '.inf';
            case 'uppercase':
              return '.INF';
            case 'camelcase':
              return '.Inf';
          }
        else if (Number.NEGATIVE_INFINITY === t)
          switch (e) {
            case 'lowercase':
              return '-.inf';
            case 'uppercase':
              return '-.INF';
            case 'camelcase':
              return '-.Inf';
          }
        else if (i.isNegativeZero(t)) return '-0.0';
        return (n = t.toString(10)), a.test(n) ? n.replace('e', '.e') : n;
      },
      defaultStyle: 'lowercase',
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1),
      r = new RegExp('^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$'),
      s = new RegExp(
        '^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$'
      );
    t.exports = new i('tag:yaml.org,2002:timestamp', {
      kind: 'scalar',
      resolve: function (t) {
        return null !== t && (null !== r.exec(t) || null !== s.exec(t));
      },
      construct: function (t) {
        var e,
          n,
          i,
          a,
          o,
          u,
          c,
          h,
          l = 0,
          p = null;
        if ((null === (e = r.exec(t)) && (e = s.exec(t)), null === e))
          throw new Error('Date resolve error');
        if (((n = +e[1]), (i = +e[2] - 1), (a = +e[3]), !e[4]))
          return new Date(Date.UTC(n, i, a));
        if (((o = +e[4]), (u = +e[5]), (c = +e[6]), e[7])) {
          for (l = e[7].slice(0, 3); l.length < 3; ) l += '0';
          l = +l;
        }
        return (
          e[9] &&
            ((p = 6e4 * (60 * +e[10] + +(e[11] || 0))),
            '-' === e[9] && (p = -p)),
          (h = new Date(Date.UTC(n, i, a, o, u, c, l))),
          p && h.setTime(h.getTime() - p),
          h
        );
      },
      instanceOf: Date,
      represent: function (t) {
        return t.toISOString();
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1);
    t.exports = new i('tag:yaml.org,2002:merge', {
      kind: 'scalar',
      resolve: function (t) {
        return '<<' === t || null === t;
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i;
    try {
      i = n(49).Buffer;
    } catch (t) {}
    var r = n(1),
      s =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';
    t.exports = new r('tag:yaml.org,2002:binary', {
      kind: 'scalar',
      resolve: function (t) {
        if (null === t) return !1;
        var e,
          n,
          i = 0,
          r = t.length,
          a = s;
        for (n = 0; n < r; n++)
          if (!((e = a.indexOf(t.charAt(n))) > 64)) {
            if (e < 0) return !1;
            i += 6;
          }
        return i % 8 == 0;
      },
      construct: function (t) {
        var e,
          n,
          r = t.replace(/[\r\n=]/g, ''),
          a = r.length,
          o = s,
          u = 0,
          c = [];
        for (e = 0; e < a; e++)
          e % 4 == 0 &&
            e &&
            (c.push((u >> 16) & 255), c.push((u >> 8) & 255), c.push(255 & u)),
            (u = (u << 6) | o.indexOf(r.charAt(e)));
        return (
          0 == (n = (a % 4) * 6)
            ? (c.push((u >> 16) & 255), c.push((u >> 8) & 255), c.push(255 & u))
            : 18 === n
            ? (c.push((u >> 10) & 255), c.push((u >> 2) & 255))
            : 12 === n && c.push((u >> 4) & 255),
          i ? (i.from ? i.from(c) : new i(c)) : c
        );
      },
      predicate: function (t) {
        return i && i.isBuffer(t);
      },
      represent: function (t) {
        var e,
          n,
          i = '',
          r = 0,
          a = t.length,
          o = s;
        for (e = 0; e < a; e++)
          e % 3 == 0 &&
            e &&
            ((i += o[(r >> 18) & 63]),
            (i += o[(r >> 12) & 63]),
            (i += o[(r >> 6) & 63]),
            (i += o[63 & r])),
            (r = (r << 8) + t[e]);
        return (
          0 == (n = a % 3)
            ? ((i += o[(r >> 18) & 63]),
              (i += o[(r >> 12) & 63]),
              (i += o[(r >> 6) & 63]),
              (i += o[63 & r]))
            : 2 === n
            ? ((i += o[(r >> 10) & 63]),
              (i += o[(r >> 4) & 63]),
              (i += o[(r << 2) & 63]),
              (i += o[64]))
            : 1 === n &&
              ((i += o[(r >> 2) & 63]),
              (i += o[(r << 4) & 63]),
              (i += o[64]),
              (i += o[64])),
          i
        );
      },
    });
  },
  function (t, e, n) {
    'use strict';
    (function (t) {
      /*!
       * The buffer module from node.js, for the browser.
       *
       * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
       * @license  MIT
       */
      var i = n(51),
        r = n(52),
        s = n(53);
      function a() {
        return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }
      function o(t, e) {
        if (a() < e) throw new RangeError('Invalid typed array length');
        return (
          u.TYPED_ARRAY_SUPPORT
            ? ((t = new Uint8Array(e)).__proto__ = u.prototype)
            : (null === t && (t = new u(e)), (t.length = e)),
          t
        );
      }
      function u(t, e, n) {
        if (!(u.TYPED_ARRAY_SUPPORT || this instanceof u))
          return new u(t, e, n);
        if ('number' == typeof t) {
          if ('string' == typeof e)
            throw new Error(
              'If encoding is specified then the first argument must be a string'
            );
          return l(this, t);
        }
        return c(this, t, e, n);
      }
      function c(t, e, n, i) {
        if ('number' == typeof e)
          throw new TypeError('"value" argument must not be a number');
        return 'undefined' != typeof ArrayBuffer && e instanceof ArrayBuffer
          ? (function (t, e, n, i) {
              if ((e.byteLength, n < 0 || e.byteLength < n))
                throw new RangeError("'offset' is out of bounds");
              if (e.byteLength < n + (i || 0))
                throw new RangeError("'length' is out of bounds");
              e =
                void 0 === n && void 0 === i
                  ? new Uint8Array(e)
                  : void 0 === i
                  ? new Uint8Array(e, n)
                  : new Uint8Array(e, n, i);
              u.TYPED_ARRAY_SUPPORT
                ? ((t = e).__proto__ = u.prototype)
                : (t = p(t, e));
              return t;
            })(t, e, n, i)
          : 'string' == typeof e
          ? (function (t, e, n) {
              ('string' == typeof n && '' !== n) || (n = 'utf8');
              if (!u.isEncoding(n))
                throw new TypeError(
                  '"encoding" must be a valid string encoding'
                );
              var i = 0 | d(e, n),
                r = (t = o(t, i)).write(e, n);
              r !== i && (t = t.slice(0, r));
              return t;
            })(t, e, n)
          : (function (t, e) {
              if (u.isBuffer(e)) {
                var n = 0 | f(e.length);
                return 0 === (t = o(t, n)).length ? t : (e.copy(t, 0, 0, n), t);
              }
              if (e) {
                if (
                  ('undefined' != typeof ArrayBuffer &&
                    e.buffer instanceof ArrayBuffer) ||
                  'length' in e
                )
                  return 'number' != typeof e.length || (i = e.length) != i
                    ? o(t, 0)
                    : p(t, e);
                if ('Buffer' === e.type && s(e.data)) return p(t, e.data);
              }
              var i;
              throw new TypeError(
                'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.'
              );
            })(t, e);
      }
      function h(t) {
        if ('number' != typeof t)
          throw new TypeError('"size" argument must be a number');
        if (t < 0) throw new RangeError('"size" argument must not be negative');
      }
      function l(t, e) {
        if ((h(e), (t = o(t, e < 0 ? 0 : 0 | f(e))), !u.TYPED_ARRAY_SUPPORT))
          for (var n = 0; n < e; ++n) t[n] = 0;
        return t;
      }
      function p(t, e) {
        var n = e.length < 0 ? 0 : 0 | f(e.length);
        t = o(t, n);
        for (var i = 0; i < n; i += 1) t[i] = 255 & e[i];
        return t;
      }
      function f(t) {
        if (t >= a())
          throw new RangeError(
            'Attempt to allocate Buffer larger than maximum size: 0x' +
              a().toString(16) +
              ' bytes'
          );
        return 0 | t;
      }
      function d(t, e) {
        if (u.isBuffer(t)) return t.length;
        if (
          'undefined' != typeof ArrayBuffer &&
          'function' == typeof ArrayBuffer.isView &&
          (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)
        )
          return t.byteLength;
        'string' != typeof t && (t = '' + t);
        var n = t.length;
        if (0 === n) return 0;
        for (var i = !1; ; )
          switch (e) {
            case 'ascii':
            case 'latin1':
            case 'binary':
              return n;
            case 'utf8':
            case 'utf-8':
            case void 0:
              return Y(t).length;
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return 2 * n;
            case 'hex':
              return n >>> 1;
            case 'base64':
              return j(t).length;
            default:
              if (i) return Y(t).length;
              (e = ('' + e).toLowerCase()), (i = !0);
          }
      }
      function m(t, e, n) {
        var i = t[e];
        (t[e] = t[n]), (t[n] = i);
      }
      function y(t, e, n, i, r) {
        if (0 === t.length) return -1;
        if (
          ('string' == typeof n
            ? ((i = n), (n = 0))
            : n > 2147483647
            ? (n = 2147483647)
            : n < -2147483648 && (n = -2147483648),
          (n = +n),
          isNaN(n) && (n = r ? 0 : t.length - 1),
          n < 0 && (n = t.length + n),
          n >= t.length)
        ) {
          if (r) return -1;
          n = t.length - 1;
        } else if (n < 0) {
          if (!r) return -1;
          n = 0;
        }
        if (('string' == typeof e && (e = u.from(e, i)), u.isBuffer(e)))
          return 0 === e.length ? -1 : v(t, e, n, i, r);
        if ('number' == typeof e)
          return (
            (e &= 255),
            u.TYPED_ARRAY_SUPPORT &&
            'function' == typeof Uint8Array.prototype.indexOf
              ? r
                ? Uint8Array.prototype.indexOf.call(t, e, n)
                : Uint8Array.prototype.lastIndexOf.call(t, e, n)
              : v(t, [e], n, i, r)
          );
        throw new TypeError('val must be string, number or Buffer');
      }
      function v(t, e, n, i, r) {
        var s,
          a = 1,
          o = t.length,
          u = e.length;
        if (
          void 0 !== i &&
          ('ucs2' === (i = String(i).toLowerCase()) ||
            'ucs-2' === i ||
            'utf16le' === i ||
            'utf-16le' === i)
        ) {
          if (t.length < 2 || e.length < 2) return -1;
          (a = 2), (o /= 2), (u /= 2), (n /= 2);
        }
        function c(t, e) {
          return 1 === a ? t[e] : t.readUInt16BE(e * a);
        }
        if (r) {
          var h = -1;
          for (s = n; s < o; s++)
            if (c(t, s) === c(e, -1 === h ? 0 : s - h)) {
              if ((-1 === h && (h = s), s - h + 1 === u)) return h * a;
            } else -1 !== h && (s -= s - h), (h = -1);
        } else
          for (n + u > o && (n = o - u), s = n; s >= 0; s--) {
            for (var l = !0, p = 0; p < u; p++)
              if (c(t, s + p) !== c(e, p)) {
                l = !1;
                break;
              }
            if (l) return s;
          }
        return -1;
      }
      function g(t, e, n, i) {
        n = Number(n) || 0;
        var r = t.length - n;
        i ? (i = Number(i)) > r && (i = r) : (i = r);
        var s = e.length;
        if (s % 2 != 0) throw new TypeError('Invalid hex string');
        i > s / 2 && (i = s / 2);
        for (var a = 0; a < i; ++a) {
          var o = parseInt(e.substr(2 * a, 2), 16);
          if (isNaN(o)) return a;
          t[n + a] = o;
        }
        return a;
      }
      function x(t, e, n, i) {
        return X(Y(e, t.length - n), t, n, i);
      }
      function D(t, e, n, i) {
        return X(
          (function (t) {
            for (var e = [], n = 0; n < t.length; ++n)
              e.push(255 & t.charCodeAt(n));
            return e;
          })(e),
          t,
          n,
          i
        );
      }
      function S(t, e, n, i) {
        return D(t, e, n, i);
      }
      function E(t, e, n, i) {
        return X(j(e), t, n, i);
      }
      function w(t, e, n, i) {
        return X(
          (function (t, e) {
            for (
              var n, i, r, s = [], a = 0;
              a < t.length && !((e -= 2) < 0);
              ++a
            )
              (n = t.charCodeAt(a)),
                (i = n >> 8),
                (r = n % 256),
                s.push(r),
                s.push(i);
            return s;
          })(e, t.length - n),
          t,
          n,
          i
        );
      }
      function A(t, e, n) {
        return 0 === e && n === t.length
          ? i.fromByteArray(t)
          : i.fromByteArray(t.slice(e, n));
      }
      function C(t, e, n) {
        n = Math.min(t.length, n);
        for (var i = [], r = e; r < n; ) {
          var s,
            a,
            o,
            u,
            c = t[r],
            h = null,
            l = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
          if (r + l <= n)
            switch (l) {
              case 1:
                c < 128 && (h = c);
                break;
              case 2:
                128 == (192 & (s = t[r + 1])) &&
                  (u = ((31 & c) << 6) | (63 & s)) > 127 &&
                  (h = u);
                break;
              case 3:
                (s = t[r + 1]),
                  (a = t[r + 2]),
                  128 == (192 & s) &&
                    128 == (192 & a) &&
                    (u = ((15 & c) << 12) | ((63 & s) << 6) | (63 & a)) >
                      2047 &&
                    (u < 55296 || u > 57343) &&
                    (h = u);
                break;
              case 4:
                (s = t[r + 1]),
                  (a = t[r + 2]),
                  (o = t[r + 3]),
                  128 == (192 & s) &&
                    128 == (192 & a) &&
                    128 == (192 & o) &&
                    (u =
                      ((15 & c) << 18) |
                      ((63 & s) << 12) |
                      ((63 & a) << 6) |
                      (63 & o)) > 65535 &&
                    u < 1114112 &&
                    (h = u);
            }
          null === h
            ? ((h = 65533), (l = 1))
            : h > 65535 &&
              ((h -= 65536),
              i.push(((h >>> 10) & 1023) | 55296),
              (h = 56320 | (1023 & h))),
            i.push(h),
            (r += l);
        }
        return (function (t) {
          var e = t.length;
          if (e <= b) return String.fromCharCode.apply(String, t);
          var n = '',
            i = 0;
          for (; i < e; )
            n += String.fromCharCode.apply(String, t.slice(i, (i += b)));
          return n;
        })(i);
      }
      (e.Buffer = u),
        (e.SlowBuffer = function (t) {
          +t != t && (t = 0);
          return u.alloc(+t);
        }),
        (e.INSPECT_MAX_BYTES = 50),
        (u.TYPED_ARRAY_SUPPORT =
          void 0 !== t.TYPED_ARRAY_SUPPORT
            ? t.TYPED_ARRAY_SUPPORT
            : (function () {
                try {
                  var t = new Uint8Array(1);
                  return (
                    (t.__proto__ = {
                      __proto__: Uint8Array.prototype,
                      foo: function () {
                        return 42;
                      },
                    }),
                    42 === t.foo() &&
                      'function' == typeof t.subarray &&
                      0 === t.subarray(1, 1).byteLength
                  );
                } catch (t) {
                  return !1;
                }
              })()),
        (e.kMaxLength = a()),
        (u.poolSize = 8192),
        (u._augment = function (t) {
          return (t.__proto__ = u.prototype), t;
        }),
        (u.from = function (t, e, n) {
          return c(null, t, e, n);
        }),
        u.TYPED_ARRAY_SUPPORT &&
          ((u.prototype.__proto__ = Uint8Array.prototype),
          (u.__proto__ = Uint8Array),
          'undefined' != typeof Symbol &&
            Symbol.species &&
            u[Symbol.species] === u &&
            Object.defineProperty(u, Symbol.species, {
              value: null,
              configurable: !0,
            })),
        (u.alloc = function (t, e, n) {
          return (function (t, e, n, i) {
            return (
              h(e),
              e <= 0
                ? o(t, e)
                : void 0 !== n
                ? 'string' == typeof i
                  ? o(t, e).fill(n, i)
                  : o(t, e).fill(n)
                : o(t, e)
            );
          })(null, t, e, n);
        }),
        (u.allocUnsafe = function (t) {
          return l(null, t);
        }),
        (u.allocUnsafeSlow = function (t) {
          return l(null, t);
        }),
        (u.isBuffer = function (t) {
          return !(null == t || !t._isBuffer);
        }),
        (u.compare = function (t, e) {
          if (!u.isBuffer(t) || !u.isBuffer(e))
            throw new TypeError('Arguments must be Buffers');
          if (t === e) return 0;
          for (
            var n = t.length, i = e.length, r = 0, s = Math.min(n, i);
            r < s;
            ++r
          )
            if (t[r] !== e[r]) {
              (n = t[r]), (i = e[r]);
              break;
            }
          return n < i ? -1 : i < n ? 1 : 0;
        }),
        (u.isEncoding = function (t) {
          switch (String(t).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return !0;
            default:
              return !1;
          }
        }),
        (u.concat = function (t, e) {
          if (!s(t))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === t.length) return u.alloc(0);
          var n;
          if (void 0 === e)
            for (e = 0, n = 0; n < t.length; ++n) e += t[n].length;
          var i = u.allocUnsafe(e),
            r = 0;
          for (n = 0; n < t.length; ++n) {
            var a = t[n];
            if (!u.isBuffer(a))
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            a.copy(i, r), (r += a.length);
          }
          return i;
        }),
        (u.byteLength = d),
        (u.prototype._isBuffer = !0),
        (u.prototype.swap16 = function () {
          var t = this.length;
          if (t % 2 != 0)
            throw new RangeError('Buffer size must be a multiple of 16-bits');
          for (var e = 0; e < t; e += 2) m(this, e, e + 1);
          return this;
        }),
        (u.prototype.swap32 = function () {
          var t = this.length;
          if (t % 4 != 0)
            throw new RangeError('Buffer size must be a multiple of 32-bits');
          for (var e = 0; e < t; e += 4)
            m(this, e, e + 3), m(this, e + 1, e + 2);
          return this;
        }),
        (u.prototype.swap64 = function () {
          var t = this.length;
          if (t % 8 != 0)
            throw new RangeError('Buffer size must be a multiple of 64-bits');
          for (var e = 0; e < t; e += 8)
            m(this, e, e + 7),
              m(this, e + 1, e + 6),
              m(this, e + 2, e + 5),
              m(this, e + 3, e + 4);
          return this;
        }),
        (u.prototype.toString = function () {
          var t = 0 | this.length;
          return 0 === t
            ? ''
            : 0 === arguments.length
            ? C(this, 0, t)
            : function (t, e, n) {
                var i = !1;
                if (((void 0 === e || e < 0) && (e = 0), e > this.length))
                  return '';
                if (
                  ((void 0 === n || n > this.length) && (n = this.length),
                  n <= 0)
                )
                  return '';
                if ((n >>>= 0) <= (e >>>= 0)) return '';
                for (t || (t = 'utf8'); ; )
                  switch (t) {
                    case 'hex':
                      return T(this, e, n);
                    case 'utf8':
                    case 'utf-8':
                      return C(this, e, n);
                    case 'ascii':
                      return F(this, e, n);
                    case 'latin1':
                    case 'binary':
                      return k(this, e, n);
                    case 'base64':
                      return A(this, e, n);
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                      return _(this, e, n);
                    default:
                      if (i) throw new TypeError('Unknown encoding: ' + t);
                      (t = (t + '').toLowerCase()), (i = !0);
                  }
              }.apply(this, arguments);
        }),
        (u.prototype.equals = function (t) {
          if (!u.isBuffer(t)) throw new TypeError('Argument must be a Buffer');
          return this === t || 0 === u.compare(this, t);
        }),
        (u.prototype.inspect = function () {
          var t = '',
            n = e.INSPECT_MAX_BYTES;
          return (
            this.length > 0 &&
              ((t = this.toString('hex', 0, n).match(/.{2}/g).join(' ')),
              this.length > n && (t += ' ... ')),
            '<Buffer ' + t + '>'
          );
        }),
        (u.prototype.compare = function (t, e, n, i, r) {
          if (!u.isBuffer(t)) throw new TypeError('Argument must be a Buffer');
          if (
            (void 0 === e && (e = 0),
            void 0 === n && (n = t ? t.length : 0),
            void 0 === i && (i = 0),
            void 0 === r && (r = this.length),
            e < 0 || n > t.length || i < 0 || r > this.length)
          )
            throw new RangeError('out of range index');
          if (i >= r && e >= n) return 0;
          if (i >= r) return -1;
          if (e >= n) return 1;
          if (this === t) return 0;
          for (
            var s = (r >>>= 0) - (i >>>= 0),
              a = (n >>>= 0) - (e >>>= 0),
              o = Math.min(s, a),
              c = this.slice(i, r),
              h = t.slice(e, n),
              l = 0;
            l < o;
            ++l
          )
            if (c[l] !== h[l]) {
              (s = c[l]), (a = h[l]);
              break;
            }
          return s < a ? -1 : a < s ? 1 : 0;
        }),
        (u.prototype.includes = function (t, e, n) {
          return -1 !== this.indexOf(t, e, n);
        }),
        (u.prototype.indexOf = function (t, e, n) {
          return y(this, t, e, n, !0);
        }),
        (u.prototype.lastIndexOf = function (t, e, n) {
          return y(this, t, e, n, !1);
        }),
        (u.prototype.write = function (t, e, n, i) {
          if (void 0 === e) (i = 'utf8'), (n = this.length), (e = 0);
          else if (void 0 === n && 'string' == typeof e)
            (i = e), (n = this.length), (e = 0);
          else {
            if (!isFinite(e))
              throw new Error(
                'Buffer.write(string, encoding, offset[, length]) is no longer supported'
              );
            (e |= 0),
              isFinite(n)
                ? ((n |= 0), void 0 === i && (i = 'utf8'))
                : ((i = n), (n = void 0));
          }
          var r = this.length - e;
          if (
            ((void 0 === n || n > r) && (n = r),
            (t.length > 0 && (n < 0 || e < 0)) || e > this.length)
          )
            throw new RangeError('Attempt to write outside buffer bounds');
          i || (i = 'utf8');
          for (var s = !1; ; )
            switch (i) {
              case 'hex':
                return g(this, t, e, n);
              case 'utf8':
              case 'utf-8':
                return x(this, t, e, n);
              case 'ascii':
                return D(this, t, e, n);
              case 'latin1':
              case 'binary':
                return S(this, t, e, n);
              case 'base64':
                return E(this, t, e, n);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return w(this, t, e, n);
              default:
                if (s) throw new TypeError('Unknown encoding: ' + i);
                (i = ('' + i).toLowerCase()), (s = !0);
            }
        }),
        (u.prototype.toJSON = function () {
          return {
            type: 'Buffer',
            data: Array.prototype.slice.call(this._arr || this, 0),
          };
        });
      var b = 4096;
      function F(t, e, n) {
        var i = '';
        n = Math.min(t.length, n);
        for (var r = e; r < n; ++r) i += String.fromCharCode(127 & t[r]);
        return i;
      }
      function k(t, e, n) {
        var i = '';
        n = Math.min(t.length, n);
        for (var r = e; r < n; ++r) i += String.fromCharCode(t[r]);
        return i;
      }
      function T(t, e, n) {
        var i = t.length;
        (!e || e < 0) && (e = 0), (!n || n < 0 || n > i) && (n = i);
        for (var r = '', s = e; s < n; ++s) r += R(t[s]);
        return r;
      }
      function _(t, e, n) {
        for (var i = t.slice(e, n), r = '', s = 0; s < i.length; s += 2)
          r += String.fromCharCode(i[s] + 256 * i[s + 1]);
        return r;
      }
      function M(t, e, n) {
        if (t % 1 != 0 || t < 0) throw new RangeError('offset is not uint');
        if (t + e > n)
          throw new RangeError('Trying to access beyond buffer length');
      }
      function P(t, e, n, i, r, s) {
        if (!u.isBuffer(t))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (e > r || e < s)
          throw new RangeError('"value" argument is out of bounds');
        if (n + i > t.length) throw new RangeError('Index out of range');
      }
      function I(t, e, n, i) {
        e < 0 && (e = 65535 + e + 1);
        for (var r = 0, s = Math.min(t.length - n, 2); r < s; ++r)
          t[n + r] =
            (e & (255 << (8 * (i ? r : 1 - r)))) >>> (8 * (i ? r : 1 - r));
      }
      function O(t, e, n, i) {
        e < 0 && (e = 4294967295 + e + 1);
        for (var r = 0, s = Math.min(t.length - n, 4); r < s; ++r)
          t[n + r] = (e >>> (8 * (i ? r : 3 - r))) & 255;
      }
      function N(t, e, n, i, r, s) {
        if (n + i > t.length) throw new RangeError('Index out of range');
        if (n < 0) throw new RangeError('Index out of range');
      }
      function B(t, e, n, i, s) {
        return s || N(t, 0, n, 4), r.write(t, e, n, i, 23, 4), n + 4;
      }
      function L(t, e, n, i, s) {
        return s || N(t, 0, n, 8), r.write(t, e, n, i, 52, 8), n + 8;
      }
      (u.prototype.slice = function (t, e) {
        var n,
          i = this.length;
        if (
          ((t = ~~t) < 0 ? (t += i) < 0 && (t = 0) : t > i && (t = i),
          (e = void 0 === e ? i : ~~e) < 0
            ? (e += i) < 0 && (e = 0)
            : e > i && (e = i),
          e < t && (e = t),
          u.TYPED_ARRAY_SUPPORT)
        )
          (n = this.subarray(t, e)).__proto__ = u.prototype;
        else {
          var r = e - t;
          n = new u(r, void 0);
          for (var s = 0; s < r; ++s) n[s] = this[s + t];
        }
        return n;
      }),
        (u.prototype.readUIntLE = function (t, e, n) {
          (t |= 0), (e |= 0), n || M(t, e, this.length);
          for (var i = this[t], r = 1, s = 0; ++s < e && (r *= 256); )
            i += this[t + s] * r;
          return i;
        }),
        (u.prototype.readUIntBE = function (t, e, n) {
          (t |= 0), (e |= 0), n || M(t, e, this.length);
          for (var i = this[t + --e], r = 1; e > 0 && (r *= 256); )
            i += this[t + --e] * r;
          return i;
        }),
        (u.prototype.readUInt8 = function (t, e) {
          return e || M(t, 1, this.length), this[t];
        }),
        (u.prototype.readUInt16LE = function (t, e) {
          return e || M(t, 2, this.length), this[t] | (this[t + 1] << 8);
        }),
        (u.prototype.readUInt16BE = function (t, e) {
          return e || M(t, 2, this.length), (this[t] << 8) | this[t + 1];
        }),
        (u.prototype.readUInt32LE = function (t, e) {
          return (
            e || M(t, 4, this.length),
            (this[t] | (this[t + 1] << 8) | (this[t + 2] << 16)) +
              16777216 * this[t + 3]
          );
        }),
        (u.prototype.readUInt32BE = function (t, e) {
          return (
            e || M(t, 4, this.length),
            16777216 * this[t] +
              ((this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3])
          );
        }),
        (u.prototype.readIntLE = function (t, e, n) {
          (t |= 0), (e |= 0), n || M(t, e, this.length);
          for (var i = this[t], r = 1, s = 0; ++s < e && (r *= 256); )
            i += this[t + s] * r;
          return i >= (r *= 128) && (i -= Math.pow(2, 8 * e)), i;
        }),
        (u.prototype.readIntBE = function (t, e, n) {
          (t |= 0), (e |= 0), n || M(t, e, this.length);
          for (var i = e, r = 1, s = this[t + --i]; i > 0 && (r *= 256); )
            s += this[t + --i] * r;
          return s >= (r *= 128) && (s -= Math.pow(2, 8 * e)), s;
        }),
        (u.prototype.readInt8 = function (t, e) {
          return (
            e || M(t, 1, this.length),
            128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
          );
        }),
        (u.prototype.readInt16LE = function (t, e) {
          e || M(t, 2, this.length);
          var n = this[t] | (this[t + 1] << 8);
          return 32768 & n ? 4294901760 | n : n;
        }),
        (u.prototype.readInt16BE = function (t, e) {
          e || M(t, 2, this.length);
          var n = this[t + 1] | (this[t] << 8);
          return 32768 & n ? 4294901760 | n : n;
        }),
        (u.prototype.readInt32LE = function (t, e) {
          return (
            e || M(t, 4, this.length),
            this[t] |
              (this[t + 1] << 8) |
              (this[t + 2] << 16) |
              (this[t + 3] << 24)
          );
        }),
        (u.prototype.readInt32BE = function (t, e) {
          return (
            e || M(t, 4, this.length),
            (this[t] << 24) |
              (this[t + 1] << 16) |
              (this[t + 2] << 8) |
              this[t + 3]
          );
        }),
        (u.prototype.readFloatLE = function (t, e) {
          return e || M(t, 4, this.length), r.read(this, t, !0, 23, 4);
        }),
        (u.prototype.readFloatBE = function (t, e) {
          return e || M(t, 4, this.length), r.read(this, t, !1, 23, 4);
        }),
        (u.prototype.readDoubleLE = function (t, e) {
          return e || M(t, 8, this.length), r.read(this, t, !0, 52, 8);
        }),
        (u.prototype.readDoubleBE = function (t, e) {
          return e || M(t, 8, this.length), r.read(this, t, !1, 52, 8);
        }),
        (u.prototype.writeUIntLE = function (t, e, n, i) {
          ((t = +t), (e |= 0), (n |= 0), i) ||
            P(this, t, e, n, Math.pow(2, 8 * n) - 1, 0);
          var r = 1,
            s = 0;
          for (this[e] = 255 & t; ++s < n && (r *= 256); )
            this[e + s] = (t / r) & 255;
          return e + n;
        }),
        (u.prototype.writeUIntBE = function (t, e, n, i) {
          ((t = +t), (e |= 0), (n |= 0), i) ||
            P(this, t, e, n, Math.pow(2, 8 * n) - 1, 0);
          var r = n - 1,
            s = 1;
          for (this[e + r] = 255 & t; --r >= 0 && (s *= 256); )
            this[e + r] = (t / s) & 255;
          return e + n;
        }),
        (u.prototype.writeUInt8 = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 1, 255, 0),
            u.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
            (this[e] = 255 & t),
            e + 1
          );
        }),
        (u.prototype.writeUInt16LE = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = 255 & t), (this[e + 1] = t >>> 8))
              : I(this, t, e, !0),
            e + 2
          );
        }),
        (u.prototype.writeUInt16BE = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = t >>> 8), (this[e + 1] = 255 & t))
              : I(this, t, e, !1),
            e + 2
          );
        }),
        (u.prototype.writeUInt32LE = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e + 3] = t >>> 24),
                (this[e + 2] = t >>> 16),
                (this[e + 1] = t >>> 8),
                (this[e] = 255 & t))
              : O(this, t, e, !0),
            e + 4
          );
        }),
        (u.prototype.writeUInt32BE = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = t >>> 24),
                (this[e + 1] = t >>> 16),
                (this[e + 2] = t >>> 8),
                (this[e + 3] = 255 & t))
              : O(this, t, e, !1),
            e + 4
          );
        }),
        (u.prototype.writeIntLE = function (t, e, n, i) {
          if (((t = +t), (e |= 0), !i)) {
            var r = Math.pow(2, 8 * n - 1);
            P(this, t, e, n, r - 1, -r);
          }
          var s = 0,
            a = 1,
            o = 0;
          for (this[e] = 255 & t; ++s < n && (a *= 256); )
            t < 0 && 0 === o && 0 !== this[e + s - 1] && (o = 1),
              (this[e + s] = (((t / a) >> 0) - o) & 255);
          return e + n;
        }),
        (u.prototype.writeIntBE = function (t, e, n, i) {
          if (((t = +t), (e |= 0), !i)) {
            var r = Math.pow(2, 8 * n - 1);
            P(this, t, e, n, r - 1, -r);
          }
          var s = n - 1,
            a = 1,
            o = 0;
          for (this[e + s] = 255 & t; --s >= 0 && (a *= 256); )
            t < 0 && 0 === o && 0 !== this[e + s + 1] && (o = 1),
              (this[e + s] = (((t / a) >> 0) - o) & 255);
          return e + n;
        }),
        (u.prototype.writeInt8 = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 1, 127, -128),
            u.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
            t < 0 && (t = 255 + t + 1),
            (this[e] = 255 & t),
            e + 1
          );
        }),
        (u.prototype.writeInt16LE = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = 255 & t), (this[e + 1] = t >>> 8))
              : I(this, t, e, !0),
            e + 2
          );
        }),
        (u.prototype.writeInt16BE = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = t >>> 8), (this[e + 1] = 255 & t))
              : I(this, t, e, !1),
            e + 2
          );
        }),
        (u.prototype.writeInt32LE = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 4, 2147483647, -2147483648),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = 255 & t),
                (this[e + 1] = t >>> 8),
                (this[e + 2] = t >>> 16),
                (this[e + 3] = t >>> 24))
              : O(this, t, e, !0),
            e + 4
          );
        }),
        (u.prototype.writeInt32BE = function (t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || P(this, t, e, 4, 2147483647, -2147483648),
            t < 0 && (t = 4294967295 + t + 1),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = t >>> 24),
                (this[e + 1] = t >>> 16),
                (this[e + 2] = t >>> 8),
                (this[e + 3] = 255 & t))
              : O(this, t, e, !1),
            e + 4
          );
        }),
        (u.prototype.writeFloatLE = function (t, e, n) {
          return B(this, t, e, !0, n);
        }),
        (u.prototype.writeFloatBE = function (t, e, n) {
          return B(this, t, e, !1, n);
        }),
        (u.prototype.writeDoubleLE = function (t, e, n) {
          return L(this, t, e, !0, n);
        }),
        (u.prototype.writeDoubleBE = function (t, e, n) {
          return L(this, t, e, !1, n);
        }),
        (u.prototype.copy = function (t, e, n, i) {
          if (
            (n || (n = 0),
            i || 0 === i || (i = this.length),
            e >= t.length && (e = t.length),
            e || (e = 0),
            i > 0 && i < n && (i = n),
            i === n)
          )
            return 0;
          if (0 === t.length || 0 === this.length) return 0;
          if (e < 0) throw new RangeError('targetStart out of bounds');
          if (n < 0 || n >= this.length)
            throw new RangeError('sourceStart out of bounds');
          if (i < 0) throw new RangeError('sourceEnd out of bounds');
          i > this.length && (i = this.length),
            t.length - e < i - n && (i = t.length - e + n);
          var r,
            s = i - n;
          if (this === t && n < e && e < i)
            for (r = s - 1; r >= 0; --r) t[r + e] = this[r + n];
          else if (s < 1e3 || !u.TYPED_ARRAY_SUPPORT)
            for (r = 0; r < s; ++r) t[r + e] = this[r + n];
          else Uint8Array.prototype.set.call(t, this.subarray(n, n + s), e);
          return s;
        }),
        (u.prototype.fill = function (t, e, n, i) {
          if ('string' == typeof t) {
            if (
              ('string' == typeof e
                ? ((i = e), (e = 0), (n = this.length))
                : 'string' == typeof n && ((i = n), (n = this.length)),
              1 === t.length)
            ) {
              var r = t.charCodeAt(0);
              r < 256 && (t = r);
            }
            if (void 0 !== i && 'string' != typeof i)
              throw new TypeError('encoding must be a string');
            if ('string' == typeof i && !u.isEncoding(i))
              throw new TypeError('Unknown encoding: ' + i);
          } else 'number' == typeof t && (t &= 255);
          if (e < 0 || this.length < e || this.length < n)
            throw new RangeError('Out of range index');
          if (n <= e) return this;
          var s;
          if (
            ((e >>>= 0),
            (n = void 0 === n ? this.length : n >>> 0),
            t || (t = 0),
            'number' == typeof t)
          )
            for (s = e; s < n; ++s) this[s] = t;
          else {
            var a = u.isBuffer(t) ? t : Y(new u(t, i).toString()),
              o = a.length;
            for (s = 0; s < n - e; ++s) this[s + e] = a[s % o];
          }
          return this;
        });
      var U = /[^+\/0-9A-Za-z-_]/g;
      function R(t) {
        return t < 16 ? '0' + t.toString(16) : t.toString(16);
      }
      function Y(t, e) {
        var n;
        e = e || 1 / 0;
        for (var i = t.length, r = null, s = [], a = 0; a < i; ++a) {
          if ((n = t.charCodeAt(a)) > 55295 && n < 57344) {
            if (!r) {
              if (n > 56319) {
                (e -= 3) > -1 && s.push(239, 191, 189);
                continue;
              }
              if (a + 1 === i) {
                (e -= 3) > -1 && s.push(239, 191, 189);
                continue;
              }
              r = n;
              continue;
            }
            if (n < 56320) {
              (e -= 3) > -1 && s.push(239, 191, 189), (r = n);
              continue;
            }
            n = 65536 + (((r - 55296) << 10) | (n - 56320));
          } else r && (e -= 3) > -1 && s.push(239, 191, 189);
          if (((r = null), n < 128)) {
            if ((e -= 1) < 0) break;
            s.push(n);
          } else if (n < 2048) {
            if ((e -= 2) < 0) break;
            s.push((n >> 6) | 192, (63 & n) | 128);
          } else if (n < 65536) {
            if ((e -= 3) < 0) break;
            s.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
          } else {
            if (!(n < 1114112)) throw new Error('Invalid code point');
            if ((e -= 4) < 0) break;
            s.push(
              (n >> 18) | 240,
              ((n >> 12) & 63) | 128,
              ((n >> 6) & 63) | 128,
              (63 & n) | 128
            );
          }
        }
        return s;
      }
      function j(t) {
        return i.toByteArray(
          (function (t) {
            if (
              (t = (function (t) {
                return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, '');
              })(t).replace(U, '')).length < 2
            )
              return '';
            for (; t.length % 4 != 0; ) t += '=';
            return t;
          })(t)
        );
      }
      function X(t, e, n, i) {
        for (var r = 0; r < i && !(r + n >= e.length || r >= t.length); ++r)
          e[r + n] = t[r];
        return r;
      }
    }.call(this, n(50)));
  },
  function (t, e) {
    var n;
    n = (function () {
      return this;
    })();
    try {
      n = n || new Function('return this')();
    } catch (t) {
      'object' == typeof window && (n = window);
    }
    t.exports = n;
  },
  function (t, e, n) {
    'use strict';
    (e.byteLength = function (t) {
      var e = c(t),
        n = e[0],
        i = e[1];
      return (3 * (n + i)) / 4 - i;
    }),
      (e.toByteArray = function (t) {
        for (
          var e,
            n = c(t),
            i = n[0],
            a = n[1],
            o = new s(
              (function (t, e, n) {
                return (3 * (e + n)) / 4 - n;
              })(0, i, a)
            ),
            u = 0,
            h = a > 0 ? i - 4 : i,
            l = 0;
          l < h;
          l += 4
        )
          (e =
            (r[t.charCodeAt(l)] << 18) |
            (r[t.charCodeAt(l + 1)] << 12) |
            (r[t.charCodeAt(l + 2)] << 6) |
            r[t.charCodeAt(l + 3)]),
            (o[u++] = (e >> 16) & 255),
            (o[u++] = (e >> 8) & 255),
            (o[u++] = 255 & e);
        2 === a &&
          ((e = (r[t.charCodeAt(l)] << 2) | (r[t.charCodeAt(l + 1)] >> 4)),
          (o[u++] = 255 & e));
        1 === a &&
          ((e =
            (r[t.charCodeAt(l)] << 10) |
            (r[t.charCodeAt(l + 1)] << 4) |
            (r[t.charCodeAt(l + 2)] >> 2)),
          (o[u++] = (e >> 8) & 255),
          (o[u++] = 255 & e));
        return o;
      }),
      (e.fromByteArray = function (t) {
        for (
          var e, n = t.length, r = n % 3, s = [], a = 0, o = n - r;
          a < o;
          a += 16383
        )
          s.push(h(t, a, a + 16383 > o ? o : a + 16383));
        1 === r
          ? ((e = t[n - 1]), s.push(i[e >> 2] + i[(e << 4) & 63] + '=='))
          : 2 === r &&
            ((e = (t[n - 2] << 8) + t[n - 1]),
            s.push(i[e >> 10] + i[(e >> 4) & 63] + i[(e << 2) & 63] + '='));
        return s.join('');
      });
    for (
      var i = [],
        r = [],
        s = 'undefined' != typeof Uint8Array ? Uint8Array : Array,
        a = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
        o = 0,
        u = a.length;
      o < u;
      ++o
    )
      (i[o] = a[o]), (r[a.charCodeAt(o)] = o);
    function c(t) {
      var e = t.length;
      if (e % 4 > 0)
        throw new Error('Invalid string. Length must be a multiple of 4');
      var n = t.indexOf('=');
      return -1 === n && (n = e), [n, n === e ? 0 : 4 - (n % 4)];
    }
    function h(t, e, n) {
      for (var r, s, a = [], o = e; o < n; o += 3)
        (r =
          ((t[o] << 16) & 16711680) +
          ((t[o + 1] << 8) & 65280) +
          (255 & t[o + 2])),
          a.push(
            i[((s = r) >> 18) & 63] +
              i[(s >> 12) & 63] +
              i[(s >> 6) & 63] +
              i[63 & s]
          );
      return a.join('');
    }
    (r['-'.charCodeAt(0)] = 62), (r['_'.charCodeAt(0)] = 63);
  },
  function (t, e) {
    (e.read = function (t, e, n, i, r) {
      var s,
        a,
        o = 8 * r - i - 1,
        u = (1 << o) - 1,
        c = u >> 1,
        h = -7,
        l = n ? r - 1 : 0,
        p = n ? -1 : 1,
        f = t[e + l];
      for (
        l += p, s = f & ((1 << -h) - 1), f >>= -h, h += o;
        h > 0;
        s = 256 * s + t[e + l], l += p, h -= 8
      );
      for (
        a = s & ((1 << -h) - 1), s >>= -h, h += i;
        h > 0;
        a = 256 * a + t[e + l], l += p, h -= 8
      );
      if (0 === s) s = 1 - c;
      else {
        if (s === u) return a ? NaN : (1 / 0) * (f ? -1 : 1);
        (a += Math.pow(2, i)), (s -= c);
      }
      return (f ? -1 : 1) * a * Math.pow(2, s - i);
    }),
      (e.write = function (t, e, n, i, r, s) {
        var a,
          o,
          u,
          c = 8 * s - r - 1,
          h = (1 << c) - 1,
          l = h >> 1,
          p = 23 === r ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          f = i ? 0 : s - 1,
          d = i ? 1 : -1,
          m = e < 0 || (0 === e && 1 / e < 0) ? 1 : 0;
        for (
          e = Math.abs(e),
            isNaN(e) || e === 1 / 0
              ? ((o = isNaN(e) ? 1 : 0), (a = h))
              : ((a = Math.floor(Math.log(e) / Math.LN2)),
                e * (u = Math.pow(2, -a)) < 1 && (a--, (u *= 2)),
                (e += a + l >= 1 ? p / u : p * Math.pow(2, 1 - l)) * u >= 2 &&
                  (a++, (u /= 2)),
                a + l >= h
                  ? ((o = 0), (a = h))
                  : a + l >= 1
                  ? ((o = (e * u - 1) * Math.pow(2, r)), (a += l))
                  : ((o = e * Math.pow(2, l - 1) * Math.pow(2, r)), (a = 0)));
          r >= 8;
          t[n + f] = 255 & o, f += d, o /= 256, r -= 8
        );
        for (
          a = (a << r) | o, c += r;
          c > 0;
          t[n + f] = 255 & a, f += d, a /= 256, c -= 8
        );
        t[n + f - d] |= 128 * m;
      });
  },
  function (t, e) {
    var n = {}.toString;
    t.exports =
      Array.isArray ||
      function (t) {
        return '[object Array]' == n.call(t);
      };
  },
  function (t, e, n) {
    'use strict';
    var i = n(1),
      r = Object.prototype.hasOwnProperty,
      s = Object.prototype.toString;
    t.exports = new i('tag:yaml.org,2002:omap', {
      kind: 'sequence',
      resolve: function (t) {
        if (null === t) return !0;
        var e,
          n,
          i,
          a,
          o,
          u = [],
          c = t;
        for (e = 0, n = c.length; e < n; e += 1) {
          if (((i = c[e]), (o = !1), '[object Object]' !== s.call(i)))
            return !1;
          for (a in i)
            if (r.call(i, a)) {
              if (o) return !1;
              o = !0;
            }
          if (!o) return !1;
          if (-1 !== u.indexOf(a)) return !1;
          u.push(a);
        }
        return !0;
      },
      construct: function (t) {
        return null !== t ? t : [];
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1),
      r = Object.prototype.toString;
    t.exports = new i('tag:yaml.org,2002:pairs', {
      kind: 'sequence',
      resolve: function (t) {
        if (null === t) return !0;
        var e,
          n,
          i,
          s,
          a,
          o = t;
        for (a = new Array(o.length), e = 0, n = o.length; e < n; e += 1) {
          if (((i = o[e]), '[object Object]' !== r.call(i))) return !1;
          if (1 !== (s = Object.keys(i)).length) return !1;
          a[e] = [s[0], i[s[0]]];
        }
        return !0;
      },
      construct: function (t) {
        if (null === t) return [];
        var e,
          n,
          i,
          r,
          s,
          a = t;
        for (s = new Array(a.length), e = 0, n = a.length; e < n; e += 1)
          (i = a[e]), (r = Object.keys(i)), (s[e] = [r[0], i[r[0]]]);
        return s;
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1),
      r = Object.prototype.hasOwnProperty;
    t.exports = new i('tag:yaml.org,2002:set', {
      kind: 'mapping',
      resolve: function (t) {
        if (null === t) return !0;
        var e,
          n = t;
        for (e in n) if (r.call(n, e) && null !== n[e]) return !1;
        return !0;
      },
      construct: function (t) {
        return null !== t ? t : {};
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1);
    t.exports = new i('tag:yaml.org,2002:js/undefined', {
      kind: 'scalar',
      resolve: function () {
        return !0;
      },
      construct: function () {},
      predicate: function (t) {
        return void 0 === t;
      },
      represent: function () {
        return '';
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i = n(1);
    t.exports = new i('tag:yaml.org,2002:js/regexp', {
      kind: 'scalar',
      resolve: function (t) {
        if (null === t) return !1;
        if (0 === t.length) return !1;
        var e = t,
          n = /\/([gim]*)$/.exec(t),
          i = '';
        if ('/' === e[0]) {
          if ((n && (i = n[1]), i.length > 3)) return !1;
          if ('/' !== e[e.length - i.length - 1]) return !1;
        }
        return !0;
      },
      construct: function (t) {
        var e = t,
          n = /\/([gim]*)$/.exec(t),
          i = '';
        return (
          '/' === e[0] &&
            (n && (i = n[1]), (e = e.slice(1, e.length - i.length - 1))),
          new RegExp(e, i)
        );
      },
      predicate: function (t) {
        return '[object RegExp]' === Object.prototype.toString.call(t);
      },
      represent: function (t) {
        var e = '/' + t.source + '/';
        return (
          t.global && (e += 'g'),
          t.multiline && (e += 'm'),
          t.ignoreCase && (e += 'i'),
          e
        );
      },
    });
  },
  function (t, e, n) {
    'use strict';
    var i;
    try {
      i = n(60);
    } catch (t) {
      'undefined' != typeof window && (i = window.esprima);
    }
    var r = n(1);
    t.exports = new r('tag:yaml.org,2002:js/function', {
      kind: 'scalar',
      resolve: function (t) {
        if (null === t) return !1;
        try {
          var e = '(' + t + ')',
            n = i.parse(e, { range: !0 });
          return (
            'Program' === n.type &&
            1 === n.body.length &&
            'ExpressionStatement' === n.body[0].type &&
            ('ArrowFunctionExpression' === n.body[0].expression.type ||
              'FunctionExpression' === n.body[0].expression.type)
          );
        } catch (t) {
          return !1;
        }
      },
      construct: function (t) {
        var e,
          n = '(' + t + ')',
          r = i.parse(n, { range: !0 }),
          s = [];
        if (
          'Program' !== r.type ||
          1 !== r.body.length ||
          'ExpressionStatement' !== r.body[0].type ||
          ('ArrowFunctionExpression' !== r.body[0].expression.type &&
            'FunctionExpression' !== r.body[0].expression.type)
        )
          throw new Error('Failed to resolve function');
        return (
          r.body[0].expression.params.forEach(function (t) {
            s.push(t.name);
          }),
          (e = r.body[0].expression.body.range),
          'BlockStatement' === r.body[0].expression.body.type
            ? new Function(s, n.slice(e[0] + 1, e[1] - 1))
            : new Function(s, 'return ' + n.slice(e[0], e[1]))
        );
      },
      predicate: function (t) {
        return '[object Function]' === Object.prototype.toString.call(t);
      },
      represent: function (t) {
        return t.toString();
      },
    });
  },
  function (t, e, n) {
    var i;
    (i = function () {
      return (function (t) {
        var e = {};
        function n(i) {
          if (e[i]) return e[i].exports;
          var r = (e[i] = { exports: {}, id: i, loaded: !1 });
          return (
            t[i].call(r.exports, r, r.exports, n), (r.loaded = !0), r.exports
          );
        }
        return (n.m = t), (n.c = e), (n.p = ''), n(0);
      })([
        function (t, e, n) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 });
          var i = n(1),
            r = n(3),
            s = n(8),
            a = n(15);
          function o(t, e, n) {
            var a = null,
              o = function (t, e) {
                n && n(t, e), a && a.visit(t, e);
              },
              u = 'function' == typeof n ? o : null,
              c = !1;
            if (e) {
              c = 'boolean' == typeof e.comment && e.comment;
              var h = 'boolean' == typeof e.attachComment && e.attachComment;
              (c || h) &&
                (((a = new i.CommentHandler()).attach = h),
                (e.comment = !0),
                (u = o));
            }
            var l,
              p = !1;
            e &&
              'string' == typeof e.sourceType &&
              (p = 'module' === e.sourceType),
              (l =
                e && 'boolean' == typeof e.jsx && e.jsx
                  ? new r.JSXParser(t, e, u)
                  : new s.Parser(t, e, u));
            var f = p ? l.parseModule() : l.parseScript();
            return (
              c && a && (f.comments = a.comments),
              l.config.tokens && (f.tokens = l.tokens),
              l.config.tolerant && (f.errors = l.errorHandler.errors),
              f
            );
          }
          (e.parse = o),
            (e.parseModule = function (t, e, n) {
              var i = e || {};
              return (i.sourceType = 'module'), o(t, i, n);
            }),
            (e.parseScript = function (t, e, n) {
              var i = e || {};
              return (i.sourceType = 'script'), o(t, i, n);
            }),
            (e.tokenize = function (t, e, n) {
              var i,
                r = new a.Tokenizer(t, e);
              i = [];
              try {
                for (;;) {
                  var s = r.getNextToken();
                  if (!s) break;
                  n && (s = n(s)), i.push(s);
                }
              } catch (t) {
                r.errorHandler.tolerate(t);
              }
              return r.errorHandler.tolerant && (i.errors = r.errors()), i;
            });
          var u = n(2);
          (e.Syntax = u.Syntax), (e.version = '4.0.1');
        },
        function (t, e, n) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 });
          var i = n(2),
            r = (function () {
              function t() {
                (this.attach = !1),
                  (this.comments = []),
                  (this.stack = []),
                  (this.leading = []),
                  (this.trailing = []);
              }
              return (
                (t.prototype.insertInnerComments = function (t, e) {
                  if (
                    t.type === i.Syntax.BlockStatement &&
                    0 === t.body.length
                  ) {
                    for (var n = [], r = this.leading.length - 1; r >= 0; --r) {
                      var s = this.leading[r];
                      e.end.offset >= s.start &&
                        (n.unshift(s.comment),
                        this.leading.splice(r, 1),
                        this.trailing.splice(r, 1));
                    }
                    n.length && (t.innerComments = n);
                  }
                }),
                (t.prototype.findTrailingComments = function (t) {
                  var e = [];
                  if (this.trailing.length > 0) {
                    for (var n = this.trailing.length - 1; n >= 0; --n) {
                      var i = this.trailing[n];
                      i.start >= t.end.offset && e.unshift(i.comment);
                    }
                    return (this.trailing.length = 0), e;
                  }
                  var r = this.stack[this.stack.length - 1];
                  if (r && r.node.trailingComments) {
                    var s = r.node.trailingComments[0];
                    s &&
                      s.range[0] >= t.end.offset &&
                      ((e = r.node.trailingComments),
                      delete r.node.trailingComments);
                  }
                  return e;
                }),
                (t.prototype.findLeadingComments = function (t) {
                  for (var e, n = []; this.stack.length > 0; ) {
                    if (
                      !(
                        (s = this.stack[this.stack.length - 1]) &&
                        s.start >= t.start.offset
                      )
                    )
                      break;
                    (e = s.node), this.stack.pop();
                  }
                  if (e) {
                    for (
                      var i =
                        (e.leadingComments ? e.leadingComments.length : 0) - 1;
                      i >= 0;
                      --i
                    ) {
                      var r = e.leadingComments[i];
                      r.range[1] <= t.start.offset &&
                        (n.unshift(r), e.leadingComments.splice(i, 1));
                    }
                    return (
                      e.leadingComments &&
                        0 === e.leadingComments.length &&
                        delete e.leadingComments,
                      n
                    );
                  }
                  for (i = this.leading.length - 1; i >= 0; --i) {
                    var s;
                    (s = this.leading[i]).start <= t.start.offset &&
                      (n.unshift(s.comment), this.leading.splice(i, 1));
                  }
                  return n;
                }),
                (t.prototype.visitNode = function (t, e) {
                  if (!(t.type === i.Syntax.Program && t.body.length > 0)) {
                    this.insertInnerComments(t, e);
                    var n = this.findTrailingComments(e),
                      r = this.findLeadingComments(e);
                    r.length > 0 && (t.leadingComments = r),
                      n.length > 0 && (t.trailingComments = n),
                      this.stack.push({ node: t, start: e.start.offset });
                  }
                }),
                (t.prototype.visitComment = function (t, e) {
                  var n = 'L' === t.type[0] ? 'Line' : 'Block',
                    i = { type: n, value: t.value };
                  if (
                    (t.range && (i.range = t.range),
                    t.loc && (i.loc = t.loc),
                    this.comments.push(i),
                    this.attach)
                  ) {
                    var r = {
                      comment: {
                        type: n,
                        value: t.value,
                        range: [e.start.offset, e.end.offset],
                      },
                      start: e.start.offset,
                    };
                    t.loc && (r.comment.loc = t.loc),
                      (t.type = n),
                      this.leading.push(r),
                      this.trailing.push(r);
                  }
                }),
                (t.prototype.visit = function (t, e) {
                  'LineComment' === t.type
                    ? this.visitComment(t, e)
                    : 'BlockComment' === t.type
                    ? this.visitComment(t, e)
                    : this.attach && this.visitNode(t, e);
                }),
                t
              );
            })();
          e.CommentHandler = r;
        },
        function (t, e) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.Syntax = {
              AssignmentExpression: 'AssignmentExpression',
              AssignmentPattern: 'AssignmentPattern',
              ArrayExpression: 'ArrayExpression',
              ArrayPattern: 'ArrayPattern',
              ArrowFunctionExpression: 'ArrowFunctionExpression',
              AwaitExpression: 'AwaitExpression',
              BlockStatement: 'BlockStatement',
              BinaryExpression: 'BinaryExpression',
              BreakStatement: 'BreakStatement',
              CallExpression: 'CallExpression',
              CatchClause: 'CatchClause',
              ClassBody: 'ClassBody',
              ClassDeclaration: 'ClassDeclaration',
              ClassExpression: 'ClassExpression',
              ConditionalExpression: 'ConditionalExpression',
              ContinueStatement: 'ContinueStatement',
              DoWhileStatement: 'DoWhileStatement',
              DebuggerStatement: 'DebuggerStatement',
              EmptyStatement: 'EmptyStatement',
              ExportAllDeclaration: 'ExportAllDeclaration',
              ExportDefaultDeclaration: 'ExportDefaultDeclaration',
              ExportNamedDeclaration: 'ExportNamedDeclaration',
              ExportSpecifier: 'ExportSpecifier',
              ExpressionStatement: 'ExpressionStatement',
              ForStatement: 'ForStatement',
              ForOfStatement: 'ForOfStatement',
              ForInStatement: 'ForInStatement',
              FunctionDeclaration: 'FunctionDeclaration',
              FunctionExpression: 'FunctionExpression',
              Identifier: 'Identifier',
              IfStatement: 'IfStatement',
              ImportDeclaration: 'ImportDeclaration',
              ImportDefaultSpecifier: 'ImportDefaultSpecifier',
              ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
              ImportSpecifier: 'ImportSpecifier',
              Literal: 'Literal',
              LabeledStatement: 'LabeledStatement',
              LogicalExpression: 'LogicalExpression',
              MemberExpression: 'MemberExpression',
              MetaProperty: 'MetaProperty',
              MethodDefinition: 'MethodDefinition',
              NewExpression: 'NewExpression',
              ObjectExpression: 'ObjectExpression',
              ObjectPattern: 'ObjectPattern',
              Program: 'Program',
              Property: 'Property',
              RestElement: 'RestElement',
              ReturnStatement: 'ReturnStatement',
              SequenceExpression: 'SequenceExpression',
              SpreadElement: 'SpreadElement',
              Super: 'Super',
              SwitchCase: 'SwitchCase',
              SwitchStatement: 'SwitchStatement',
              TaggedTemplateExpression: 'TaggedTemplateExpression',
              TemplateElement: 'TemplateElement',
              TemplateLiteral: 'TemplateLiteral',
              ThisExpression: 'ThisExpression',
              ThrowStatement: 'ThrowStatement',
              TryStatement: 'TryStatement',
              UnaryExpression: 'UnaryExpression',
              UpdateExpression: 'UpdateExpression',
              VariableDeclaration: 'VariableDeclaration',
              VariableDeclarator: 'VariableDeclarator',
              WhileStatement: 'WhileStatement',
              WithStatement: 'WithStatement',
              YieldExpression: 'YieldExpression',
            });
        },
        function (t, e, n) {
          'use strict';
          var i,
            r =
              (this && this.__extends) ||
              ((i =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (t, e) {
                    t.__proto__ = e;
                  }) ||
                function (t, e) {
                  for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
                }),
              function (t, e) {
                function n() {
                  this.constructor = t;
                }
                i(t, e),
                  (t.prototype =
                    null === e
                      ? Object.create(e)
                      : ((n.prototype = e.prototype), new n()));
              });
          Object.defineProperty(e, '__esModule', { value: !0 });
          var s = n(4),
            a = n(5),
            o = n(6),
            u = n(7),
            c = n(8),
            h = n(13),
            l = n(14);
          function p(t) {
            var e;
            switch (t.type) {
              case o.JSXSyntax.JSXIdentifier:
                e = t.name;
                break;
              case o.JSXSyntax.JSXNamespacedName:
                var n = t;
                e = p(n.namespace) + ':' + p(n.name);
                break;
              case o.JSXSyntax.JSXMemberExpression:
                var i = t;
                e = p(i.object) + '.' + p(i.property);
            }
            return e;
          }
          (h.TokenName[100] = 'JSXIdentifier'), (h.TokenName[101] = 'JSXText');
          var f = (function (t) {
            function e(e, n, i) {
              return t.call(this, e, n, i) || this;
            }
            return (
              r(e, t),
              (e.prototype.parsePrimaryExpression = function () {
                return this.match('<')
                  ? this.parseJSXRoot()
                  : t.prototype.parsePrimaryExpression.call(this);
              }),
              (e.prototype.startJSX = function () {
                (this.scanner.index = this.startMarker.index),
                  (this.scanner.lineNumber = this.startMarker.line),
                  (this.scanner.lineStart =
                    this.startMarker.index - this.startMarker.column);
              }),
              (e.prototype.finishJSX = function () {
                this.nextToken();
              }),
              (e.prototype.reenterJSX = function () {
                this.startJSX(),
                  this.expectJSX('}'),
                  this.config.tokens && this.tokens.pop();
              }),
              (e.prototype.createJSXNode = function () {
                return (
                  this.collectComments(),
                  {
                    index: this.scanner.index,
                    line: this.scanner.lineNumber,
                    column: this.scanner.index - this.scanner.lineStart,
                  }
                );
              }),
              (e.prototype.createJSXChildNode = function () {
                return {
                  index: this.scanner.index,
                  line: this.scanner.lineNumber,
                  column: this.scanner.index - this.scanner.lineStart,
                };
              }),
              (e.prototype.scanXHTMLEntity = function (t) {
                for (
                  var e = '&', n = !0, i = !1, r = !1, a = !1;
                  !this.scanner.eof() && n && !i;

                ) {
                  var o = this.scanner.source[this.scanner.index];
                  if (o === t) break;
                  if (((i = ';' === o), (e += o), ++this.scanner.index, !i))
                    switch (e.length) {
                      case 2:
                        r = '#' === o;
                        break;
                      case 3:
                        r &&
                          ((n =
                            (a = 'x' === o) ||
                            s.Character.isDecimalDigit(o.charCodeAt(0))),
                          (r = r && !a));
                        break;
                      default:
                        n =
                          (n =
                            n &&
                            !(
                              r && !s.Character.isDecimalDigit(o.charCodeAt(0))
                            )) &&
                          !(a && !s.Character.isHexDigit(o.charCodeAt(0)));
                    }
                }
                if (n && i && e.length > 2) {
                  var u = e.substr(1, e.length - 2);
                  r && u.length > 1
                    ? (e = String.fromCharCode(parseInt(u.substr(1), 10)))
                    : a && u.length > 2
                    ? (e = String.fromCharCode(parseInt('0' + u.substr(1), 16)))
                    : r || a || !l.XHTMLEntities[u] || (e = l.XHTMLEntities[u]);
                }
                return e;
              }),
              (e.prototype.lexJSX = function () {
                var t = this.scanner.source.charCodeAt(this.scanner.index);
                if (
                  60 === t ||
                  62 === t ||
                  47 === t ||
                  58 === t ||
                  61 === t ||
                  123 === t ||
                  125 === t
                )
                  return {
                    type: 7,
                    value: (o = this.scanner.source[this.scanner.index++]),
                    lineNumber: this.scanner.lineNumber,
                    lineStart: this.scanner.lineStart,
                    start: this.scanner.index - 1,
                    end: this.scanner.index,
                  };
                if (34 === t || 39 === t) {
                  for (
                    var e = this.scanner.index,
                      n = this.scanner.source[this.scanner.index++],
                      i = '';
                    !this.scanner.eof();

                  ) {
                    if ((u = this.scanner.source[this.scanner.index++]) === n)
                      break;
                    i += '&' === u ? this.scanXHTMLEntity(n) : u;
                  }
                  return {
                    type: 8,
                    value: i,
                    lineNumber: this.scanner.lineNumber,
                    lineStart: this.scanner.lineStart,
                    start: e,
                    end: this.scanner.index,
                  };
                }
                if (46 === t) {
                  var r = this.scanner.source.charCodeAt(
                      this.scanner.index + 1
                    ),
                    a = this.scanner.source.charCodeAt(this.scanner.index + 2),
                    o = 46 === r && 46 === a ? '...' : '.';
                  e = this.scanner.index;
                  return (
                    (this.scanner.index += o.length),
                    {
                      type: 7,
                      value: o,
                      lineNumber: this.scanner.lineNumber,
                      lineStart: this.scanner.lineStart,
                      start: e,
                      end: this.scanner.index,
                    }
                  );
                }
                if (96 === t)
                  return {
                    type: 10,
                    value: '',
                    lineNumber: this.scanner.lineNumber,
                    lineStart: this.scanner.lineStart,
                    start: this.scanner.index,
                    end: this.scanner.index,
                  };
                if (s.Character.isIdentifierStart(t) && 92 !== t) {
                  e = this.scanner.index;
                  for (++this.scanner.index; !this.scanner.eof(); ) {
                    var u = this.scanner.source.charCodeAt(this.scanner.index);
                    if (s.Character.isIdentifierPart(u) && 92 !== u)
                      ++this.scanner.index;
                    else {
                      if (45 !== u) break;
                      ++this.scanner.index;
                    }
                  }
                  return {
                    type: 100,
                    value: this.scanner.source.slice(e, this.scanner.index),
                    lineNumber: this.scanner.lineNumber,
                    lineStart: this.scanner.lineStart,
                    start: e,
                    end: this.scanner.index,
                  };
                }
                return this.scanner.lex();
              }),
              (e.prototype.nextJSXToken = function () {
                this.collectComments(),
                  (this.startMarker.index = this.scanner.index),
                  (this.startMarker.line = this.scanner.lineNumber),
                  (this.startMarker.column =
                    this.scanner.index - this.scanner.lineStart);
                var t = this.lexJSX();
                return (
                  (this.lastMarker.index = this.scanner.index),
                  (this.lastMarker.line = this.scanner.lineNumber),
                  (this.lastMarker.column =
                    this.scanner.index - this.scanner.lineStart),
                  this.config.tokens && this.tokens.push(this.convertToken(t)),
                  t
                );
              }),
              (e.prototype.nextJSXText = function () {
                (this.startMarker.index = this.scanner.index),
                  (this.startMarker.line = this.scanner.lineNumber),
                  (this.startMarker.column =
                    this.scanner.index - this.scanner.lineStart);
                for (
                  var t = this.scanner.index, e = '';
                  !this.scanner.eof();

                ) {
                  var n = this.scanner.source[this.scanner.index];
                  if ('{' === n || '<' === n) break;
                  ++this.scanner.index,
                    (e += n),
                    s.Character.isLineTerminator(n.charCodeAt(0)) &&
                      (++this.scanner.lineNumber,
                      '\r' === n &&
                        '\n' === this.scanner.source[this.scanner.index] &&
                        ++this.scanner.index,
                      (this.scanner.lineStart = this.scanner.index));
                }
                (this.lastMarker.index = this.scanner.index),
                  (this.lastMarker.line = this.scanner.lineNumber),
                  (this.lastMarker.column =
                    this.scanner.index - this.scanner.lineStart);
                var i = {
                  type: 101,
                  value: e,
                  lineNumber: this.scanner.lineNumber,
                  lineStart: this.scanner.lineStart,
                  start: t,
                  end: this.scanner.index,
                };
                return (
                  e.length > 0 &&
                    this.config.tokens &&
                    this.tokens.push(this.convertToken(i)),
                  i
                );
              }),
              (e.prototype.peekJSXToken = function () {
                var t = this.scanner.saveState();
                this.scanner.scanComments();
                var e = this.lexJSX();
                return this.scanner.restoreState(t), e;
              }),
              (e.prototype.expectJSX = function (t) {
                var e = this.nextJSXToken();
                (7 === e.type && e.value === t) || this.throwUnexpectedToken(e);
              }),
              (e.prototype.matchJSX = function (t) {
                var e = this.peekJSXToken();
                return 7 === e.type && e.value === t;
              }),
              (e.prototype.parseJSXIdentifier = function () {
                var t = this.createJSXNode(),
                  e = this.nextJSXToken();
                return (
                  100 !== e.type && this.throwUnexpectedToken(e),
                  this.finalize(t, new a.JSXIdentifier(e.value))
                );
              }),
              (e.prototype.parseJSXElementName = function () {
                var t = this.createJSXNode(),
                  e = this.parseJSXIdentifier();
                if (this.matchJSX(':')) {
                  var n = e;
                  this.expectJSX(':');
                  var i = this.parseJSXIdentifier();
                  e = this.finalize(t, new a.JSXNamespacedName(n, i));
                } else if (this.matchJSX('.'))
                  for (; this.matchJSX('.'); ) {
                    var r = e;
                    this.expectJSX('.');
                    var s = this.parseJSXIdentifier();
                    e = this.finalize(t, new a.JSXMemberExpression(r, s));
                  }
                return e;
              }),
              (e.prototype.parseJSXAttributeName = function () {
                var t,
                  e = this.createJSXNode(),
                  n = this.parseJSXIdentifier();
                if (this.matchJSX(':')) {
                  var i = n;
                  this.expectJSX(':');
                  var r = this.parseJSXIdentifier();
                  t = this.finalize(e, new a.JSXNamespacedName(i, r));
                } else t = n;
                return t;
              }),
              (e.prototype.parseJSXStringLiteralAttribute = function () {
                var t = this.createJSXNode(),
                  e = this.nextJSXToken();
                8 !== e.type && this.throwUnexpectedToken(e);
                var n = this.getTokenRaw(e);
                return this.finalize(t, new u.Literal(e.value, n));
              }),
              (e.prototype.parseJSXExpressionAttribute = function () {
                var t = this.createJSXNode();
                this.expectJSX('{'),
                  this.finishJSX(),
                  this.match('}') &&
                    this.tolerateError(
                      'JSX attributes must only be assigned a non-empty expression'
                    );
                var e = this.parseAssignmentExpression();
                return (
                  this.reenterJSX(),
                  this.finalize(t, new a.JSXExpressionContainer(e))
                );
              }),
              (e.prototype.parseJSXAttributeValue = function () {
                return this.matchJSX('{')
                  ? this.parseJSXExpressionAttribute()
                  : this.matchJSX('<')
                  ? this.parseJSXElement()
                  : this.parseJSXStringLiteralAttribute();
              }),
              (e.prototype.parseJSXNameValueAttribute = function () {
                var t = this.createJSXNode(),
                  e = this.parseJSXAttributeName(),
                  n = null;
                return (
                  this.matchJSX('=') &&
                    (this.expectJSX('='), (n = this.parseJSXAttributeValue())),
                  this.finalize(t, new a.JSXAttribute(e, n))
                );
              }),
              (e.prototype.parseJSXSpreadAttribute = function () {
                var t = this.createJSXNode();
                this.expectJSX('{'), this.expectJSX('...'), this.finishJSX();
                var e = this.parseAssignmentExpression();
                return (
                  this.reenterJSX(),
                  this.finalize(t, new a.JSXSpreadAttribute(e))
                );
              }),
              (e.prototype.parseJSXAttributes = function () {
                for (var t = []; !this.matchJSX('/') && !this.matchJSX('>'); ) {
                  var e = this.matchJSX('{')
                    ? this.parseJSXSpreadAttribute()
                    : this.parseJSXNameValueAttribute();
                  t.push(e);
                }
                return t;
              }),
              (e.prototype.parseJSXOpeningElement = function () {
                var t = this.createJSXNode();
                this.expectJSX('<');
                var e = this.parseJSXElementName(),
                  n = this.parseJSXAttributes(),
                  i = this.matchJSX('/');
                return (
                  i && this.expectJSX('/'),
                  this.expectJSX('>'),
                  this.finalize(t, new a.JSXOpeningElement(e, i, n))
                );
              }),
              (e.prototype.parseJSXBoundaryElement = function () {
                var t = this.createJSXNode();
                if ((this.expectJSX('<'), this.matchJSX('/'))) {
                  this.expectJSX('/');
                  var e = this.parseJSXElementName();
                  return (
                    this.expectJSX('>'),
                    this.finalize(t, new a.JSXClosingElement(e))
                  );
                }
                var n = this.parseJSXElementName(),
                  i = this.parseJSXAttributes(),
                  r = this.matchJSX('/');
                return (
                  r && this.expectJSX('/'),
                  this.expectJSX('>'),
                  this.finalize(t, new a.JSXOpeningElement(n, r, i))
                );
              }),
              (e.prototype.parseJSXEmptyExpression = function () {
                var t = this.createJSXChildNode();
                return (
                  this.collectComments(),
                  (this.lastMarker.index = this.scanner.index),
                  (this.lastMarker.line = this.scanner.lineNumber),
                  (this.lastMarker.column =
                    this.scanner.index - this.scanner.lineStart),
                  this.finalize(t, new a.JSXEmptyExpression())
                );
              }),
              (e.prototype.parseJSXExpressionContainer = function () {
                var t,
                  e = this.createJSXNode();
                return (
                  this.expectJSX('{'),
                  this.matchJSX('}')
                    ? ((t = this.parseJSXEmptyExpression()),
                      this.expectJSX('}'))
                    : (this.finishJSX(),
                      (t = this.parseAssignmentExpression()),
                      this.reenterJSX()),
                  this.finalize(e, new a.JSXExpressionContainer(t))
                );
              }),
              (e.prototype.parseJSXChildren = function () {
                for (var t = []; !this.scanner.eof(); ) {
                  var e = this.createJSXChildNode(),
                    n = this.nextJSXText();
                  if (n.start < n.end) {
                    var i = this.getTokenRaw(n),
                      r = this.finalize(e, new a.JSXText(n.value, i));
                    t.push(r);
                  }
                  if ('{' !== this.scanner.source[this.scanner.index]) break;
                  var s = this.parseJSXExpressionContainer();
                  t.push(s);
                }
                return t;
              }),
              (e.prototype.parseComplexJSXElement = function (t) {
                for (var e = []; !this.scanner.eof(); ) {
                  t.children = t.children.concat(this.parseJSXChildren());
                  var n = this.createJSXChildNode(),
                    i = this.parseJSXBoundaryElement();
                  if (i.type === o.JSXSyntax.JSXOpeningElement) {
                    var r = i;
                    if (r.selfClosing) {
                      var s = this.finalize(n, new a.JSXElement(r, [], null));
                      t.children.push(s);
                    } else
                      e.push(t),
                        (t = {
                          node: n,
                          opening: r,
                          closing: null,
                          children: [],
                        });
                  }
                  if (i.type === o.JSXSyntax.JSXClosingElement) {
                    t.closing = i;
                    var u = p(t.opening.name);
                    if (
                      (u !== p(t.closing.name) &&
                        this.tolerateError(
                          'Expected corresponding JSX closing tag for %0',
                          u
                        ),
                      !(e.length > 0))
                    )
                      break;
                    s = this.finalize(
                      t.node,
                      new a.JSXElement(t.opening, t.children, t.closing)
                    );
                    (t = e[e.length - 1]).children.push(s), e.pop();
                  }
                }
                return t;
              }),
              (e.prototype.parseJSXElement = function () {
                var t = this.createJSXNode(),
                  e = this.parseJSXOpeningElement(),
                  n = [],
                  i = null;
                if (!e.selfClosing) {
                  var r = this.parseComplexJSXElement({
                    node: t,
                    opening: e,
                    closing: i,
                    children: n,
                  });
                  (n = r.children), (i = r.closing);
                }
                return this.finalize(t, new a.JSXElement(e, n, i));
              }),
              (e.prototype.parseJSXRoot = function () {
                this.config.tokens && this.tokens.pop(), this.startJSX();
                var t = this.parseJSXElement();
                return this.finishJSX(), t;
              }),
              (e.prototype.isStartOfExpression = function () {
                return (
                  t.prototype.isStartOfExpression.call(this) || this.match('<')
                );
              }),
              e
            );
          })(c.Parser);
          e.JSXParser = f;
        },
        function (t, e) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 });
          var n = {
            NonAsciiIdentifierStart:
              /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
            NonAsciiIdentifierPart:
              /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/,
          };
          e.Character = {
            fromCodePoint: function (t) {
              return t < 65536
                ? String.fromCharCode(t)
                : String.fromCharCode(55296 + ((t - 65536) >> 10)) +
                    String.fromCharCode(56320 + ((t - 65536) & 1023));
            },
            isWhiteSpace: function (t) {
              return (
                32 === t ||
                9 === t ||
                11 === t ||
                12 === t ||
                160 === t ||
                (t >= 5760 &&
                  [
                    5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,
                    8201, 8202, 8239, 8287, 12288, 65279,
                  ].indexOf(t) >= 0)
              );
            },
            isLineTerminator: function (t) {
              return 10 === t || 13 === t || 8232 === t || 8233 === t;
            },
            isIdentifierStart: function (t) {
              return (
                36 === t ||
                95 === t ||
                (t >= 65 && t <= 90) ||
                (t >= 97 && t <= 122) ||
                92 === t ||
                (t >= 128 &&
                  n.NonAsciiIdentifierStart.test(e.Character.fromCodePoint(t)))
              );
            },
            isIdentifierPart: function (t) {
              return (
                36 === t ||
                95 === t ||
                (t >= 65 && t <= 90) ||
                (t >= 97 && t <= 122) ||
                (t >= 48 && t <= 57) ||
                92 === t ||
                (t >= 128 &&
                  n.NonAsciiIdentifierPart.test(e.Character.fromCodePoint(t)))
              );
            },
            isDecimalDigit: function (t) {
              return t >= 48 && t <= 57;
            },
            isHexDigit: function (t) {
              return (
                (t >= 48 && t <= 57) ||
                (t >= 65 && t <= 70) ||
                (t >= 97 && t <= 102)
              );
            },
            isOctalDigit: function (t) {
              return t >= 48 && t <= 55;
            },
          };
        },
        function (t, e, n) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 });
          var i = n(6),
            r = (function () {
              return function (t) {
                (this.type = i.JSXSyntax.JSXClosingElement), (this.name = t);
              };
            })();
          e.JSXClosingElement = r;
          var s = (function () {
            return function (t, e, n) {
              (this.type = i.JSXSyntax.JSXElement),
                (this.openingElement = t),
                (this.children = e),
                (this.closingElement = n);
            };
          })();
          e.JSXElement = s;
          var a = (function () {
            return function () {
              this.type = i.JSXSyntax.JSXEmptyExpression;
            };
          })();
          e.JSXEmptyExpression = a;
          var o = (function () {
            return function (t) {
              (this.type = i.JSXSyntax.JSXExpressionContainer),
                (this.expression = t);
            };
          })();
          e.JSXExpressionContainer = o;
          var u = (function () {
            return function (t) {
              (this.type = i.JSXSyntax.JSXIdentifier), (this.name = t);
            };
          })();
          e.JSXIdentifier = u;
          var c = (function () {
            return function (t, e) {
              (this.type = i.JSXSyntax.JSXMemberExpression),
                (this.object = t),
                (this.property = e);
            };
          })();
          e.JSXMemberExpression = c;
          var h = (function () {
            return function (t, e) {
              (this.type = i.JSXSyntax.JSXAttribute),
                (this.name = t),
                (this.value = e);
            };
          })();
          e.JSXAttribute = h;
          var l = (function () {
            return function (t, e) {
              (this.type = i.JSXSyntax.JSXNamespacedName),
                (this.namespace = t),
                (this.name = e);
            };
          })();
          e.JSXNamespacedName = l;
          var p = (function () {
            return function (t, e, n) {
              (this.type = i.JSXSyntax.JSXOpeningElement),
                (this.name = t),
                (this.selfClosing = e),
                (this.attributes = n);
            };
          })();
          e.JSXOpeningElement = p;
          var f = (function () {
            return function (t) {
              (this.type = i.JSXSyntax.JSXSpreadAttribute), (this.argument = t);
            };
          })();
          e.JSXSpreadAttribute = f;
          var d = (function () {
            return function (t, e) {
              (this.type = i.JSXSyntax.JSXText),
                (this.value = t),
                (this.raw = e);
            };
          })();
          e.JSXText = d;
        },
        function (t, e) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.JSXSyntax = {
              JSXAttribute: 'JSXAttribute',
              JSXClosingElement: 'JSXClosingElement',
              JSXElement: 'JSXElement',
              JSXEmptyExpression: 'JSXEmptyExpression',
              JSXExpressionContainer: 'JSXExpressionContainer',
              JSXIdentifier: 'JSXIdentifier',
              JSXMemberExpression: 'JSXMemberExpression',
              JSXNamespacedName: 'JSXNamespacedName',
              JSXOpeningElement: 'JSXOpeningElement',
              JSXSpreadAttribute: 'JSXSpreadAttribute',
              JSXText: 'JSXText',
            });
        },
        function (t, e, n) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 });
          var i = n(2),
            r = (function () {
              return function (t) {
                (this.type = i.Syntax.ArrayExpression), (this.elements = t);
              };
            })();
          e.ArrayExpression = r;
          var s = (function () {
            return function (t) {
              (this.type = i.Syntax.ArrayPattern), (this.elements = t);
            };
          })();
          e.ArrayPattern = s;
          var a = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.ArrowFunctionExpression),
                (this.id = null),
                (this.params = t),
                (this.body = e),
                (this.generator = !1),
                (this.expression = n),
                (this.async = !1);
            };
          })();
          e.ArrowFunctionExpression = a;
          var o = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.AssignmentExpression),
                (this.operator = t),
                (this.left = e),
                (this.right = n);
            };
          })();
          e.AssignmentExpression = o;
          var u = (function () {
            return function (t, e) {
              (this.type = i.Syntax.AssignmentPattern),
                (this.left = t),
                (this.right = e);
            };
          })();
          e.AssignmentPattern = u;
          var c = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.ArrowFunctionExpression),
                (this.id = null),
                (this.params = t),
                (this.body = e),
                (this.generator = !1),
                (this.expression = n),
                (this.async = !0);
            };
          })();
          e.AsyncArrowFunctionExpression = c;
          var h = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.FunctionDeclaration),
                (this.id = t),
                (this.params = e),
                (this.body = n),
                (this.generator = !1),
                (this.expression = !1),
                (this.async = !0);
            };
          })();
          e.AsyncFunctionDeclaration = h;
          var l = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.FunctionExpression),
                (this.id = t),
                (this.params = e),
                (this.body = n),
                (this.generator = !1),
                (this.expression = !1),
                (this.async = !0);
            };
          })();
          e.AsyncFunctionExpression = l;
          var p = (function () {
            return function (t) {
              (this.type = i.Syntax.AwaitExpression), (this.argument = t);
            };
          })();
          e.AwaitExpression = p;
          var f = (function () {
            return function (t, e, n) {
              var r = '||' === t || '&&' === t;
              (this.type = r
                ? i.Syntax.LogicalExpression
                : i.Syntax.BinaryExpression),
                (this.operator = t),
                (this.left = e),
                (this.right = n);
            };
          })();
          e.BinaryExpression = f;
          var d = (function () {
            return function (t) {
              (this.type = i.Syntax.BlockStatement), (this.body = t);
            };
          })();
          e.BlockStatement = d;
          var m = (function () {
            return function (t) {
              (this.type = i.Syntax.BreakStatement), (this.label = t);
            };
          })();
          e.BreakStatement = m;
          var y = (function () {
            return function (t, e) {
              (this.type = i.Syntax.CallExpression),
                (this.callee = t),
                (this.arguments = e);
            };
          })();
          e.CallExpression = y;
          var v = (function () {
            return function (t, e) {
              (this.type = i.Syntax.CatchClause),
                (this.param = t),
                (this.body = e);
            };
          })();
          e.CatchClause = v;
          var g = (function () {
            return function (t) {
              (this.type = i.Syntax.ClassBody), (this.body = t);
            };
          })();
          e.ClassBody = g;
          var x = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.ClassDeclaration),
                (this.id = t),
                (this.superClass = e),
                (this.body = n);
            };
          })();
          e.ClassDeclaration = x;
          var D = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.ClassExpression),
                (this.id = t),
                (this.superClass = e),
                (this.body = n);
            };
          })();
          e.ClassExpression = D;
          var S = (function () {
            return function (t, e) {
              (this.type = i.Syntax.MemberExpression),
                (this.computed = !0),
                (this.object = t),
                (this.property = e);
            };
          })();
          e.ComputedMemberExpression = S;
          var E = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.ConditionalExpression),
                (this.test = t),
                (this.consequent = e),
                (this.alternate = n);
            };
          })();
          e.ConditionalExpression = E;
          var w = (function () {
            return function (t) {
              (this.type = i.Syntax.ContinueStatement), (this.label = t);
            };
          })();
          e.ContinueStatement = w;
          var A = (function () {
            return function () {
              this.type = i.Syntax.DebuggerStatement;
            };
          })();
          e.DebuggerStatement = A;
          var C = (function () {
            return function (t, e) {
              (this.type = i.Syntax.ExpressionStatement),
                (this.expression = t),
                (this.directive = e);
            };
          })();
          e.Directive = C;
          var b = (function () {
            return function (t, e) {
              (this.type = i.Syntax.DoWhileStatement),
                (this.body = t),
                (this.test = e);
            };
          })();
          e.DoWhileStatement = b;
          var F = (function () {
            return function () {
              this.type = i.Syntax.EmptyStatement;
            };
          })();
          e.EmptyStatement = F;
          var k = (function () {
            return function (t) {
              (this.type = i.Syntax.ExportAllDeclaration), (this.source = t);
            };
          })();
          e.ExportAllDeclaration = k;
          var T = (function () {
            return function (t) {
              (this.type = i.Syntax.ExportDefaultDeclaration),
                (this.declaration = t);
            };
          })();
          e.ExportDefaultDeclaration = T;
          var _ = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.ExportNamedDeclaration),
                (this.declaration = t),
                (this.specifiers = e),
                (this.source = n);
            };
          })();
          e.ExportNamedDeclaration = _;
          var M = (function () {
            return function (t, e) {
              (this.type = i.Syntax.ExportSpecifier),
                (this.exported = e),
                (this.local = t);
            };
          })();
          e.ExportSpecifier = M;
          var P = (function () {
            return function (t) {
              (this.type = i.Syntax.ExpressionStatement), (this.expression = t);
            };
          })();
          e.ExpressionStatement = P;
          var I = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.ForInStatement),
                (this.left = t),
                (this.right = e),
                (this.body = n),
                (this.each = !1);
            };
          })();
          e.ForInStatement = I;
          var O = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.ForOfStatement),
                (this.left = t),
                (this.right = e),
                (this.body = n);
            };
          })();
          e.ForOfStatement = O;
          var N = (function () {
            return function (t, e, n, r) {
              (this.type = i.Syntax.ForStatement),
                (this.init = t),
                (this.test = e),
                (this.update = n),
                (this.body = r);
            };
          })();
          e.ForStatement = N;
          var B = (function () {
            return function (t, e, n, r) {
              (this.type = i.Syntax.FunctionDeclaration),
                (this.id = t),
                (this.params = e),
                (this.body = n),
                (this.generator = r),
                (this.expression = !1),
                (this.async = !1);
            };
          })();
          e.FunctionDeclaration = B;
          var L = (function () {
            return function (t, e, n, r) {
              (this.type = i.Syntax.FunctionExpression),
                (this.id = t),
                (this.params = e),
                (this.body = n),
                (this.generator = r),
                (this.expression = !1),
                (this.async = !1);
            };
          })();
          e.FunctionExpression = L;
          var U = (function () {
            return function (t) {
              (this.type = i.Syntax.Identifier), (this.name = t);
            };
          })();
          e.Identifier = U;
          var R = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.IfStatement),
                (this.test = t),
                (this.consequent = e),
                (this.alternate = n);
            };
          })();
          e.IfStatement = R;
          var Y = (function () {
            return function (t, e) {
              (this.type = i.Syntax.ImportDeclaration),
                (this.specifiers = t),
                (this.source = e);
            };
          })();
          e.ImportDeclaration = Y;
          var j = (function () {
            return function (t) {
              (this.type = i.Syntax.ImportDefaultSpecifier), (this.local = t);
            };
          })();
          e.ImportDefaultSpecifier = j;
          var X = (function () {
            return function (t) {
              (this.type = i.Syntax.ImportNamespaceSpecifier), (this.local = t);
            };
          })();
          e.ImportNamespaceSpecifier = X;
          var V = (function () {
            return function (t, e) {
              (this.type = i.Syntax.ImportSpecifier),
                (this.local = t),
                (this.imported = e);
            };
          })();
          e.ImportSpecifier = V;
          var J = (function () {
            return function (t, e) {
              (this.type = i.Syntax.LabeledStatement),
                (this.label = t),
                (this.body = e);
            };
          })();
          e.LabeledStatement = J;
          var z = (function () {
            return function (t, e) {
              (this.type = i.Syntax.Literal), (this.value = t), (this.raw = e);
            };
          })();
          e.Literal = z;
          var H = (function () {
            return function (t, e) {
              (this.type = i.Syntax.MetaProperty),
                (this.meta = t),
                (this.property = e);
            };
          })();
          e.MetaProperty = H;
          var W = (function () {
            return function (t, e, n, r, s) {
              (this.type = i.Syntax.MethodDefinition),
                (this.key = t),
                (this.computed = e),
                (this.value = n),
                (this.kind = r),
                (this.static = s);
            };
          })();
          e.MethodDefinition = W;
          var G = (function () {
            return function (t) {
              (this.type = i.Syntax.Program),
                (this.body = t),
                (this.sourceType = 'module');
            };
          })();
          e.Module = G;
          var K = (function () {
            return function (t, e) {
              (this.type = i.Syntax.NewExpression),
                (this.callee = t),
                (this.arguments = e);
            };
          })();
          e.NewExpression = K;
          var q = (function () {
            return function (t) {
              (this.type = i.Syntax.ObjectExpression), (this.properties = t);
            };
          })();
          e.ObjectExpression = q;
          var Z = (function () {
            return function (t) {
              (this.type = i.Syntax.ObjectPattern), (this.properties = t);
            };
          })();
          e.ObjectPattern = Z;
          var $ = (function () {
            return function (t, e, n, r, s, a) {
              (this.type = i.Syntax.Property),
                (this.key = e),
                (this.computed = n),
                (this.value = r),
                (this.kind = t),
                (this.method = s),
                (this.shorthand = a);
            };
          })();
          e.Property = $;
          var Q = (function () {
            return function (t, e, n, r) {
              (this.type = i.Syntax.Literal),
                (this.value = t),
                (this.raw = e),
                (this.regex = { pattern: n, flags: r });
            };
          })();
          e.RegexLiteral = Q;
          var tt = (function () {
            return function (t) {
              (this.type = i.Syntax.RestElement), (this.argument = t);
            };
          })();
          e.RestElement = tt;
          var et = (function () {
            return function (t) {
              (this.type = i.Syntax.ReturnStatement), (this.argument = t);
            };
          })();
          e.ReturnStatement = et;
          var nt = (function () {
            return function (t) {
              (this.type = i.Syntax.Program),
                (this.body = t),
                (this.sourceType = 'script');
            };
          })();
          e.Script = nt;
          var it = (function () {
            return function (t) {
              (this.type = i.Syntax.SequenceExpression), (this.expressions = t);
            };
          })();
          e.SequenceExpression = it;
          var rt = (function () {
            return function (t) {
              (this.type = i.Syntax.SpreadElement), (this.argument = t);
            };
          })();
          e.SpreadElement = rt;
          var st = (function () {
            return function (t, e) {
              (this.type = i.Syntax.MemberExpression),
                (this.computed = !1),
                (this.object = t),
                (this.property = e);
            };
          })();
          e.StaticMemberExpression = st;
          var at = (function () {
            return function () {
              this.type = i.Syntax.Super;
            };
          })();
          e.Super = at;
          var ot = (function () {
            return function (t, e) {
              (this.type = i.Syntax.SwitchCase),
                (this.test = t),
                (this.consequent = e);
            };
          })();
          e.SwitchCase = ot;
          var ut = (function () {
            return function (t, e) {
              (this.type = i.Syntax.SwitchStatement),
                (this.discriminant = t),
                (this.cases = e);
            };
          })();
          e.SwitchStatement = ut;
          var ct = (function () {
            return function (t, e) {
              (this.type = i.Syntax.TaggedTemplateExpression),
                (this.tag = t),
                (this.quasi = e);
            };
          })();
          e.TaggedTemplateExpression = ct;
          var ht = (function () {
            return function (t, e) {
              (this.type = i.Syntax.TemplateElement),
                (this.value = t),
                (this.tail = e);
            };
          })();
          e.TemplateElement = ht;
          var lt = (function () {
            return function (t, e) {
              (this.type = i.Syntax.TemplateLiteral),
                (this.quasis = t),
                (this.expressions = e);
            };
          })();
          e.TemplateLiteral = lt;
          var pt = (function () {
            return function () {
              this.type = i.Syntax.ThisExpression;
            };
          })();
          e.ThisExpression = pt;
          var ft = (function () {
            return function (t) {
              (this.type = i.Syntax.ThrowStatement), (this.argument = t);
            };
          })();
          e.ThrowStatement = ft;
          var dt = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.TryStatement),
                (this.block = t),
                (this.handler = e),
                (this.finalizer = n);
            };
          })();
          e.TryStatement = dt;
          var mt = (function () {
            return function (t, e) {
              (this.type = i.Syntax.UnaryExpression),
                (this.operator = t),
                (this.argument = e),
                (this.prefix = !0);
            };
          })();
          e.UnaryExpression = mt;
          var yt = (function () {
            return function (t, e, n) {
              (this.type = i.Syntax.UpdateExpression),
                (this.operator = t),
                (this.argument = e),
                (this.prefix = n);
            };
          })();
          e.UpdateExpression = yt;
          var vt = (function () {
            return function (t, e) {
              (this.type = i.Syntax.VariableDeclaration),
                (this.declarations = t),
                (this.kind = e);
            };
          })();
          e.VariableDeclaration = vt;
          var gt = (function () {
            return function (t, e) {
              (this.type = i.Syntax.VariableDeclarator),
                (this.id = t),
                (this.init = e);
            };
          })();
          e.VariableDeclarator = gt;
          var xt = (function () {
            return function (t, e) {
              (this.type = i.Syntax.WhileStatement),
                (this.test = t),
                (this.body = e);
            };
          })();
          e.WhileStatement = xt;
          var Dt = (function () {
            return function (t, e) {
              (this.type = i.Syntax.WithStatement),
                (this.object = t),
                (this.body = e);
            };
          })();
          e.WithStatement = Dt;
          var St = (function () {
            return function (t, e) {
              (this.type = i.Syntax.YieldExpression),
                (this.argument = t),
                (this.delegate = e);
            };
          })();
          e.YieldExpression = St;
        },
        function (t, e, n) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 });
          var i = n(9),
            r = n(10),
            s = n(11),
            a = n(7),
            o = n(12),
            u = n(2),
            c = n(13),
            h = (function () {
              function t(t, e, n) {
                void 0 === e && (e = {}),
                  (this.config = {
                    range: 'boolean' == typeof e.range && e.range,
                    loc: 'boolean' == typeof e.loc && e.loc,
                    source: null,
                    tokens: 'boolean' == typeof e.tokens && e.tokens,
                    comment: 'boolean' == typeof e.comment && e.comment,
                    tolerant: 'boolean' == typeof e.tolerant && e.tolerant,
                  }),
                  this.config.loc &&
                    e.source &&
                    null !== e.source &&
                    (this.config.source = String(e.source)),
                  (this.delegate = n),
                  (this.errorHandler = new r.ErrorHandler()),
                  (this.errorHandler.tolerant = this.config.tolerant),
                  (this.scanner = new o.Scanner(t, this.errorHandler)),
                  (this.scanner.trackComment = this.config.comment),
                  (this.operatorPrecedence = {
                    ')': 0,
                    ';': 0,
                    ',': 0,
                    '=': 0,
                    ']': 0,
                    '||': 1,
                    '&&': 2,
                    '|': 3,
                    '^': 4,
                    '&': 5,
                    '==': 6,
                    '!=': 6,
                    '===': 6,
                    '!==': 6,
                    '<': 7,
                    '>': 7,
                    '<=': 7,
                    '>=': 7,
                    '<<': 8,
                    '>>': 8,
                    '>>>': 8,
                    '+': 9,
                    '-': 9,
                    '*': 11,
                    '/': 11,
                    '%': 11,
                  }),
                  (this.lookahead = {
                    type: 2,
                    value: '',
                    lineNumber: this.scanner.lineNumber,
                    lineStart: 0,
                    start: 0,
                    end: 0,
                  }),
                  (this.hasLineTerminator = !1),
                  (this.context = {
                    isModule: !1,
                    await: !1,
                    allowIn: !0,
                    allowStrictDirective: !0,
                    allowYield: !0,
                    firstCoverInitializedNameError: null,
                    isAssignmentTarget: !1,
                    isBindingElement: !1,
                    inFunctionBody: !1,
                    inIteration: !1,
                    inSwitch: !1,
                    labelSet: {},
                    strict: !1,
                  }),
                  (this.tokens = []),
                  (this.startMarker = {
                    index: 0,
                    line: this.scanner.lineNumber,
                    column: 0,
                  }),
                  (this.lastMarker = {
                    index: 0,
                    line: this.scanner.lineNumber,
                    column: 0,
                  }),
                  this.nextToken(),
                  (this.lastMarker = {
                    index: this.scanner.index,
                    line: this.scanner.lineNumber,
                    column: this.scanner.index - this.scanner.lineStart,
                  });
              }
              return (
                (t.prototype.throwError = function (t) {
                  for (var e = [], n = 1; n < arguments.length; n++)
                    e[n - 1] = arguments[n];
                  var r = Array.prototype.slice.call(arguments, 1),
                    s = t.replace(/%(\d)/g, function (t, e) {
                      return (
                        i.assert(
                          e < r.length,
                          'Message reference must be in range'
                        ),
                        r[e]
                      );
                    }),
                    a = this.lastMarker.index,
                    o = this.lastMarker.line,
                    u = this.lastMarker.column + 1;
                  throw this.errorHandler.createError(a, o, u, s);
                }),
                (t.prototype.tolerateError = function (t) {
                  for (var e = [], n = 1; n < arguments.length; n++)
                    e[n - 1] = arguments[n];
                  var r = Array.prototype.slice.call(arguments, 1),
                    s = t.replace(/%(\d)/g, function (t, e) {
                      return (
                        i.assert(
                          e < r.length,
                          'Message reference must be in range'
                        ),
                        r[e]
                      );
                    }),
                    a = this.lastMarker.index,
                    o = this.scanner.lineNumber,
                    u = this.lastMarker.column + 1;
                  this.errorHandler.tolerateError(a, o, u, s);
                }),
                (t.prototype.unexpectedTokenError = function (t, e) {
                  var n,
                    i = e || s.Messages.UnexpectedToken;
                  if (
                    (t
                      ? (e ||
                          ((i =
                            2 === t.type
                              ? s.Messages.UnexpectedEOS
                              : 3 === t.type
                              ? s.Messages.UnexpectedIdentifier
                              : 6 === t.type
                              ? s.Messages.UnexpectedNumber
                              : 8 === t.type
                              ? s.Messages.UnexpectedString
                              : 10 === t.type
                              ? s.Messages.UnexpectedTemplate
                              : s.Messages.UnexpectedToken),
                          4 === t.type &&
                            (this.scanner.isFutureReservedWord(t.value)
                              ? (i = s.Messages.UnexpectedReserved)
                              : this.context.strict &&
                                this.scanner.isStrictModeReservedWord(
                                  t.value
                                ) &&
                                (i = s.Messages.StrictReservedWord))),
                        (n = t.value))
                      : (n = 'ILLEGAL'),
                    (i = i.replace('%0', n)),
                    t && 'number' == typeof t.lineNumber)
                  ) {
                    var r = t.start,
                      a = t.lineNumber,
                      o = this.lastMarker.index - this.lastMarker.column,
                      u = t.start - o + 1;
                    return this.errorHandler.createError(r, a, u, i);
                  }
                  (r = this.lastMarker.index),
                    (a = this.lastMarker.line),
                    (u = this.lastMarker.column + 1);
                  return this.errorHandler.createError(r, a, u, i);
                }),
                (t.prototype.throwUnexpectedToken = function (t, e) {
                  throw this.unexpectedTokenError(t, e);
                }),
                (t.prototype.tolerateUnexpectedToken = function (t, e) {
                  this.errorHandler.tolerate(this.unexpectedTokenError(t, e));
                }),
                (t.prototype.collectComments = function () {
                  if (this.config.comment) {
                    var t = this.scanner.scanComments();
                    if (t.length > 0 && this.delegate)
                      for (var e = 0; e < t.length; ++e) {
                        var n = t[e],
                          i = void 0;
                        (i = {
                          type: n.multiLine ? 'BlockComment' : 'LineComment',
                          value: this.scanner.source.slice(
                            n.slice[0],
                            n.slice[1]
                          ),
                        }),
                          this.config.range && (i.range = n.range),
                          this.config.loc && (i.loc = n.loc);
                        var r = {
                          start: {
                            line: n.loc.start.line,
                            column: n.loc.start.column,
                            offset: n.range[0],
                          },
                          end: {
                            line: n.loc.end.line,
                            column: n.loc.end.column,
                            offset: n.range[1],
                          },
                        };
                        this.delegate(i, r);
                      }
                  } else this.scanner.scanComments();
                }),
                (t.prototype.getTokenRaw = function (t) {
                  return this.scanner.source.slice(t.start, t.end);
                }),
                (t.prototype.convertToken = function (t) {
                  var e = {
                    type: c.TokenName[t.type],
                    value: this.getTokenRaw(t),
                  };
                  if (
                    (this.config.range && (e.range = [t.start, t.end]),
                    this.config.loc &&
                      (e.loc = {
                        start: {
                          line: this.startMarker.line,
                          column: this.startMarker.column,
                        },
                        end: {
                          line: this.scanner.lineNumber,
                          column: this.scanner.index - this.scanner.lineStart,
                        },
                      }),
                    9 === t.type)
                  ) {
                    var n = t.pattern,
                      i = t.flags;
                    e.regex = { pattern: n, flags: i };
                  }
                  return e;
                }),
                (t.prototype.nextToken = function () {
                  var t = this.lookahead;
                  (this.lastMarker.index = this.scanner.index),
                    (this.lastMarker.line = this.scanner.lineNumber),
                    (this.lastMarker.column =
                      this.scanner.index - this.scanner.lineStart),
                    this.collectComments(),
                    this.scanner.index !== this.startMarker.index &&
                      ((this.startMarker.index = this.scanner.index),
                      (this.startMarker.line = this.scanner.lineNumber),
                      (this.startMarker.column =
                        this.scanner.index - this.scanner.lineStart));
                  var e = this.scanner.lex();
                  return (
                    (this.hasLineTerminator = t.lineNumber !== e.lineNumber),
                    e &&
                      this.context.strict &&
                      3 === e.type &&
                      this.scanner.isStrictModeReservedWord(e.value) &&
                      (e.type = 4),
                    (this.lookahead = e),
                    this.config.tokens &&
                      2 !== e.type &&
                      this.tokens.push(this.convertToken(e)),
                    t
                  );
                }),
                (t.prototype.nextRegexToken = function () {
                  this.collectComments();
                  var t = this.scanner.scanRegExp();
                  return (
                    this.config.tokens &&
                      (this.tokens.pop(),
                      this.tokens.push(this.convertToken(t))),
                    (this.lookahead = t),
                    this.nextToken(),
                    t
                  );
                }),
                (t.prototype.createNode = function () {
                  return {
                    index: this.startMarker.index,
                    line: this.startMarker.line,
                    column: this.startMarker.column,
                  };
                }),
                (t.prototype.startNode = function (t, e) {
                  void 0 === e && (e = 0);
                  var n = t.start - t.lineStart,
                    i = t.lineNumber;
                  return (
                    n < 0 && ((n += e), i--),
                    { index: t.start, line: i, column: n }
                  );
                }),
                (t.prototype.finalize = function (t, e) {
                  if (
                    (this.config.range &&
                      (e.range = [t.index, this.lastMarker.index]),
                    this.config.loc &&
                      ((e.loc = {
                        start: { line: t.line, column: t.column },
                        end: {
                          line: this.lastMarker.line,
                          column: this.lastMarker.column,
                        },
                      }),
                      this.config.source &&
                        (e.loc.source = this.config.source)),
                    this.delegate)
                  ) {
                    var n = {
                      start: {
                        line: t.line,
                        column: t.column,
                        offset: t.index,
                      },
                      end: {
                        line: this.lastMarker.line,
                        column: this.lastMarker.column,
                        offset: this.lastMarker.index,
                      },
                    };
                    this.delegate(e, n);
                  }
                  return e;
                }),
                (t.prototype.expect = function (t) {
                  var e = this.nextToken();
                  (7 === e.type && e.value === t) ||
                    this.throwUnexpectedToken(e);
                }),
                (t.prototype.expectCommaSeparator = function () {
                  if (this.config.tolerant) {
                    var t = this.lookahead;
                    7 === t.type && ',' === t.value
                      ? this.nextToken()
                      : 7 === t.type && ';' === t.value
                      ? (this.nextToken(), this.tolerateUnexpectedToken(t))
                      : this.tolerateUnexpectedToken(
                          t,
                          s.Messages.UnexpectedToken
                        );
                  } else this.expect(',');
                }),
                (t.prototype.expectKeyword = function (t) {
                  var e = this.nextToken();
                  (4 === e.type && e.value === t) ||
                    this.throwUnexpectedToken(e);
                }),
                (t.prototype.match = function (t) {
                  return (
                    7 === this.lookahead.type && this.lookahead.value === t
                  );
                }),
                (t.prototype.matchKeyword = function (t) {
                  return (
                    4 === this.lookahead.type && this.lookahead.value === t
                  );
                }),
                (t.prototype.matchContextualKeyword = function (t) {
                  return (
                    3 === this.lookahead.type && this.lookahead.value === t
                  );
                }),
                (t.prototype.matchAssign = function () {
                  if (7 !== this.lookahead.type) return !1;
                  var t = this.lookahead.value;
                  return (
                    '=' === t ||
                    '*=' === t ||
                    '**=' === t ||
                    '/=' === t ||
                    '%=' === t ||
                    '+=' === t ||
                    '-=' === t ||
                    '<<=' === t ||
                    '>>=' === t ||
                    '>>>=' === t ||
                    '&=' === t ||
                    '^=' === t ||
                    '|=' === t
                  );
                }),
                (t.prototype.isolateCoverGrammar = function (t) {
                  var e = this.context.isBindingElement,
                    n = this.context.isAssignmentTarget,
                    i = this.context.firstCoverInitializedNameError;
                  (this.context.isBindingElement = !0),
                    (this.context.isAssignmentTarget = !0),
                    (this.context.firstCoverInitializedNameError = null);
                  var r = t.call(this);
                  return (
                    null !== this.context.firstCoverInitializedNameError &&
                      this.throwUnexpectedToken(
                        this.context.firstCoverInitializedNameError
                      ),
                    (this.context.isBindingElement = e),
                    (this.context.isAssignmentTarget = n),
                    (this.context.firstCoverInitializedNameError = i),
                    r
                  );
                }),
                (t.prototype.inheritCoverGrammar = function (t) {
                  var e = this.context.isBindingElement,
                    n = this.context.isAssignmentTarget,
                    i = this.context.firstCoverInitializedNameError;
                  (this.context.isBindingElement = !0),
                    (this.context.isAssignmentTarget = !0),
                    (this.context.firstCoverInitializedNameError = null);
                  var r = t.call(this);
                  return (
                    (this.context.isBindingElement =
                      this.context.isBindingElement && e),
                    (this.context.isAssignmentTarget =
                      this.context.isAssignmentTarget && n),
                    (this.context.firstCoverInitializedNameError =
                      i || this.context.firstCoverInitializedNameError),
                    r
                  );
                }),
                (t.prototype.consumeSemicolon = function () {
                  this.match(';')
                    ? this.nextToken()
                    : this.hasLineTerminator ||
                      (2 === this.lookahead.type ||
                        this.match('}') ||
                        this.throwUnexpectedToken(this.lookahead),
                      (this.lastMarker.index = this.startMarker.index),
                      (this.lastMarker.line = this.startMarker.line),
                      (this.lastMarker.column = this.startMarker.column));
                }),
                (t.prototype.parsePrimaryExpression = function () {
                  var t,
                    e,
                    n,
                    i = this.createNode();
                  switch (this.lookahead.type) {
                    case 3:
                      (this.context.isModule || this.context.await) &&
                        'await' === this.lookahead.value &&
                        this.tolerateUnexpectedToken(this.lookahead),
                        (t = this.matchAsyncFunction()
                          ? this.parseFunctionExpression()
                          : this.finalize(
                              i,
                              new a.Identifier(this.nextToken().value)
                            ));
                      break;
                    case 6:
                    case 8:
                      this.context.strict &&
                        this.lookahead.octal &&
                        this.tolerateUnexpectedToken(
                          this.lookahead,
                          s.Messages.StrictOctalLiteral
                        ),
                        (this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1),
                        (e = this.nextToken()),
                        (n = this.getTokenRaw(e)),
                        (t = this.finalize(i, new a.Literal(e.value, n)));
                      break;
                    case 1:
                      (this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1),
                        (e = this.nextToken()),
                        (n = this.getTokenRaw(e)),
                        (t = this.finalize(
                          i,
                          new a.Literal('true' === e.value, n)
                        ));
                      break;
                    case 5:
                      (this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1),
                        (e = this.nextToken()),
                        (n = this.getTokenRaw(e)),
                        (t = this.finalize(i, new a.Literal(null, n)));
                      break;
                    case 10:
                      t = this.parseTemplateLiteral();
                      break;
                    case 7:
                      switch (this.lookahead.value) {
                        case '(':
                          (this.context.isBindingElement = !1),
                            (t = this.inheritCoverGrammar(
                              this.parseGroupExpression
                            ));
                          break;
                        case '[':
                          t = this.inheritCoverGrammar(
                            this.parseArrayInitializer
                          );
                          break;
                        case '{':
                          t = this.inheritCoverGrammar(
                            this.parseObjectInitializer
                          );
                          break;
                        case '/':
                        case '/=':
                          (this.context.isAssignmentTarget = !1),
                            (this.context.isBindingElement = !1),
                            (this.scanner.index = this.startMarker.index),
                            (e = this.nextRegexToken()),
                            (n = this.getTokenRaw(e)),
                            (t = this.finalize(
                              i,
                              new a.RegexLiteral(e.regex, n, e.pattern, e.flags)
                            ));
                          break;
                        default:
                          t = this.throwUnexpectedToken(this.nextToken());
                      }
                      break;
                    case 4:
                      !this.context.strict &&
                      this.context.allowYield &&
                      this.matchKeyword('yield')
                        ? (t = this.parseIdentifierName())
                        : !this.context.strict && this.matchKeyword('let')
                        ? (t = this.finalize(
                            i,
                            new a.Identifier(this.nextToken().value)
                          ))
                        : ((this.context.isAssignmentTarget = !1),
                          (this.context.isBindingElement = !1),
                          this.matchKeyword('function')
                            ? (t = this.parseFunctionExpression())
                            : this.matchKeyword('this')
                            ? (this.nextToken(),
                              (t = this.finalize(i, new a.ThisExpression())))
                            : (t = this.matchKeyword('class')
                                ? this.parseClassExpression()
                                : this.throwUnexpectedToken(this.nextToken())));
                      break;
                    default:
                      t = this.throwUnexpectedToken(this.nextToken());
                  }
                  return t;
                }),
                (t.prototype.parseSpreadElement = function () {
                  var t = this.createNode();
                  this.expect('...');
                  var e = this.inheritCoverGrammar(
                    this.parseAssignmentExpression
                  );
                  return this.finalize(t, new a.SpreadElement(e));
                }),
                (t.prototype.parseArrayInitializer = function () {
                  var t = this.createNode(),
                    e = [];
                  for (this.expect('['); !this.match(']'); )
                    if (this.match(',')) this.nextToken(), e.push(null);
                    else if (this.match('...')) {
                      var n = this.parseSpreadElement();
                      this.match(']') ||
                        ((this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1),
                        this.expect(',')),
                        e.push(n);
                    } else
                      e.push(
                        this.inheritCoverGrammar(this.parseAssignmentExpression)
                      ),
                        this.match(']') || this.expect(',');
                  return (
                    this.expect(']'), this.finalize(t, new a.ArrayExpression(e))
                  );
                }),
                (t.prototype.parsePropertyMethod = function (t) {
                  (this.context.isAssignmentTarget = !1),
                    (this.context.isBindingElement = !1);
                  var e = this.context.strict,
                    n = this.context.allowStrictDirective;
                  this.context.allowStrictDirective = t.simple;
                  var i = this.isolateCoverGrammar(
                    this.parseFunctionSourceElements
                  );
                  return (
                    this.context.strict &&
                      t.firstRestricted &&
                      this.tolerateUnexpectedToken(
                        t.firstRestricted,
                        t.message
                      ),
                    this.context.strict &&
                      t.stricted &&
                      this.tolerateUnexpectedToken(t.stricted, t.message),
                    (this.context.strict = e),
                    (this.context.allowStrictDirective = n),
                    i
                  );
                }),
                (t.prototype.parsePropertyMethodFunction = function () {
                  var t = this.createNode(),
                    e = this.context.allowYield;
                  this.context.allowYield = !0;
                  var n = this.parseFormalParameters(),
                    i = this.parsePropertyMethod(n);
                  return (
                    (this.context.allowYield = e),
                    this.finalize(
                      t,
                      new a.FunctionExpression(null, n.params, i, !1)
                    )
                  );
                }),
                (t.prototype.parsePropertyMethodAsyncFunction = function () {
                  var t = this.createNode(),
                    e = this.context.allowYield,
                    n = this.context.await;
                  (this.context.allowYield = !1), (this.context.await = !0);
                  var i = this.parseFormalParameters(),
                    r = this.parsePropertyMethod(i);
                  return (
                    (this.context.allowYield = e),
                    (this.context.await = n),
                    this.finalize(
                      t,
                      new a.AsyncFunctionExpression(null, i.params, r)
                    )
                  );
                }),
                (t.prototype.parseObjectPropertyKey = function () {
                  var t,
                    e = this.createNode(),
                    n = this.nextToken();
                  switch (n.type) {
                    case 8:
                    case 6:
                      this.context.strict &&
                        n.octal &&
                        this.tolerateUnexpectedToken(
                          n,
                          s.Messages.StrictOctalLiteral
                        );
                      var i = this.getTokenRaw(n);
                      t = this.finalize(e, new a.Literal(n.value, i));
                      break;
                    case 3:
                    case 1:
                    case 5:
                    case 4:
                      t = this.finalize(e, new a.Identifier(n.value));
                      break;
                    case 7:
                      '[' === n.value
                        ? ((t = this.isolateCoverGrammar(
                            this.parseAssignmentExpression
                          )),
                          this.expect(']'))
                        : (t = this.throwUnexpectedToken(n));
                      break;
                    default:
                      t = this.throwUnexpectedToken(n);
                  }
                  return t;
                }),
                (t.prototype.isPropertyKey = function (t, e) {
                  return (
                    (t.type === u.Syntax.Identifier && t.name === e) ||
                    (t.type === u.Syntax.Literal && t.value === e)
                  );
                }),
                (t.prototype.parseObjectProperty = function (t) {
                  var e,
                    n = this.createNode(),
                    i = this.lookahead,
                    r = null,
                    o = null,
                    u = !1,
                    c = !1,
                    h = !1,
                    l = !1;
                  if (3 === i.type) {
                    var p = i.value;
                    this.nextToken(),
                      (u = this.match('[')),
                      (r = (l = !(
                        this.hasLineTerminator ||
                        'async' !== p ||
                        this.match(':') ||
                        this.match('(') ||
                        this.match('*') ||
                        this.match(',')
                      ))
                        ? this.parseObjectPropertyKey()
                        : this.finalize(n, new a.Identifier(p)));
                  } else
                    this.match('*')
                      ? this.nextToken()
                      : ((u = this.match('[')),
                        (r = this.parseObjectPropertyKey()));
                  var f = this.qualifiedPropertyName(this.lookahead);
                  if (3 === i.type && !l && 'get' === i.value && f)
                    (e = 'get'),
                      (u = this.match('[')),
                      (r = this.parseObjectPropertyKey()),
                      (this.context.allowYield = !1),
                      (o = this.parseGetterMethod());
                  else if (3 === i.type && !l && 'set' === i.value && f)
                    (e = 'set'),
                      (u = this.match('[')),
                      (r = this.parseObjectPropertyKey()),
                      (o = this.parseSetterMethod());
                  else if (7 === i.type && '*' === i.value && f)
                    (e = 'init'),
                      (u = this.match('[')),
                      (r = this.parseObjectPropertyKey()),
                      (o = this.parseGeneratorMethod()),
                      (c = !0);
                  else if (
                    (r || this.throwUnexpectedToken(this.lookahead),
                    (e = 'init'),
                    this.match(':') && !l)
                  )
                    !u &&
                      this.isPropertyKey(r, '__proto__') &&
                      (t.value &&
                        this.tolerateError(s.Messages.DuplicateProtoProperty),
                      (t.value = !0)),
                      this.nextToken(),
                      (o = this.inheritCoverGrammar(
                        this.parseAssignmentExpression
                      ));
                  else if (this.match('('))
                    (o = l
                      ? this.parsePropertyMethodAsyncFunction()
                      : this.parsePropertyMethodFunction()),
                      (c = !0);
                  else if (3 === i.type) {
                    p = this.finalize(n, new a.Identifier(i.value));
                    if (this.match('=')) {
                      (this.context.firstCoverInitializedNameError =
                        this.lookahead),
                        this.nextToken(),
                        (h = !0);
                      var d = this.isolateCoverGrammar(
                        this.parseAssignmentExpression
                      );
                      o = this.finalize(n, new a.AssignmentPattern(p, d));
                    } else (h = !0), (o = p);
                  } else this.throwUnexpectedToken(this.nextToken());
                  return this.finalize(n, new a.Property(e, r, u, o, c, h));
                }),
                (t.prototype.parseObjectInitializer = function () {
                  var t = this.createNode();
                  this.expect('{');
                  for (var e = [], n = { value: !1 }; !this.match('}'); )
                    e.push(this.parseObjectProperty(n)),
                      this.match('}') || this.expectCommaSeparator();
                  return (
                    this.expect('}'),
                    this.finalize(t, new a.ObjectExpression(e))
                  );
                }),
                (t.prototype.parseTemplateHead = function () {
                  i.assert(
                    this.lookahead.head,
                    'Template literal must start with a template head'
                  );
                  var t = this.createNode(),
                    e = this.nextToken(),
                    n = e.value,
                    r = e.cooked;
                  return this.finalize(
                    t,
                    new a.TemplateElement({ raw: n, cooked: r }, e.tail)
                  );
                }),
                (t.prototype.parseTemplateElement = function () {
                  10 !== this.lookahead.type && this.throwUnexpectedToken();
                  var t = this.createNode(),
                    e = this.nextToken(),
                    n = e.value,
                    i = e.cooked;
                  return this.finalize(
                    t,
                    new a.TemplateElement({ raw: n, cooked: i }, e.tail)
                  );
                }),
                (t.prototype.parseTemplateLiteral = function () {
                  var t = this.createNode(),
                    e = [],
                    n = [],
                    i = this.parseTemplateHead();
                  for (n.push(i); !i.tail; )
                    e.push(this.parseExpression()),
                      (i = this.parseTemplateElement()),
                      n.push(i);
                  return this.finalize(t, new a.TemplateLiteral(n, e));
                }),
                (t.prototype.reinterpretExpressionAsPattern = function (t) {
                  switch (t.type) {
                    case u.Syntax.Identifier:
                    case u.Syntax.MemberExpression:
                    case u.Syntax.RestElement:
                    case u.Syntax.AssignmentPattern:
                      break;
                    case u.Syntax.SpreadElement:
                      (t.type = u.Syntax.RestElement),
                        this.reinterpretExpressionAsPattern(t.argument);
                      break;
                    case u.Syntax.ArrayExpression:
                      t.type = u.Syntax.ArrayPattern;
                      for (var e = 0; e < t.elements.length; e++)
                        null !== t.elements[e] &&
                          this.reinterpretExpressionAsPattern(t.elements[e]);
                      break;
                    case u.Syntax.ObjectExpression:
                      t.type = u.Syntax.ObjectPattern;
                      for (e = 0; e < t.properties.length; e++)
                        this.reinterpretExpressionAsPattern(
                          t.properties[e].value
                        );
                      break;
                    case u.Syntax.AssignmentExpression:
                      (t.type = u.Syntax.AssignmentPattern),
                        delete t.operator,
                        this.reinterpretExpressionAsPattern(t.left);
                  }
                }),
                (t.prototype.parseGroupExpression = function () {
                  var t;
                  if ((this.expect('('), this.match(')')))
                    this.nextToken(),
                      this.match('=>') || this.expect('=>'),
                      (t = {
                        type: 'ArrowParameterPlaceHolder',
                        params: [],
                        async: !1,
                      });
                  else {
                    var e = this.lookahead,
                      n = [];
                    if (this.match('...'))
                      (t = this.parseRestElement(n)),
                        this.expect(')'),
                        this.match('=>') || this.expect('=>'),
                        (t = {
                          type: 'ArrowParameterPlaceHolder',
                          params: [t],
                          async: !1,
                        });
                    else {
                      var i = !1;
                      if (
                        ((this.context.isBindingElement = !0),
                        (t = this.inheritCoverGrammar(
                          this.parseAssignmentExpression
                        )),
                        this.match(','))
                      ) {
                        var r = [];
                        for (
                          this.context.isAssignmentTarget = !1, r.push(t);
                          2 !== this.lookahead.type && this.match(',');

                        ) {
                          if ((this.nextToken(), this.match(')'))) {
                            this.nextToken();
                            for (var s = 0; s < r.length; s++)
                              this.reinterpretExpressionAsPattern(r[s]);
                            (i = !0),
                              (t = {
                                type: 'ArrowParameterPlaceHolder',
                                params: r,
                                async: !1,
                              });
                          } else if (this.match('...')) {
                            this.context.isBindingElement ||
                              this.throwUnexpectedToken(this.lookahead),
                              r.push(this.parseRestElement(n)),
                              this.expect(')'),
                              this.match('=>') || this.expect('=>'),
                              (this.context.isBindingElement = !1);
                            for (s = 0; s < r.length; s++)
                              this.reinterpretExpressionAsPattern(r[s]);
                            (i = !0),
                              (t = {
                                type: 'ArrowParameterPlaceHolder',
                                params: r,
                                async: !1,
                              });
                          } else
                            r.push(
                              this.inheritCoverGrammar(
                                this.parseAssignmentExpression
                              )
                            );
                          if (i) break;
                        }
                        i ||
                          (t = this.finalize(
                            this.startNode(e),
                            new a.SequenceExpression(r)
                          ));
                      }
                      if (!i) {
                        if (
                          (this.expect(')'),
                          this.match('=>') &&
                            (t.type === u.Syntax.Identifier &&
                              'yield' === t.name &&
                              ((i = !0),
                              (t = {
                                type: 'ArrowParameterPlaceHolder',
                                params: [t],
                                async: !1,
                              })),
                            !i))
                        ) {
                          if (
                            (this.context.isBindingElement ||
                              this.throwUnexpectedToken(this.lookahead),
                            t.type === u.Syntax.SequenceExpression)
                          )
                            for (s = 0; s < t.expressions.length; s++)
                              this.reinterpretExpressionAsPattern(
                                t.expressions[s]
                              );
                          else this.reinterpretExpressionAsPattern(t);
                          t = {
                            type: 'ArrowParameterPlaceHolder',
                            params:
                              t.type === u.Syntax.SequenceExpression
                                ? t.expressions
                                : [t],
                            async: !1,
                          };
                        }
                        this.context.isBindingElement = !1;
                      }
                    }
                  }
                  return t;
                }),
                (t.prototype.parseArguments = function () {
                  this.expect('(');
                  var t = [];
                  if (!this.match(')'))
                    for (;;) {
                      var e = this.match('...')
                        ? this.parseSpreadElement()
                        : this.isolateCoverGrammar(
                            this.parseAssignmentExpression
                          );
                      if ((t.push(e), this.match(')'))) break;
                      if ((this.expectCommaSeparator(), this.match(')'))) break;
                    }
                  return this.expect(')'), t;
                }),
                (t.prototype.isIdentifierName = function (t) {
                  return (
                    3 === t.type || 4 === t.type || 1 === t.type || 5 === t.type
                  );
                }),
                (t.prototype.parseIdentifierName = function () {
                  var t = this.createNode(),
                    e = this.nextToken();
                  return (
                    this.isIdentifierName(e) || this.throwUnexpectedToken(e),
                    this.finalize(t, new a.Identifier(e.value))
                  );
                }),
                (t.prototype.parseNewExpression = function () {
                  var t,
                    e = this.createNode(),
                    n = this.parseIdentifierName();
                  if (
                    (i.assert(
                      'new' === n.name,
                      'New expression must start with `new`'
                    ),
                    this.match('.'))
                  )
                    if (
                      (this.nextToken(),
                      3 === this.lookahead.type &&
                        this.context.inFunctionBody &&
                        'target' === this.lookahead.value)
                    ) {
                      var r = this.parseIdentifierName();
                      t = new a.MetaProperty(n, r);
                    } else this.throwUnexpectedToken(this.lookahead);
                  else {
                    var s = this.isolateCoverGrammar(
                        this.parseLeftHandSideExpression
                      ),
                      o = this.match('(') ? this.parseArguments() : [];
                    (t = new a.NewExpression(s, o)),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                  }
                  return this.finalize(e, t);
                }),
                (t.prototype.parseAsyncArgument = function () {
                  var t = this.parseAssignmentExpression();
                  return (
                    (this.context.firstCoverInitializedNameError = null), t
                  );
                }),
                (t.prototype.parseAsyncArguments = function () {
                  this.expect('(');
                  var t = [];
                  if (!this.match(')'))
                    for (;;) {
                      var e = this.match('...')
                        ? this.parseSpreadElement()
                        : this.isolateCoverGrammar(this.parseAsyncArgument);
                      if ((t.push(e), this.match(')'))) break;
                      if ((this.expectCommaSeparator(), this.match(')'))) break;
                    }
                  return this.expect(')'), t;
                }),
                (t.prototype.parseLeftHandSideExpressionAllowCall =
                  function () {
                    var t,
                      e = this.lookahead,
                      n = this.matchContextualKeyword('async'),
                      i = this.context.allowIn;
                    for (
                      this.context.allowIn = !0,
                        this.matchKeyword('super') &&
                        this.context.inFunctionBody
                          ? ((t = this.createNode()),
                            this.nextToken(),
                            (t = this.finalize(t, new a.Super())),
                            this.match('(') ||
                              this.match('.') ||
                              this.match('[') ||
                              this.throwUnexpectedToken(this.lookahead))
                          : (t = this.inheritCoverGrammar(
                              this.matchKeyword('new')
                                ? this.parseNewExpression
                                : this.parsePrimaryExpression
                            ));
                      ;

                    )
                      if (this.match('.')) {
                        (this.context.isBindingElement = !1),
                          (this.context.isAssignmentTarget = !0),
                          this.expect('.');
                        var r = this.parseIdentifierName();
                        t = this.finalize(
                          this.startNode(e),
                          new a.StaticMemberExpression(t, r)
                        );
                      } else if (this.match('(')) {
                        var s = n && e.lineNumber === this.lookahead.lineNumber;
                        (this.context.isBindingElement = !1),
                          (this.context.isAssignmentTarget = !1);
                        var o = s
                          ? this.parseAsyncArguments()
                          : this.parseArguments();
                        if (
                          ((t = this.finalize(
                            this.startNode(e),
                            new a.CallExpression(t, o)
                          )),
                          s && this.match('=>'))
                        ) {
                          for (var u = 0; u < o.length; ++u)
                            this.reinterpretExpressionAsPattern(o[u]);
                          t = {
                            type: 'ArrowParameterPlaceHolder',
                            params: o,
                            async: !0,
                          };
                        }
                      } else if (this.match('[')) {
                        (this.context.isBindingElement = !1),
                          (this.context.isAssignmentTarget = !0),
                          this.expect('[');
                        r = this.isolateCoverGrammar(this.parseExpression);
                        this.expect(']'),
                          (t = this.finalize(
                            this.startNode(e),
                            new a.ComputedMemberExpression(t, r)
                          ));
                      } else {
                        if (10 !== this.lookahead.type || !this.lookahead.head)
                          break;
                        var c = this.parseTemplateLiteral();
                        t = this.finalize(
                          this.startNode(e),
                          new a.TaggedTemplateExpression(t, c)
                        );
                      }
                    return (this.context.allowIn = i), t;
                  }),
                (t.prototype.parseSuper = function () {
                  var t = this.createNode();
                  return (
                    this.expectKeyword('super'),
                    this.match('[') ||
                      this.match('.') ||
                      this.throwUnexpectedToken(this.lookahead),
                    this.finalize(t, new a.Super())
                  );
                }),
                (t.prototype.parseLeftHandSideExpression = function () {
                  i.assert(
                    this.context.allowIn,
                    'callee of new expression always allow in keyword.'
                  );
                  for (
                    var t = this.startNode(this.lookahead),
                      e =
                        this.matchKeyword('super') &&
                        this.context.inFunctionBody
                          ? this.parseSuper()
                          : this.inheritCoverGrammar(
                              this.matchKeyword('new')
                                ? this.parseNewExpression
                                : this.parsePrimaryExpression
                            );
                    ;

                  )
                    if (this.match('[')) {
                      (this.context.isBindingElement = !1),
                        (this.context.isAssignmentTarget = !0),
                        this.expect('[');
                      var n = this.isolateCoverGrammar(this.parseExpression);
                      this.expect(']'),
                        (e = this.finalize(
                          t,
                          new a.ComputedMemberExpression(e, n)
                        ));
                    } else if (this.match('.')) {
                      (this.context.isBindingElement = !1),
                        (this.context.isAssignmentTarget = !0),
                        this.expect('.');
                      n = this.parseIdentifierName();
                      e = this.finalize(t, new a.StaticMemberExpression(e, n));
                    } else {
                      if (10 !== this.lookahead.type || !this.lookahead.head)
                        break;
                      var r = this.parseTemplateLiteral();
                      e = this.finalize(
                        t,
                        new a.TaggedTemplateExpression(e, r)
                      );
                    }
                  return e;
                }),
                (t.prototype.parseUpdateExpression = function () {
                  var t,
                    e = this.lookahead;
                  if (this.match('++') || this.match('--')) {
                    var n = this.startNode(e),
                      i = this.nextToken();
                    (t = this.inheritCoverGrammar(this.parseUnaryExpression)),
                      this.context.strict &&
                        t.type === u.Syntax.Identifier &&
                        this.scanner.isRestrictedWord(t.name) &&
                        this.tolerateError(s.Messages.StrictLHSPrefix),
                      this.context.isAssignmentTarget ||
                        this.tolerateError(s.Messages.InvalidLHSInAssignment);
                    var r = !0;
                    (t = this.finalize(
                      n,
                      new a.UpdateExpression(i.value, t, r)
                    )),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                  } else if (
                    ((t = this.inheritCoverGrammar(
                      this.parseLeftHandSideExpressionAllowCall
                    )),
                    !this.hasLineTerminator &&
                      7 === this.lookahead.type &&
                      (this.match('++') || this.match('--')))
                  ) {
                    this.context.strict &&
                      t.type === u.Syntax.Identifier &&
                      this.scanner.isRestrictedWord(t.name) &&
                      this.tolerateError(s.Messages.StrictLHSPostfix),
                      this.context.isAssignmentTarget ||
                        this.tolerateError(s.Messages.InvalidLHSInAssignment),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                    var o = this.nextToken().value;
                    r = !1;
                    t = this.finalize(
                      this.startNode(e),
                      new a.UpdateExpression(o, t, r)
                    );
                  }
                  return t;
                }),
                (t.prototype.parseAwaitExpression = function () {
                  var t = this.createNode();
                  this.nextToken();
                  var e = this.parseUnaryExpression();
                  return this.finalize(t, new a.AwaitExpression(e));
                }),
                (t.prototype.parseUnaryExpression = function () {
                  var t;
                  if (
                    this.match('+') ||
                    this.match('-') ||
                    this.match('~') ||
                    this.match('!') ||
                    this.matchKeyword('delete') ||
                    this.matchKeyword('void') ||
                    this.matchKeyword('typeof')
                  ) {
                    var e = this.startNode(this.lookahead),
                      n = this.nextToken();
                    (t = this.inheritCoverGrammar(this.parseUnaryExpression)),
                      (t = this.finalize(e, new a.UnaryExpression(n.value, t))),
                      this.context.strict &&
                        'delete' === t.operator &&
                        t.argument.type === u.Syntax.Identifier &&
                        this.tolerateError(s.Messages.StrictDelete),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                  } else
                    t =
                      this.context.await && this.matchContextualKeyword('await')
                        ? this.parseAwaitExpression()
                        : this.parseUpdateExpression();
                  return t;
                }),
                (t.prototype.parseExponentiationExpression = function () {
                  var t = this.lookahead,
                    e = this.inheritCoverGrammar(this.parseUnaryExpression);
                  if (e.type !== u.Syntax.UnaryExpression && this.match('**')) {
                    this.nextToken(),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                    var n = e,
                      i = this.isolateCoverGrammar(
                        this.parseExponentiationExpression
                      );
                    e = this.finalize(
                      this.startNode(t),
                      new a.BinaryExpression('**', n, i)
                    );
                  }
                  return e;
                }),
                (t.prototype.binaryPrecedence = function (t) {
                  var e = t.value;
                  return 7 === t.type
                    ? this.operatorPrecedence[e] || 0
                    : 4 === t.type &&
                      ('instanceof' === e ||
                        (this.context.allowIn && 'in' === e))
                    ? 7
                    : 0;
                }),
                (t.prototype.parseBinaryExpression = function () {
                  var t = this.lookahead,
                    e = this.inheritCoverGrammar(
                      this.parseExponentiationExpression
                    ),
                    n = this.lookahead,
                    i = this.binaryPrecedence(n);
                  if (i > 0) {
                    this.nextToken(),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                    for (
                      var r = [t, this.lookahead],
                        s = e,
                        o = this.isolateCoverGrammar(
                          this.parseExponentiationExpression
                        ),
                        u = [s, n.value, o],
                        c = [i];
                      !((i = this.binaryPrecedence(this.lookahead)) <= 0);

                    ) {
                      for (; u.length > 2 && i <= c[c.length - 1]; ) {
                        o = u.pop();
                        var h = u.pop();
                        c.pop(), (s = u.pop()), r.pop();
                        var l = this.startNode(r[r.length - 1]);
                        u.push(
                          this.finalize(l, new a.BinaryExpression(h, s, o))
                        );
                      }
                      u.push(this.nextToken().value),
                        c.push(i),
                        r.push(this.lookahead),
                        u.push(
                          this.isolateCoverGrammar(
                            this.parseExponentiationExpression
                          )
                        );
                    }
                    var p = u.length - 1;
                    e = u[p];
                    for (var f = r.pop(); p > 1; ) {
                      var d = r.pop(),
                        m = f && f.lineStart;
                      (l = this.startNode(d, m)), (h = u[p - 1]);
                      (e = this.finalize(
                        l,
                        new a.BinaryExpression(h, u[p - 2], e)
                      )),
                        (p -= 2),
                        (f = d);
                    }
                  }
                  return e;
                }),
                (t.prototype.parseConditionalExpression = function () {
                  var t = this.lookahead,
                    e = this.inheritCoverGrammar(this.parseBinaryExpression);
                  if (this.match('?')) {
                    this.nextToken();
                    var n = this.context.allowIn;
                    this.context.allowIn = !0;
                    var i = this.isolateCoverGrammar(
                      this.parseAssignmentExpression
                    );
                    (this.context.allowIn = n), this.expect(':');
                    var r = this.isolateCoverGrammar(
                      this.parseAssignmentExpression
                    );
                    (e = this.finalize(
                      this.startNode(t),
                      new a.ConditionalExpression(e, i, r)
                    )),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                  }
                  return e;
                }),
                (t.prototype.checkPatternParam = function (t, e) {
                  switch (e.type) {
                    case u.Syntax.Identifier:
                      this.validateParam(t, e, e.name);
                      break;
                    case u.Syntax.RestElement:
                      this.checkPatternParam(t, e.argument);
                      break;
                    case u.Syntax.AssignmentPattern:
                      this.checkPatternParam(t, e.left);
                      break;
                    case u.Syntax.ArrayPattern:
                      for (var n = 0; n < e.elements.length; n++)
                        null !== e.elements[n] &&
                          this.checkPatternParam(t, e.elements[n]);
                      break;
                    case u.Syntax.ObjectPattern:
                      for (n = 0; n < e.properties.length; n++)
                        this.checkPatternParam(t, e.properties[n].value);
                  }
                  t.simple = t.simple && e instanceof a.Identifier;
                }),
                (t.prototype.reinterpretAsCoverFormalsList = function (t) {
                  var e,
                    n = [t],
                    i = !1;
                  switch (t.type) {
                    case u.Syntax.Identifier:
                      break;
                    case 'ArrowParameterPlaceHolder':
                      (n = t.params), (i = t.async);
                      break;
                    default:
                      return null;
                  }
                  e = { simple: !0, paramSet: {} };
                  for (var r = 0; r < n.length; ++r) {
                    (a = n[r]).type === u.Syntax.AssignmentPattern
                      ? a.right.type === u.Syntax.YieldExpression &&
                        (a.right.argument &&
                          this.throwUnexpectedToken(this.lookahead),
                        (a.right.type = u.Syntax.Identifier),
                        (a.right.name = 'yield'),
                        delete a.right.argument,
                        delete a.right.delegate)
                      : i &&
                        a.type === u.Syntax.Identifier &&
                        'await' === a.name &&
                        this.throwUnexpectedToken(this.lookahead),
                      this.checkPatternParam(e, a),
                      (n[r] = a);
                  }
                  if (this.context.strict || !this.context.allowYield)
                    for (r = 0; r < n.length; ++r) {
                      var a;
                      (a = n[r]).type === u.Syntax.YieldExpression &&
                        this.throwUnexpectedToken(this.lookahead);
                    }
                  if (e.message === s.Messages.StrictParamDupe) {
                    var o = this.context.strict
                      ? e.stricted
                      : e.firstRestricted;
                    this.throwUnexpectedToken(o, e.message);
                  }
                  return {
                    simple: e.simple,
                    params: n,
                    stricted: e.stricted,
                    firstRestricted: e.firstRestricted,
                    message: e.message,
                  };
                }),
                (t.prototype.parseAssignmentExpression = function () {
                  var t;
                  if (!this.context.allowYield && this.matchKeyword('yield'))
                    t = this.parseYieldExpression();
                  else {
                    var e = this.lookahead,
                      n = e;
                    if (
                      ((t = this.parseConditionalExpression()),
                      3 === n.type &&
                        n.lineNumber === this.lookahead.lineNumber &&
                        'async' === n.value &&
                        (3 === this.lookahead.type ||
                          this.matchKeyword('yield')))
                    ) {
                      var i = this.parsePrimaryExpression();
                      this.reinterpretExpressionAsPattern(i),
                        (t = {
                          type: 'ArrowParameterPlaceHolder',
                          params: [i],
                          async: !0,
                        });
                    }
                    if (
                      'ArrowParameterPlaceHolder' === t.type ||
                      this.match('=>')
                    ) {
                      (this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1);
                      var r = t.async,
                        o = this.reinterpretAsCoverFormalsList(t);
                      if (o) {
                        this.hasLineTerminator &&
                          this.tolerateUnexpectedToken(this.lookahead),
                          (this.context.firstCoverInitializedNameError = null);
                        var c = this.context.strict,
                          h = this.context.allowStrictDirective;
                        this.context.allowStrictDirective = o.simple;
                        var l = this.context.allowYield,
                          p = this.context.await;
                        (this.context.allowYield = !0),
                          (this.context.await = r);
                        var f = this.startNode(e);
                        this.expect('=>');
                        var d = void 0;
                        if (this.match('{')) {
                          var m = this.context.allowIn;
                          (this.context.allowIn = !0),
                            (d = this.parseFunctionSourceElements()),
                            (this.context.allowIn = m);
                        } else
                          d = this.isolateCoverGrammar(
                            this.parseAssignmentExpression
                          );
                        var y = d.type !== u.Syntax.BlockStatement;
                        this.context.strict &&
                          o.firstRestricted &&
                          this.throwUnexpectedToken(
                            o.firstRestricted,
                            o.message
                          ),
                          this.context.strict &&
                            o.stricted &&
                            this.tolerateUnexpectedToken(o.stricted, o.message),
                          (t = r
                            ? this.finalize(
                                f,
                                new a.AsyncArrowFunctionExpression(
                                  o.params,
                                  d,
                                  y
                                )
                              )
                            : this.finalize(
                                f,
                                new a.ArrowFunctionExpression(o.params, d, y)
                              )),
                          (this.context.strict = c),
                          (this.context.allowStrictDirective = h),
                          (this.context.allowYield = l),
                          (this.context.await = p);
                      }
                    } else if (this.matchAssign()) {
                      if (
                        (this.context.isAssignmentTarget ||
                          this.tolerateError(s.Messages.InvalidLHSInAssignment),
                        this.context.strict && t.type === u.Syntax.Identifier)
                      ) {
                        var v = t;
                        this.scanner.isRestrictedWord(v.name) &&
                          this.tolerateUnexpectedToken(
                            n,
                            s.Messages.StrictLHSAssignment
                          ),
                          this.scanner.isStrictModeReservedWord(v.name) &&
                            this.tolerateUnexpectedToken(
                              n,
                              s.Messages.StrictReservedWord
                            );
                      }
                      this.match('=')
                        ? this.reinterpretExpressionAsPattern(t)
                        : ((this.context.isAssignmentTarget = !1),
                          (this.context.isBindingElement = !1));
                      var g = (n = this.nextToken()).value,
                        x = this.isolateCoverGrammar(
                          this.parseAssignmentExpression
                        );
                      (t = this.finalize(
                        this.startNode(e),
                        new a.AssignmentExpression(g, t, x)
                      )),
                        (this.context.firstCoverInitializedNameError = null);
                    }
                  }
                  return t;
                }),
                (t.prototype.parseExpression = function () {
                  var t = this.lookahead,
                    e = this.isolateCoverGrammar(
                      this.parseAssignmentExpression
                    );
                  if (this.match(',')) {
                    var n = [];
                    for (
                      n.push(e);
                      2 !== this.lookahead.type && this.match(',');

                    )
                      this.nextToken(),
                        n.push(
                          this.isolateCoverGrammar(
                            this.parseAssignmentExpression
                          )
                        );
                    e = this.finalize(
                      this.startNode(t),
                      new a.SequenceExpression(n)
                    );
                  }
                  return e;
                }),
                (t.prototype.parseStatementListItem = function () {
                  var t;
                  if (
                    ((this.context.isAssignmentTarget = !0),
                    (this.context.isBindingElement = !0),
                    4 === this.lookahead.type)
                  )
                    switch (this.lookahead.value) {
                      case 'export':
                        this.context.isModule ||
                          this.tolerateUnexpectedToken(
                            this.lookahead,
                            s.Messages.IllegalExportDeclaration
                          ),
                          (t = this.parseExportDeclaration());
                        break;
                      case 'import':
                        this.context.isModule ||
                          this.tolerateUnexpectedToken(
                            this.lookahead,
                            s.Messages.IllegalImportDeclaration
                          ),
                          (t = this.parseImportDeclaration());
                        break;
                      case 'const':
                        t = this.parseLexicalDeclaration({ inFor: !1 });
                        break;
                      case 'function':
                        t = this.parseFunctionDeclaration();
                        break;
                      case 'class':
                        t = this.parseClassDeclaration();
                        break;
                      case 'let':
                        t = this.isLexicalDeclaration()
                          ? this.parseLexicalDeclaration({ inFor: !1 })
                          : this.parseStatement();
                        break;
                      default:
                        t = this.parseStatement();
                    }
                  else t = this.parseStatement();
                  return t;
                }),
                (t.prototype.parseBlock = function () {
                  var t = this.createNode();
                  this.expect('{');
                  for (var e = []; !this.match('}'); )
                    e.push(this.parseStatementListItem());
                  return (
                    this.expect('}'), this.finalize(t, new a.BlockStatement(e))
                  );
                }),
                (t.prototype.parseLexicalBinding = function (t, e) {
                  var n = this.createNode(),
                    i = this.parsePattern([], t);
                  this.context.strict &&
                    i.type === u.Syntax.Identifier &&
                    this.scanner.isRestrictedWord(i.name) &&
                    this.tolerateError(s.Messages.StrictVarName);
                  var r = null;
                  return (
                    'const' === t
                      ? this.matchKeyword('in') ||
                        this.matchContextualKeyword('of') ||
                        (this.match('=')
                          ? (this.nextToken(),
                            (r = this.isolateCoverGrammar(
                              this.parseAssignmentExpression
                            )))
                          : this.throwError(
                              s.Messages.DeclarationMissingInitializer,
                              'const'
                            ))
                      : ((!e.inFor && i.type !== u.Syntax.Identifier) ||
                          this.match('=')) &&
                        (this.expect('='),
                        (r = this.isolateCoverGrammar(
                          this.parseAssignmentExpression
                        ))),
                    this.finalize(n, new a.VariableDeclarator(i, r))
                  );
                }),
                (t.prototype.parseBindingList = function (t, e) {
                  for (
                    var n = [this.parseLexicalBinding(t, e)];
                    this.match(',');

                  )
                    this.nextToken(), n.push(this.parseLexicalBinding(t, e));
                  return n;
                }),
                (t.prototype.isLexicalDeclaration = function () {
                  var t = this.scanner.saveState();
                  this.scanner.scanComments();
                  var e = this.scanner.lex();
                  return (
                    this.scanner.restoreState(t),
                    3 === e.type ||
                      (7 === e.type && '[' === e.value) ||
                      (7 === e.type && '{' === e.value) ||
                      (4 === e.type && 'let' === e.value) ||
                      (4 === e.type && 'yield' === e.value)
                  );
                }),
                (t.prototype.parseLexicalDeclaration = function (t) {
                  var e = this.createNode(),
                    n = this.nextToken().value;
                  i.assert(
                    'let' === n || 'const' === n,
                    'Lexical declaration must be either let or const'
                  );
                  var r = this.parseBindingList(n, t);
                  return (
                    this.consumeSemicolon(),
                    this.finalize(e, new a.VariableDeclaration(r, n))
                  );
                }),
                (t.prototype.parseBindingRestElement = function (t, e) {
                  var n = this.createNode();
                  this.expect('...');
                  var i = this.parsePattern(t, e);
                  return this.finalize(n, new a.RestElement(i));
                }),
                (t.prototype.parseArrayPattern = function (t, e) {
                  var n = this.createNode();
                  this.expect('[');
                  for (var i = []; !this.match(']'); )
                    if (this.match(',')) this.nextToken(), i.push(null);
                    else {
                      if (this.match('...')) {
                        i.push(this.parseBindingRestElement(t, e));
                        break;
                      }
                      i.push(this.parsePatternWithDefault(t, e)),
                        this.match(']') || this.expect(',');
                    }
                  return (
                    this.expect(']'), this.finalize(n, new a.ArrayPattern(i))
                  );
                }),
                (t.prototype.parsePropertyPattern = function (t, e) {
                  var n,
                    i,
                    r = this.createNode(),
                    s = !1,
                    o = !1;
                  if (3 === this.lookahead.type) {
                    var u = this.lookahead;
                    n = this.parseVariableIdentifier();
                    var c = this.finalize(r, new a.Identifier(u.value));
                    if (this.match('=')) {
                      t.push(u), (o = !0), this.nextToken();
                      var h = this.parseAssignmentExpression();
                      i = this.finalize(
                        this.startNode(u),
                        new a.AssignmentPattern(c, h)
                      );
                    } else
                      this.match(':')
                        ? (this.expect(':'),
                          (i = this.parsePatternWithDefault(t, e)))
                        : (t.push(u), (o = !0), (i = c));
                  } else
                    (s = this.match('[')),
                      (n = this.parseObjectPropertyKey()),
                      this.expect(':'),
                      (i = this.parsePatternWithDefault(t, e));
                  return this.finalize(
                    r,
                    new a.Property('init', n, s, i, !1, o)
                  );
                }),
                (t.prototype.parseObjectPattern = function (t, e) {
                  var n = this.createNode(),
                    i = [];
                  for (this.expect('{'); !this.match('}'); )
                    i.push(this.parsePropertyPattern(t, e)),
                      this.match('}') || this.expect(',');
                  return (
                    this.expect('}'), this.finalize(n, new a.ObjectPattern(i))
                  );
                }),
                (t.prototype.parsePattern = function (t, e) {
                  var n;
                  return (
                    this.match('[')
                      ? (n = this.parseArrayPattern(t, e))
                      : this.match('{')
                      ? (n = this.parseObjectPattern(t, e))
                      : (!this.matchKeyword('let') ||
                          ('const' !== e && 'let' !== e) ||
                          this.tolerateUnexpectedToken(
                            this.lookahead,
                            s.Messages.LetInLexicalBinding
                          ),
                        t.push(this.lookahead),
                        (n = this.parseVariableIdentifier(e))),
                    n
                  );
                }),
                (t.prototype.parsePatternWithDefault = function (t, e) {
                  var n = this.lookahead,
                    i = this.parsePattern(t, e);
                  if (this.match('=')) {
                    this.nextToken();
                    var r = this.context.allowYield;
                    this.context.allowYield = !0;
                    var s = this.isolateCoverGrammar(
                      this.parseAssignmentExpression
                    );
                    (this.context.allowYield = r),
                      (i = this.finalize(
                        this.startNode(n),
                        new a.AssignmentPattern(i, s)
                      ));
                  }
                  return i;
                }),
                (t.prototype.parseVariableIdentifier = function (t) {
                  var e = this.createNode(),
                    n = this.nextToken();
                  return (
                    4 === n.type && 'yield' === n.value
                      ? this.context.strict
                        ? this.tolerateUnexpectedToken(
                            n,
                            s.Messages.StrictReservedWord
                          )
                        : this.context.allowYield ||
                          this.throwUnexpectedToken(n)
                      : 3 !== n.type
                      ? this.context.strict &&
                        4 === n.type &&
                        this.scanner.isStrictModeReservedWord(n.value)
                        ? this.tolerateUnexpectedToken(
                            n,
                            s.Messages.StrictReservedWord
                          )
                        : (this.context.strict ||
                            'let' !== n.value ||
                            'var' !== t) &&
                          this.throwUnexpectedToken(n)
                      : (this.context.isModule || this.context.await) &&
                        3 === n.type &&
                        'await' === n.value &&
                        this.tolerateUnexpectedToken(n),
                    this.finalize(e, new a.Identifier(n.value))
                  );
                }),
                (t.prototype.parseVariableDeclaration = function (t) {
                  var e = this.createNode(),
                    n = this.parsePattern([], 'var');
                  this.context.strict &&
                    n.type === u.Syntax.Identifier &&
                    this.scanner.isRestrictedWord(n.name) &&
                    this.tolerateError(s.Messages.StrictVarName);
                  var i = null;
                  return (
                    this.match('=')
                      ? (this.nextToken(),
                        (i = this.isolateCoverGrammar(
                          this.parseAssignmentExpression
                        )))
                      : n.type === u.Syntax.Identifier ||
                        t.inFor ||
                        this.expect('='),
                    this.finalize(e, new a.VariableDeclarator(n, i))
                  );
                }),
                (t.prototype.parseVariableDeclarationList = function (t) {
                  var e = { inFor: t.inFor },
                    n = [];
                  for (
                    n.push(this.parseVariableDeclaration(e));
                    this.match(',');

                  )
                    this.nextToken(), n.push(this.parseVariableDeclaration(e));
                  return n;
                }),
                (t.prototype.parseVariableStatement = function () {
                  var t = this.createNode();
                  this.expectKeyword('var');
                  var e = this.parseVariableDeclarationList({ inFor: !1 });
                  return (
                    this.consumeSemicolon(),
                    this.finalize(t, new a.VariableDeclaration(e, 'var'))
                  );
                }),
                (t.prototype.parseEmptyStatement = function () {
                  var t = this.createNode();
                  return (
                    this.expect(';'), this.finalize(t, new a.EmptyStatement())
                  );
                }),
                (t.prototype.parseExpressionStatement = function () {
                  var t = this.createNode(),
                    e = this.parseExpression();
                  return (
                    this.consumeSemicolon(),
                    this.finalize(t, new a.ExpressionStatement(e))
                  );
                }),
                (t.prototype.parseIfClause = function () {
                  return (
                    this.context.strict &&
                      this.matchKeyword('function') &&
                      this.tolerateError(s.Messages.StrictFunction),
                    this.parseStatement()
                  );
                }),
                (t.prototype.parseIfStatement = function () {
                  var t,
                    e = this.createNode(),
                    n = null;
                  this.expectKeyword('if'), this.expect('(');
                  var i = this.parseExpression();
                  return (
                    !this.match(')') && this.config.tolerant
                      ? (this.tolerateUnexpectedToken(this.nextToken()),
                        (t = this.finalize(
                          this.createNode(),
                          new a.EmptyStatement()
                        )))
                      : (this.expect(')'),
                        (t = this.parseIfClause()),
                        this.matchKeyword('else') &&
                          (this.nextToken(), (n = this.parseIfClause()))),
                    this.finalize(e, new a.IfStatement(i, t, n))
                  );
                }),
                (t.prototype.parseDoWhileStatement = function () {
                  var t = this.createNode();
                  this.expectKeyword('do');
                  var e = this.context.inIteration;
                  this.context.inIteration = !0;
                  var n = this.parseStatement();
                  (this.context.inIteration = e),
                    this.expectKeyword('while'),
                    this.expect('(');
                  var i = this.parseExpression();
                  return (
                    !this.match(')') && this.config.tolerant
                      ? this.tolerateUnexpectedToken(this.nextToken())
                      : (this.expect(')'), this.match(';') && this.nextToken()),
                    this.finalize(t, new a.DoWhileStatement(n, i))
                  );
                }),
                (t.prototype.parseWhileStatement = function () {
                  var t,
                    e = this.createNode();
                  this.expectKeyword('while'), this.expect('(');
                  var n = this.parseExpression();
                  if (!this.match(')') && this.config.tolerant)
                    this.tolerateUnexpectedToken(this.nextToken()),
                      (t = this.finalize(
                        this.createNode(),
                        new a.EmptyStatement()
                      ));
                  else {
                    this.expect(')');
                    var i = this.context.inIteration;
                    (this.context.inIteration = !0),
                      (t = this.parseStatement()),
                      (this.context.inIteration = i);
                  }
                  return this.finalize(e, new a.WhileStatement(n, t));
                }),
                (t.prototype.parseForStatement = function () {
                  var t,
                    e,
                    n,
                    i = null,
                    r = null,
                    o = null,
                    c = !0,
                    h = this.createNode();
                  if (
                    (this.expectKeyword('for'),
                    this.expect('('),
                    this.match(';'))
                  )
                    this.nextToken();
                  else if (this.matchKeyword('var')) {
                    (i = this.createNode()), this.nextToken();
                    var l = this.context.allowIn;
                    this.context.allowIn = !1;
                    var p = this.parseVariableDeclarationList({ inFor: !0 });
                    if (
                      ((this.context.allowIn = l),
                      1 === p.length && this.matchKeyword('in'))
                    ) {
                      var f = p[0];
                      f.init &&
                        (f.id.type === u.Syntax.ArrayPattern ||
                          f.id.type === u.Syntax.ObjectPattern ||
                          this.context.strict) &&
                        this.tolerateError(
                          s.Messages.ForInOfLoopInitializer,
                          'for-in'
                        ),
                        (i = this.finalize(
                          i,
                          new a.VariableDeclaration(p, 'var')
                        )),
                        this.nextToken(),
                        (t = i),
                        (e = this.parseExpression()),
                        (i = null);
                    } else
                      1 === p.length &&
                      null === p[0].init &&
                      this.matchContextualKeyword('of')
                        ? ((i = this.finalize(
                            i,
                            new a.VariableDeclaration(p, 'var')
                          )),
                          this.nextToken(),
                          (t = i),
                          (e = this.parseAssignmentExpression()),
                          (i = null),
                          (c = !1))
                        : ((i = this.finalize(
                            i,
                            new a.VariableDeclaration(p, 'var')
                          )),
                          this.expect(';'));
                  } else if (
                    this.matchKeyword('const') ||
                    this.matchKeyword('let')
                  ) {
                    i = this.createNode();
                    var d = this.nextToken().value;
                    if (this.context.strict || 'in' !== this.lookahead.value) {
                      l = this.context.allowIn;
                      this.context.allowIn = !1;
                      p = this.parseBindingList(d, { inFor: !0 });
                      (this.context.allowIn = l),
                        1 === p.length &&
                        null === p[0].init &&
                        this.matchKeyword('in')
                          ? ((i = this.finalize(
                              i,
                              new a.VariableDeclaration(p, d)
                            )),
                            this.nextToken(),
                            (t = i),
                            (e = this.parseExpression()),
                            (i = null))
                          : 1 === p.length &&
                            null === p[0].init &&
                            this.matchContextualKeyword('of')
                          ? ((i = this.finalize(
                              i,
                              new a.VariableDeclaration(p, d)
                            )),
                            this.nextToken(),
                            (t = i),
                            (e = this.parseAssignmentExpression()),
                            (i = null),
                            (c = !1))
                          : (this.consumeSemicolon(),
                            (i = this.finalize(
                              i,
                              new a.VariableDeclaration(p, d)
                            )));
                    } else
                      (i = this.finalize(i, new a.Identifier(d))),
                        this.nextToken(),
                        (t = i),
                        (e = this.parseExpression()),
                        (i = null);
                  } else {
                    var m = this.lookahead;
                    l = this.context.allowIn;
                    if (
                      ((this.context.allowIn = !1),
                      (i = this.inheritCoverGrammar(
                        this.parseAssignmentExpression
                      )),
                      (this.context.allowIn = l),
                      this.matchKeyword('in'))
                    )
                      (this.context.isAssignmentTarget &&
                        i.type !== u.Syntax.AssignmentExpression) ||
                        this.tolerateError(s.Messages.InvalidLHSInForIn),
                        this.nextToken(),
                        this.reinterpretExpressionAsPattern(i),
                        (t = i),
                        (e = this.parseExpression()),
                        (i = null);
                    else if (this.matchContextualKeyword('of'))
                      (this.context.isAssignmentTarget &&
                        i.type !== u.Syntax.AssignmentExpression) ||
                        this.tolerateError(s.Messages.InvalidLHSInForLoop),
                        this.nextToken(),
                        this.reinterpretExpressionAsPattern(i),
                        (t = i),
                        (e = this.parseAssignmentExpression()),
                        (i = null),
                        (c = !1);
                    else {
                      if (this.match(',')) {
                        for (var y = [i]; this.match(','); )
                          this.nextToken(),
                            y.push(
                              this.isolateCoverGrammar(
                                this.parseAssignmentExpression
                              )
                            );
                        i = this.finalize(
                          this.startNode(m),
                          new a.SequenceExpression(y)
                        );
                      }
                      this.expect(';');
                    }
                  }
                  if (
                    (void 0 === t &&
                      (this.match(';') || (r = this.parseExpression()),
                      this.expect(';'),
                      this.match(')') || (o = this.parseExpression())),
                    !this.match(')') && this.config.tolerant)
                  )
                    this.tolerateUnexpectedToken(this.nextToken()),
                      (n = this.finalize(
                        this.createNode(),
                        new a.EmptyStatement()
                      ));
                  else {
                    this.expect(')');
                    var v = this.context.inIteration;
                    (this.context.inIteration = !0),
                      (n = this.isolateCoverGrammar(this.parseStatement)),
                      (this.context.inIteration = v);
                  }
                  return void 0 === t
                    ? this.finalize(h, new a.ForStatement(i, r, o, n))
                    : c
                    ? this.finalize(h, new a.ForInStatement(t, e, n))
                    : this.finalize(h, new a.ForOfStatement(t, e, n));
                }),
                (t.prototype.parseContinueStatement = function () {
                  var t = this.createNode();
                  this.expectKeyword('continue');
                  var e = null;
                  if (3 === this.lookahead.type && !this.hasLineTerminator) {
                    var n = this.parseVariableIdentifier();
                    e = n;
                    var i = '$' + n.name;
                    Object.prototype.hasOwnProperty.call(
                      this.context.labelSet,
                      i
                    ) || this.throwError(s.Messages.UnknownLabel, n.name);
                  }
                  return (
                    this.consumeSemicolon(),
                    null !== e ||
                      this.context.inIteration ||
                      this.throwError(s.Messages.IllegalContinue),
                    this.finalize(t, new a.ContinueStatement(e))
                  );
                }),
                (t.prototype.parseBreakStatement = function () {
                  var t = this.createNode();
                  this.expectKeyword('break');
                  var e = null;
                  if (3 === this.lookahead.type && !this.hasLineTerminator) {
                    var n = this.parseVariableIdentifier(),
                      i = '$' + n.name;
                    Object.prototype.hasOwnProperty.call(
                      this.context.labelSet,
                      i
                    ) || this.throwError(s.Messages.UnknownLabel, n.name),
                      (e = n);
                  }
                  return (
                    this.consumeSemicolon(),
                    null !== e ||
                      this.context.inIteration ||
                      this.context.inSwitch ||
                      this.throwError(s.Messages.IllegalBreak),
                    this.finalize(t, new a.BreakStatement(e))
                  );
                }),
                (t.prototype.parseReturnStatement = function () {
                  this.context.inFunctionBody ||
                    this.tolerateError(s.Messages.IllegalReturn);
                  var t = this.createNode();
                  this.expectKeyword('return');
                  var e =
                    (!this.match(';') &&
                      !this.match('}') &&
                      !this.hasLineTerminator &&
                      2 !== this.lookahead.type) ||
                    8 === this.lookahead.type ||
                    10 === this.lookahead.type
                      ? this.parseExpression()
                      : null;
                  return (
                    this.consumeSemicolon(),
                    this.finalize(t, new a.ReturnStatement(e))
                  );
                }),
                (t.prototype.parseWithStatement = function () {
                  this.context.strict &&
                    this.tolerateError(s.Messages.StrictModeWith);
                  var t,
                    e = this.createNode();
                  this.expectKeyword('with'), this.expect('(');
                  var n = this.parseExpression();
                  return (
                    !this.match(')') && this.config.tolerant
                      ? (this.tolerateUnexpectedToken(this.nextToken()),
                        (t = this.finalize(
                          this.createNode(),
                          new a.EmptyStatement()
                        )))
                      : (this.expect(')'), (t = this.parseStatement())),
                    this.finalize(e, new a.WithStatement(n, t))
                  );
                }),
                (t.prototype.parseSwitchCase = function () {
                  var t,
                    e = this.createNode();
                  this.matchKeyword('default')
                    ? (this.nextToken(), (t = null))
                    : (this.expectKeyword('case'),
                      (t = this.parseExpression())),
                    this.expect(':');
                  for (
                    var n = [];
                    !(
                      this.match('}') ||
                      this.matchKeyword('default') ||
                      this.matchKeyword('case')
                    );

                  )
                    n.push(this.parseStatementListItem());
                  return this.finalize(e, new a.SwitchCase(t, n));
                }),
                (t.prototype.parseSwitchStatement = function () {
                  var t = this.createNode();
                  this.expectKeyword('switch'), this.expect('(');
                  var e = this.parseExpression();
                  this.expect(')');
                  var n = this.context.inSwitch;
                  this.context.inSwitch = !0;
                  var i = [],
                    r = !1;
                  for (this.expect('{'); !this.match('}'); ) {
                    var o = this.parseSwitchCase();
                    null === o.test &&
                      (r &&
                        this.throwError(s.Messages.MultipleDefaultsInSwitch),
                      (r = !0)),
                      i.push(o);
                  }
                  return (
                    this.expect('}'),
                    (this.context.inSwitch = n),
                    this.finalize(t, new a.SwitchStatement(e, i))
                  );
                }),
                (t.prototype.parseLabelledStatement = function () {
                  var t,
                    e = this.createNode(),
                    n = this.parseExpression();
                  if (n.type === u.Syntax.Identifier && this.match(':')) {
                    this.nextToken();
                    var i = n,
                      r = '$' + i.name;
                    Object.prototype.hasOwnProperty.call(
                      this.context.labelSet,
                      r
                    ) &&
                      this.throwError(
                        s.Messages.Redeclaration,
                        'Label',
                        i.name
                      ),
                      (this.context.labelSet[r] = !0);
                    var o = void 0;
                    if (this.matchKeyword('class'))
                      this.tolerateUnexpectedToken(this.lookahead),
                        (o = this.parseClassDeclaration());
                    else if (this.matchKeyword('function')) {
                      var c = this.lookahead,
                        h = this.parseFunctionDeclaration();
                      this.context.strict
                        ? this.tolerateUnexpectedToken(
                            c,
                            s.Messages.StrictFunction
                          )
                        : h.generator &&
                          this.tolerateUnexpectedToken(
                            c,
                            s.Messages.GeneratorInLegacyContext
                          ),
                        (o = h);
                    } else o = this.parseStatement();
                    delete this.context.labelSet[r],
                      (t = new a.LabeledStatement(i, o));
                  } else
                    this.consumeSemicolon(), (t = new a.ExpressionStatement(n));
                  return this.finalize(e, t);
                }),
                (t.prototype.parseThrowStatement = function () {
                  var t = this.createNode();
                  this.expectKeyword('throw'),
                    this.hasLineTerminator &&
                      this.throwError(s.Messages.NewlineAfterThrow);
                  var e = this.parseExpression();
                  return (
                    this.consumeSemicolon(),
                    this.finalize(t, new a.ThrowStatement(e))
                  );
                }),
                (t.prototype.parseCatchClause = function () {
                  var t = this.createNode();
                  this.expectKeyword('catch'),
                    this.expect('('),
                    this.match(')') &&
                      this.throwUnexpectedToken(this.lookahead);
                  for (
                    var e = [], n = this.parsePattern(e), i = {}, r = 0;
                    r < e.length;
                    r++
                  ) {
                    var o = '$' + e[r].value;
                    Object.prototype.hasOwnProperty.call(i, o) &&
                      this.tolerateError(
                        s.Messages.DuplicateBinding,
                        e[r].value
                      ),
                      (i[o] = !0);
                  }
                  this.context.strict &&
                    n.type === u.Syntax.Identifier &&
                    this.scanner.isRestrictedWord(n.name) &&
                    this.tolerateError(s.Messages.StrictCatchVariable),
                    this.expect(')');
                  var c = this.parseBlock();
                  return this.finalize(t, new a.CatchClause(n, c));
                }),
                (t.prototype.parseFinallyClause = function () {
                  return this.expectKeyword('finally'), this.parseBlock();
                }),
                (t.prototype.parseTryStatement = function () {
                  var t = this.createNode();
                  this.expectKeyword('try');
                  var e = this.parseBlock(),
                    n = this.matchKeyword('catch')
                      ? this.parseCatchClause()
                      : null,
                    i = this.matchKeyword('finally')
                      ? this.parseFinallyClause()
                      : null;
                  return (
                    n || i || this.throwError(s.Messages.NoCatchOrFinally),
                    this.finalize(t, new a.TryStatement(e, n, i))
                  );
                }),
                (t.prototype.parseDebuggerStatement = function () {
                  var t = this.createNode();
                  return (
                    this.expectKeyword('debugger'),
                    this.consumeSemicolon(),
                    this.finalize(t, new a.DebuggerStatement())
                  );
                }),
                (t.prototype.parseStatement = function () {
                  var t;
                  switch (this.lookahead.type) {
                    case 1:
                    case 5:
                    case 6:
                    case 8:
                    case 10:
                    case 9:
                      t = this.parseExpressionStatement();
                      break;
                    case 7:
                      var e = this.lookahead.value;
                      t =
                        '{' === e
                          ? this.parseBlock()
                          : '(' === e
                          ? this.parseExpressionStatement()
                          : ';' === e
                          ? this.parseEmptyStatement()
                          : this.parseExpressionStatement();
                      break;
                    case 3:
                      t = this.matchAsyncFunction()
                        ? this.parseFunctionDeclaration()
                        : this.parseLabelledStatement();
                      break;
                    case 4:
                      switch (this.lookahead.value) {
                        case 'break':
                          t = this.parseBreakStatement();
                          break;
                        case 'continue':
                          t = this.parseContinueStatement();
                          break;
                        case 'debugger':
                          t = this.parseDebuggerStatement();
                          break;
                        case 'do':
                          t = this.parseDoWhileStatement();
                          break;
                        case 'for':
                          t = this.parseForStatement();
                          break;
                        case 'function':
                          t = this.parseFunctionDeclaration();
                          break;
                        case 'if':
                          t = this.parseIfStatement();
                          break;
                        case 'return':
                          t = this.parseReturnStatement();
                          break;
                        case 'switch':
                          t = this.parseSwitchStatement();
                          break;
                        case 'throw':
                          t = this.parseThrowStatement();
                          break;
                        case 'try':
                          t = this.parseTryStatement();
                          break;
                        case 'var':
                          t = this.parseVariableStatement();
                          break;
                        case 'while':
                          t = this.parseWhileStatement();
                          break;
                        case 'with':
                          t = this.parseWithStatement();
                          break;
                        default:
                          t = this.parseExpressionStatement();
                      }
                      break;
                    default:
                      t = this.throwUnexpectedToken(this.lookahead);
                  }
                  return t;
                }),
                (t.prototype.parseFunctionSourceElements = function () {
                  var t = this.createNode();
                  this.expect('{');
                  var e = this.parseDirectivePrologues(),
                    n = this.context.labelSet,
                    i = this.context.inIteration,
                    r = this.context.inSwitch,
                    s = this.context.inFunctionBody;
                  for (
                    this.context.labelSet = {},
                      this.context.inIteration = !1,
                      this.context.inSwitch = !1,
                      this.context.inFunctionBody = !0;
                    2 !== this.lookahead.type && !this.match('}');

                  )
                    e.push(this.parseStatementListItem());
                  return (
                    this.expect('}'),
                    (this.context.labelSet = n),
                    (this.context.inIteration = i),
                    (this.context.inSwitch = r),
                    (this.context.inFunctionBody = s),
                    this.finalize(t, new a.BlockStatement(e))
                  );
                }),
                (t.prototype.validateParam = function (t, e, n) {
                  var i = '$' + n;
                  this.context.strict
                    ? (this.scanner.isRestrictedWord(n) &&
                        ((t.stricted = e),
                        (t.message = s.Messages.StrictParamName)),
                      Object.prototype.hasOwnProperty.call(t.paramSet, i) &&
                        ((t.stricted = e),
                        (t.message = s.Messages.StrictParamDupe)))
                    : t.firstRestricted ||
                      (this.scanner.isRestrictedWord(n)
                        ? ((t.firstRestricted = e),
                          (t.message = s.Messages.StrictParamName))
                        : this.scanner.isStrictModeReservedWord(n)
                        ? ((t.firstRestricted = e),
                          (t.message = s.Messages.StrictReservedWord))
                        : Object.prototype.hasOwnProperty.call(t.paramSet, i) &&
                          ((t.stricted = e),
                          (t.message = s.Messages.StrictParamDupe))),
                    'function' == typeof Object.defineProperty
                      ? Object.defineProperty(t.paramSet, i, {
                          value: !0,
                          enumerable: !0,
                          writable: !0,
                          configurable: !0,
                        })
                      : (t.paramSet[i] = !0);
                }),
                (t.prototype.parseRestElement = function (t) {
                  var e = this.createNode();
                  this.expect('...');
                  var n = this.parsePattern(t);
                  return (
                    this.match('=') &&
                      this.throwError(s.Messages.DefaultRestParameter),
                    this.match(')') ||
                      this.throwError(s.Messages.ParameterAfterRestParameter),
                    this.finalize(e, new a.RestElement(n))
                  );
                }),
                (t.prototype.parseFormalParameter = function (t) {
                  for (
                    var e = [],
                      n = this.match('...')
                        ? this.parseRestElement(e)
                        : this.parsePatternWithDefault(e),
                      i = 0;
                    i < e.length;
                    i++
                  )
                    this.validateParam(t, e[i], e[i].value);
                  (t.simple = t.simple && n instanceof a.Identifier),
                    t.params.push(n);
                }),
                (t.prototype.parseFormalParameters = function (t) {
                  var e;
                  if (
                    ((e = { simple: !0, params: [], firstRestricted: t }),
                    this.expect('('),
                    !this.match(')'))
                  )
                    for (
                      e.paramSet = {};
                      2 !== this.lookahead.type &&
                      (this.parseFormalParameter(e), !this.match(')')) &&
                      (this.expect(','), !this.match(')'));

                    );
                  return (
                    this.expect(')'),
                    {
                      simple: e.simple,
                      params: e.params,
                      stricted: e.stricted,
                      firstRestricted: e.firstRestricted,
                      message: e.message,
                    }
                  );
                }),
                (t.prototype.matchAsyncFunction = function () {
                  var t = this.matchContextualKeyword('async');
                  if (t) {
                    var e = this.scanner.saveState();
                    this.scanner.scanComments();
                    var n = this.scanner.lex();
                    this.scanner.restoreState(e),
                      (t =
                        e.lineNumber === n.lineNumber &&
                        4 === n.type &&
                        'function' === n.value);
                  }
                  return t;
                }),
                (t.prototype.parseFunctionDeclaration = function (t) {
                  var e = this.createNode(),
                    n = this.matchContextualKeyword('async');
                  n && this.nextToken(), this.expectKeyword('function');
                  var i,
                    r = !n && this.match('*');
                  r && this.nextToken();
                  var o = null,
                    u = null;
                  if (!t || !this.match('(')) {
                    var c = this.lookahead;
                    (o = this.parseVariableIdentifier()),
                      this.context.strict
                        ? this.scanner.isRestrictedWord(c.value) &&
                          this.tolerateUnexpectedToken(
                            c,
                            s.Messages.StrictFunctionName
                          )
                        : this.scanner.isRestrictedWord(c.value)
                        ? ((u = c), (i = s.Messages.StrictFunctionName))
                        : this.scanner.isStrictModeReservedWord(c.value) &&
                          ((u = c), (i = s.Messages.StrictReservedWord));
                  }
                  var h = this.context.await,
                    l = this.context.allowYield;
                  (this.context.await = n), (this.context.allowYield = !r);
                  var p = this.parseFormalParameters(u),
                    f = p.params,
                    d = p.stricted;
                  (u = p.firstRestricted), p.message && (i = p.message);
                  var m = this.context.strict,
                    y = this.context.allowStrictDirective;
                  this.context.allowStrictDirective = p.simple;
                  var v = this.parseFunctionSourceElements();
                  return (
                    this.context.strict && u && this.throwUnexpectedToken(u, i),
                    this.context.strict &&
                      d &&
                      this.tolerateUnexpectedToken(d, i),
                    (this.context.strict = m),
                    (this.context.allowStrictDirective = y),
                    (this.context.await = h),
                    (this.context.allowYield = l),
                    n
                      ? this.finalize(
                          e,
                          new a.AsyncFunctionDeclaration(o, f, v)
                        )
                      : this.finalize(e, new a.FunctionDeclaration(o, f, v, r))
                  );
                }),
                (t.prototype.parseFunctionExpression = function () {
                  var t = this.createNode(),
                    e = this.matchContextualKeyword('async');
                  e && this.nextToken(), this.expectKeyword('function');
                  var n,
                    i = !e && this.match('*');
                  i && this.nextToken();
                  var r,
                    o = null,
                    u = this.context.await,
                    c = this.context.allowYield;
                  if (
                    ((this.context.await = e),
                    (this.context.allowYield = !i),
                    !this.match('('))
                  ) {
                    var h = this.lookahead;
                    (o =
                      this.context.strict || i || !this.matchKeyword('yield')
                        ? this.parseVariableIdentifier()
                        : this.parseIdentifierName()),
                      this.context.strict
                        ? this.scanner.isRestrictedWord(h.value) &&
                          this.tolerateUnexpectedToken(
                            h,
                            s.Messages.StrictFunctionName
                          )
                        : this.scanner.isRestrictedWord(h.value)
                        ? ((r = h), (n = s.Messages.StrictFunctionName))
                        : this.scanner.isStrictModeReservedWord(h.value) &&
                          ((r = h), (n = s.Messages.StrictReservedWord));
                  }
                  var l = this.parseFormalParameters(r),
                    p = l.params,
                    f = l.stricted;
                  (r = l.firstRestricted), l.message && (n = l.message);
                  var d = this.context.strict,
                    m = this.context.allowStrictDirective;
                  this.context.allowStrictDirective = l.simple;
                  var y = this.parseFunctionSourceElements();
                  return (
                    this.context.strict && r && this.throwUnexpectedToken(r, n),
                    this.context.strict &&
                      f &&
                      this.tolerateUnexpectedToken(f, n),
                    (this.context.strict = d),
                    (this.context.allowStrictDirective = m),
                    (this.context.await = u),
                    (this.context.allowYield = c),
                    e
                      ? this.finalize(t, new a.AsyncFunctionExpression(o, p, y))
                      : this.finalize(t, new a.FunctionExpression(o, p, y, i))
                  );
                }),
                (t.prototype.parseDirective = function () {
                  var t = this.lookahead,
                    e = this.createNode(),
                    n = this.parseExpression(),
                    i =
                      n.type === u.Syntax.Literal
                        ? this.getTokenRaw(t).slice(1, -1)
                        : null;
                  return (
                    this.consumeSemicolon(),
                    this.finalize(
                      e,
                      i ? new a.Directive(n, i) : new a.ExpressionStatement(n)
                    )
                  );
                }),
                (t.prototype.parseDirectivePrologues = function () {
                  for (var t = null, e = []; ; ) {
                    var n = this.lookahead;
                    if (8 !== n.type) break;
                    var i = this.parseDirective();
                    e.push(i);
                    var r = i.directive;
                    if ('string' != typeof r) break;
                    'use strict' === r
                      ? ((this.context.strict = !0),
                        t &&
                          this.tolerateUnexpectedToken(
                            t,
                            s.Messages.StrictOctalLiteral
                          ),
                        this.context.allowStrictDirective ||
                          this.tolerateUnexpectedToken(
                            n,
                            s.Messages.IllegalLanguageModeDirective
                          ))
                      : !t && n.octal && (t = n);
                  }
                  return e;
                }),
                (t.prototype.qualifiedPropertyName = function (t) {
                  switch (t.type) {
                    case 3:
                    case 8:
                    case 1:
                    case 5:
                    case 6:
                    case 4:
                      return !0;
                    case 7:
                      return '[' === t.value;
                  }
                  return !1;
                }),
                (t.prototype.parseGetterMethod = function () {
                  var t = this.createNode(),
                    e = this.context.allowYield;
                  this.context.allowYield = !0;
                  var n = this.parseFormalParameters();
                  n.params.length > 0 &&
                    this.tolerateError(s.Messages.BadGetterArity);
                  var i = this.parsePropertyMethod(n);
                  return (
                    (this.context.allowYield = e),
                    this.finalize(
                      t,
                      new a.FunctionExpression(null, n.params, i, !1)
                    )
                  );
                }),
                (t.prototype.parseSetterMethod = function () {
                  var t = this.createNode(),
                    e = this.context.allowYield;
                  this.context.allowYield = !0;
                  var n = this.parseFormalParameters();
                  1 !== n.params.length
                    ? this.tolerateError(s.Messages.BadSetterArity)
                    : n.params[0] instanceof a.RestElement &&
                      this.tolerateError(s.Messages.BadSetterRestParameter);
                  var i = this.parsePropertyMethod(n);
                  return (
                    (this.context.allowYield = e),
                    this.finalize(
                      t,
                      new a.FunctionExpression(null, n.params, i, !1)
                    )
                  );
                }),
                (t.prototype.parseGeneratorMethod = function () {
                  var t = this.createNode(),
                    e = this.context.allowYield;
                  this.context.allowYield = !0;
                  var n = this.parseFormalParameters();
                  this.context.allowYield = !1;
                  var i = this.parsePropertyMethod(n);
                  return (
                    (this.context.allowYield = e),
                    this.finalize(
                      t,
                      new a.FunctionExpression(null, n.params, i, !0)
                    )
                  );
                }),
                (t.prototype.isStartOfExpression = function () {
                  var t = !0,
                    e = this.lookahead.value;
                  switch (this.lookahead.type) {
                    case 7:
                      t =
                        '[' === e ||
                        '(' === e ||
                        '{' === e ||
                        '+' === e ||
                        '-' === e ||
                        '!' === e ||
                        '~' === e ||
                        '++' === e ||
                        '--' === e ||
                        '/' === e ||
                        '/=' === e;
                      break;
                    case 4:
                      t =
                        'class' === e ||
                        'delete' === e ||
                        'function' === e ||
                        'let' === e ||
                        'new' === e ||
                        'super' === e ||
                        'this' === e ||
                        'typeof' === e ||
                        'void' === e ||
                        'yield' === e;
                  }
                  return t;
                }),
                (t.prototype.parseYieldExpression = function () {
                  var t = this.createNode();
                  this.expectKeyword('yield');
                  var e = null,
                    n = !1;
                  if (!this.hasLineTerminator) {
                    var i = this.context.allowYield;
                    (this.context.allowYield = !1),
                      (n = this.match('*'))
                        ? (this.nextToken(),
                          (e = this.parseAssignmentExpression()))
                        : this.isStartOfExpression() &&
                          (e = this.parseAssignmentExpression()),
                      (this.context.allowYield = i);
                  }
                  return this.finalize(t, new a.YieldExpression(e, n));
                }),
                (t.prototype.parseClassElement = function (t) {
                  var e = this.lookahead,
                    n = this.createNode(),
                    i = '',
                    r = null,
                    o = null,
                    u = !1,
                    c = !1,
                    h = !1,
                    l = !1;
                  if (this.match('*')) this.nextToken();
                  else if (
                    ((u = this.match('[')),
                    'static' === (r = this.parseObjectPropertyKey()).name &&
                      (this.qualifiedPropertyName(this.lookahead) ||
                        this.match('*')) &&
                      ((e = this.lookahead),
                      (h = !0),
                      (u = this.match('[')),
                      this.match('*')
                        ? this.nextToken()
                        : (r = this.parseObjectPropertyKey())),
                    3 === e.type &&
                      !this.hasLineTerminator &&
                      'async' === e.value)
                  ) {
                    var p = this.lookahead.value;
                    ':' !== p &&
                      '(' !== p &&
                      '*' !== p &&
                      ((l = !0),
                      (e = this.lookahead),
                      (r = this.parseObjectPropertyKey()),
                      3 === e.type &&
                        'constructor' === e.value &&
                        this.tolerateUnexpectedToken(
                          e,
                          s.Messages.ConstructorIsAsync
                        ));
                  }
                  var f = this.qualifiedPropertyName(this.lookahead);
                  return (
                    3 === e.type
                      ? 'get' === e.value && f
                        ? ((i = 'get'),
                          (u = this.match('[')),
                          (r = this.parseObjectPropertyKey()),
                          (this.context.allowYield = !1),
                          (o = this.parseGetterMethod()))
                        : 'set' === e.value &&
                          f &&
                          ((i = 'set'),
                          (u = this.match('[')),
                          (r = this.parseObjectPropertyKey()),
                          (o = this.parseSetterMethod()))
                      : 7 === e.type &&
                        '*' === e.value &&
                        f &&
                        ((i = 'init'),
                        (u = this.match('[')),
                        (r = this.parseObjectPropertyKey()),
                        (o = this.parseGeneratorMethod()),
                        (c = !0)),
                    !i &&
                      r &&
                      this.match('(') &&
                      ((i = 'init'),
                      (o = l
                        ? this.parsePropertyMethodAsyncFunction()
                        : this.parsePropertyMethodFunction()),
                      (c = !0)),
                    i || this.throwUnexpectedToken(this.lookahead),
                    'init' === i && (i = 'method'),
                    u ||
                      (h &&
                        this.isPropertyKey(r, 'prototype') &&
                        this.throwUnexpectedToken(
                          e,
                          s.Messages.StaticPrototype
                        ),
                      !h &&
                        this.isPropertyKey(r, 'constructor') &&
                        (('method' !== i || !c || (o && o.generator)) &&
                          this.throwUnexpectedToken(
                            e,
                            s.Messages.ConstructorSpecialMethod
                          ),
                        t.value
                          ? this.throwUnexpectedToken(
                              e,
                              s.Messages.DuplicateConstructor
                            )
                          : (t.value = !0),
                        (i = 'constructor'))),
                    this.finalize(n, new a.MethodDefinition(r, u, o, i, h))
                  );
                }),
                (t.prototype.parseClassElementList = function () {
                  var t = [],
                    e = { value: !1 };
                  for (this.expect('{'); !this.match('}'); )
                    this.match(';')
                      ? this.nextToken()
                      : t.push(this.parseClassElement(e));
                  return this.expect('}'), t;
                }),
                (t.prototype.parseClassBody = function () {
                  var t = this.createNode(),
                    e = this.parseClassElementList();
                  return this.finalize(t, new a.ClassBody(e));
                }),
                (t.prototype.parseClassDeclaration = function (t) {
                  var e = this.createNode(),
                    n = this.context.strict;
                  (this.context.strict = !0), this.expectKeyword('class');
                  var i =
                      t && 3 !== this.lookahead.type
                        ? null
                        : this.parseVariableIdentifier(),
                    r = null;
                  this.matchKeyword('extends') &&
                    (this.nextToken(),
                    (r = this.isolateCoverGrammar(
                      this.parseLeftHandSideExpressionAllowCall
                    )));
                  var s = this.parseClassBody();
                  return (
                    (this.context.strict = n),
                    this.finalize(e, new a.ClassDeclaration(i, r, s))
                  );
                }),
                (t.prototype.parseClassExpression = function () {
                  var t = this.createNode(),
                    e = this.context.strict;
                  (this.context.strict = !0), this.expectKeyword('class');
                  var n =
                      3 === this.lookahead.type
                        ? this.parseVariableIdentifier()
                        : null,
                    i = null;
                  this.matchKeyword('extends') &&
                    (this.nextToken(),
                    (i = this.isolateCoverGrammar(
                      this.parseLeftHandSideExpressionAllowCall
                    )));
                  var r = this.parseClassBody();
                  return (
                    (this.context.strict = e),
                    this.finalize(t, new a.ClassExpression(n, i, r))
                  );
                }),
                (t.prototype.parseModule = function () {
                  (this.context.strict = !0),
                    (this.context.isModule = !0),
                    (this.scanner.isModule = !0);
                  for (
                    var t = this.createNode(),
                      e = this.parseDirectivePrologues();
                    2 !== this.lookahead.type;

                  )
                    e.push(this.parseStatementListItem());
                  return this.finalize(t, new a.Module(e));
                }),
                (t.prototype.parseScript = function () {
                  for (
                    var t = this.createNode(),
                      e = this.parseDirectivePrologues();
                    2 !== this.lookahead.type;

                  )
                    e.push(this.parseStatementListItem());
                  return this.finalize(t, new a.Script(e));
                }),
                (t.prototype.parseModuleSpecifier = function () {
                  var t = this.createNode();
                  8 !== this.lookahead.type &&
                    this.throwError(s.Messages.InvalidModuleSpecifier);
                  var e = this.nextToken(),
                    n = this.getTokenRaw(e);
                  return this.finalize(t, new a.Literal(e.value, n));
                }),
                (t.prototype.parseImportSpecifier = function () {
                  var t,
                    e,
                    n = this.createNode();
                  return (
                    3 === this.lookahead.type
                      ? ((e = t = this.parseVariableIdentifier()),
                        this.matchContextualKeyword('as') &&
                          (this.nextToken(),
                          (e = this.parseVariableIdentifier())))
                      : ((e = t = this.parseIdentifierName()),
                        this.matchContextualKeyword('as')
                          ? (this.nextToken(),
                            (e = this.parseVariableIdentifier()))
                          : this.throwUnexpectedToken(this.nextToken())),
                    this.finalize(n, new a.ImportSpecifier(e, t))
                  );
                }),
                (t.prototype.parseNamedImports = function () {
                  this.expect('{');
                  for (var t = []; !this.match('}'); )
                    t.push(this.parseImportSpecifier()),
                      this.match('}') || this.expect(',');
                  return this.expect('}'), t;
                }),
                (t.prototype.parseImportDefaultSpecifier = function () {
                  var t = this.createNode(),
                    e = this.parseIdentifierName();
                  return this.finalize(t, new a.ImportDefaultSpecifier(e));
                }),
                (t.prototype.parseImportNamespaceSpecifier = function () {
                  var t = this.createNode();
                  this.expect('*'),
                    this.matchContextualKeyword('as') ||
                      this.throwError(s.Messages.NoAsAfterImportNamespace),
                    this.nextToken();
                  var e = this.parseIdentifierName();
                  return this.finalize(t, new a.ImportNamespaceSpecifier(e));
                }),
                (t.prototype.parseImportDeclaration = function () {
                  this.context.inFunctionBody &&
                    this.throwError(s.Messages.IllegalImportDeclaration);
                  var t,
                    e = this.createNode();
                  this.expectKeyword('import');
                  var n = [];
                  if (8 === this.lookahead.type)
                    t = this.parseModuleSpecifier();
                  else {
                    if (
                      (this.match('{')
                        ? (n = n.concat(this.parseNamedImports()))
                        : this.match('*')
                        ? n.push(this.parseImportNamespaceSpecifier())
                        : this.isIdentifierName(this.lookahead) &&
                          !this.matchKeyword('default')
                        ? (n.push(this.parseImportDefaultSpecifier()),
                          this.match(',') &&
                            (this.nextToken(),
                            this.match('*')
                              ? n.push(this.parseImportNamespaceSpecifier())
                              : this.match('{')
                              ? (n = n.concat(this.parseNamedImports()))
                              : this.throwUnexpectedToken(this.lookahead)))
                        : this.throwUnexpectedToken(this.nextToken()),
                      !this.matchContextualKeyword('from'))
                    ) {
                      var i = this.lookahead.value
                        ? s.Messages.UnexpectedToken
                        : s.Messages.MissingFromClause;
                      this.throwError(i, this.lookahead.value);
                    }
                    this.nextToken(), (t = this.parseModuleSpecifier());
                  }
                  return (
                    this.consumeSemicolon(),
                    this.finalize(e, new a.ImportDeclaration(n, t))
                  );
                }),
                (t.prototype.parseExportSpecifier = function () {
                  var t = this.createNode(),
                    e = this.parseIdentifierName(),
                    n = e;
                  return (
                    this.matchContextualKeyword('as') &&
                      (this.nextToken(), (n = this.parseIdentifierName())),
                    this.finalize(t, new a.ExportSpecifier(e, n))
                  );
                }),
                (t.prototype.parseExportDeclaration = function () {
                  this.context.inFunctionBody &&
                    this.throwError(s.Messages.IllegalExportDeclaration);
                  var t,
                    e = this.createNode();
                  if (
                    (this.expectKeyword('export'), this.matchKeyword('default'))
                  )
                    if ((this.nextToken(), this.matchKeyword('function'))) {
                      var n = this.parseFunctionDeclaration(!0);
                      t = this.finalize(e, new a.ExportDefaultDeclaration(n));
                    } else if (this.matchKeyword('class')) {
                      n = this.parseClassDeclaration(!0);
                      t = this.finalize(e, new a.ExportDefaultDeclaration(n));
                    } else if (this.matchContextualKeyword('async')) {
                      n = this.matchAsyncFunction()
                        ? this.parseFunctionDeclaration(!0)
                        : this.parseAssignmentExpression();
                      t = this.finalize(e, new a.ExportDefaultDeclaration(n));
                    } else {
                      this.matchContextualKeyword('from') &&
                        this.throwError(
                          s.Messages.UnexpectedToken,
                          this.lookahead.value
                        );
                      n = this.match('{')
                        ? this.parseObjectInitializer()
                        : this.match('[')
                        ? this.parseArrayInitializer()
                        : this.parseAssignmentExpression();
                      this.consumeSemicolon(),
                        (t = this.finalize(
                          e,
                          new a.ExportDefaultDeclaration(n)
                        ));
                    }
                  else if (this.match('*')) {
                    if (
                      (this.nextToken(), !this.matchContextualKeyword('from'))
                    ) {
                      var i = this.lookahead.value
                        ? s.Messages.UnexpectedToken
                        : s.Messages.MissingFromClause;
                      this.throwError(i, this.lookahead.value);
                    }
                    this.nextToken();
                    var r = this.parseModuleSpecifier();
                    this.consumeSemicolon(),
                      (t = this.finalize(e, new a.ExportAllDeclaration(r)));
                  } else if (4 === this.lookahead.type) {
                    n = void 0;
                    switch (this.lookahead.value) {
                      case 'let':
                      case 'const':
                        n = this.parseLexicalDeclaration({ inFor: !1 });
                        break;
                      case 'var':
                      case 'class':
                      case 'function':
                        n = this.parseStatementListItem();
                        break;
                      default:
                        this.throwUnexpectedToken(this.lookahead);
                    }
                    t = this.finalize(
                      e,
                      new a.ExportNamedDeclaration(n, [], null)
                    );
                  } else if (this.matchAsyncFunction()) {
                    n = this.parseFunctionDeclaration();
                    t = this.finalize(
                      e,
                      new a.ExportNamedDeclaration(n, [], null)
                    );
                  } else {
                    var o = [],
                      u = null,
                      c = !1;
                    for (this.expect('{'); !this.match('}'); )
                      (c = c || this.matchKeyword('default')),
                        o.push(this.parseExportSpecifier()),
                        this.match('}') || this.expect(',');
                    if ((this.expect('}'), this.matchContextualKeyword('from')))
                      this.nextToken(),
                        (u = this.parseModuleSpecifier()),
                        this.consumeSemicolon();
                    else if (c) {
                      i = this.lookahead.value
                        ? s.Messages.UnexpectedToken
                        : s.Messages.MissingFromClause;
                      this.throwError(i, this.lookahead.value);
                    } else this.consumeSemicolon();
                    t = this.finalize(
                      e,
                      new a.ExportNamedDeclaration(null, o, u)
                    );
                  }
                  return t;
                }),
                t
              );
            })();
          e.Parser = h;
        },
        function (t, e) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.assert = function (t, e) {
              if (!t) throw new Error('ASSERT: ' + e);
            });
        },
        function (t, e) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 });
          var n = (function () {
            function t() {
              (this.errors = []), (this.tolerant = !1);
            }
            return (
              (t.prototype.recordError = function (t) {
                this.errors.push(t);
              }),
              (t.prototype.tolerate = function (t) {
                if (!this.tolerant) throw t;
                this.recordError(t);
              }),
              (t.prototype.constructError = function (t, e) {
                var n = new Error(t);
                try {
                  throw n;
                } catch (t) {
                  Object.create &&
                    Object.defineProperty &&
                    ((n = Object.create(t)),
                    Object.defineProperty(n, 'column', { value: e }));
                }
                return n;
              }),
              (t.prototype.createError = function (t, e, n, i) {
                var r = 'Line ' + e + ': ' + i,
                  s = this.constructError(r, n);
                return (
                  (s.index = t), (s.lineNumber = e), (s.description = i), s
                );
              }),
              (t.prototype.throwError = function (t, e, n, i) {
                throw this.createError(t, e, n, i);
              }),
              (t.prototype.tolerateError = function (t, e, n, i) {
                var r = this.createError(t, e, n, i);
                if (!this.tolerant) throw r;
                this.recordError(r);
              }),
              t
            );
          })();
          e.ErrorHandler = n;
        },
        function (t, e) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.Messages = {
              BadGetterArity: 'Getter must not have any formal parameters',
              BadSetterArity: 'Setter must have exactly one formal parameter',
              BadSetterRestParameter:
                'Setter function argument must not be a rest parameter',
              ConstructorIsAsync:
                'Class constructor may not be an async method',
              ConstructorSpecialMethod:
                'Class constructor may not be an accessor',
              DeclarationMissingInitializer:
                'Missing initializer in %0 declaration',
              DefaultRestParameter: 'Unexpected token =',
              DuplicateBinding: 'Duplicate binding %0',
              DuplicateConstructor: 'A class may only have one constructor',
              DuplicateProtoProperty:
                'Duplicate __proto__ fields are not allowed in object literals',
              ForInOfLoopInitializer:
                '%0 loop variable declaration may not have an initializer',
              GeneratorInLegacyContext:
                'Generator declarations are not allowed in legacy contexts',
              IllegalBreak: 'Illegal break statement',
              IllegalContinue: 'Illegal continue statement',
              IllegalExportDeclaration: 'Unexpected token',
              IllegalImportDeclaration: 'Unexpected token',
              IllegalLanguageModeDirective:
                "Illegal 'use strict' directive in function with non-simple parameter list",
              IllegalReturn: 'Illegal return statement',
              InvalidEscapedReservedWord:
                'Keyword must not contain escaped characters',
              InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',
              InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
              InvalidLHSInForIn: 'Invalid left-hand side in for-in',
              InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',
              InvalidModuleSpecifier: 'Unexpected token',
              InvalidRegExp: 'Invalid regular expression',
              LetInLexicalBinding:
                'let is disallowed as a lexically bound name',
              MissingFromClause: 'Unexpected token',
              MultipleDefaultsInSwitch:
                'More than one default clause in switch statement',
              NewlineAfterThrow: 'Illegal newline after throw',
              NoAsAfterImportNamespace: 'Unexpected token',
              NoCatchOrFinally: 'Missing catch or finally after try',
              ParameterAfterRestParameter:
                'Rest parameter must be last formal parameter',
              Redeclaration: "%0 '%1' has already been declared",
              StaticPrototype:
                'Classes may not have static property named prototype',
              StrictCatchVariable:
                'Catch variable may not be eval or arguments in strict mode',
              StrictDelete:
                'Delete of an unqualified identifier in strict mode.',
              StrictFunction:
                'In strict mode code, functions can only be declared at top level or inside a block',
              StrictFunctionName:
                'Function name may not be eval or arguments in strict mode',
              StrictLHSAssignment:
                'Assignment to eval or arguments is not allowed in strict mode',
              StrictLHSPostfix:
                'Postfix increment/decrement may not have eval or arguments operand in strict mode',
              StrictLHSPrefix:
                'Prefix increment/decrement may not have eval or arguments operand in strict mode',
              StrictModeWith:
                'Strict mode code may not include a with statement',
              StrictOctalLiteral:
                'Octal literals are not allowed in strict mode.',
              StrictParamDupe:
                'Strict mode function may not have duplicate parameter names',
              StrictParamName:
                'Parameter name eval or arguments is not allowed in strict mode',
              StrictReservedWord: 'Use of future reserved word in strict mode',
              StrictVarName:
                'Variable name may not be eval or arguments in strict mode',
              TemplateOctalLiteral:
                'Octal literals are not allowed in template strings.',
              UnexpectedEOS: 'Unexpected end of input',
              UnexpectedIdentifier: 'Unexpected identifier',
              UnexpectedNumber: 'Unexpected number',
              UnexpectedReserved: 'Unexpected reserved word',
              UnexpectedString: 'Unexpected string',
              UnexpectedTemplate: 'Unexpected quasi %0',
              UnexpectedToken: 'Unexpected token %0',
              UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',
              UnknownLabel: "Undefined label '%0'",
              UnterminatedRegExp: 'Invalid regular expression: missing /',
            });
        },
        function (t, e, n) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 });
          var i = n(9),
            r = n(4),
            s = n(11);
          function a(t) {
            return '0123456789abcdef'.indexOf(t.toLowerCase());
          }
          function o(t) {
            return '01234567'.indexOf(t);
          }
          var u = (function () {
            function t(t, e) {
              (this.source = t),
                (this.errorHandler = e),
                (this.trackComment = !1),
                (this.isModule = !1),
                (this.length = t.length),
                (this.index = 0),
                (this.lineNumber = t.length > 0 ? 1 : 0),
                (this.lineStart = 0),
                (this.curlyStack = []);
            }
            return (
              (t.prototype.saveState = function () {
                return {
                  index: this.index,
                  lineNumber: this.lineNumber,
                  lineStart: this.lineStart,
                };
              }),
              (t.prototype.restoreState = function (t) {
                (this.index = t.index),
                  (this.lineNumber = t.lineNumber),
                  (this.lineStart = t.lineStart);
              }),
              (t.prototype.eof = function () {
                return this.index >= this.length;
              }),
              (t.prototype.throwUnexpectedToken = function (t) {
                return (
                  void 0 === t && (t = s.Messages.UnexpectedTokenIllegal),
                  this.errorHandler.throwError(
                    this.index,
                    this.lineNumber,
                    this.index - this.lineStart + 1,
                    t
                  )
                );
              }),
              (t.prototype.tolerateUnexpectedToken = function (t) {
                void 0 === t && (t = s.Messages.UnexpectedTokenIllegal),
                  this.errorHandler.tolerateError(
                    this.index,
                    this.lineNumber,
                    this.index - this.lineStart + 1,
                    t
                  );
              }),
              (t.prototype.skipSingleLineComment = function (t) {
                var e,
                  n,
                  i = [];
                for (
                  this.trackComment &&
                  ((i = []),
                  (e = this.index - t),
                  (n = {
                    start: {
                      line: this.lineNumber,
                      column: this.index - this.lineStart - t,
                    },
                    end: {},
                  }));
                  !this.eof();

                ) {
                  var s = this.source.charCodeAt(this.index);
                  if ((++this.index, r.Character.isLineTerminator(s))) {
                    if (this.trackComment) {
                      n.end = {
                        line: this.lineNumber,
                        column: this.index - this.lineStart - 1,
                      };
                      var a = {
                        multiLine: !1,
                        slice: [e + t, this.index - 1],
                        range: [e, this.index - 1],
                        loc: n,
                      };
                      i.push(a);
                    }
                    return (
                      13 === s &&
                        10 === this.source.charCodeAt(this.index) &&
                        ++this.index,
                      ++this.lineNumber,
                      (this.lineStart = this.index),
                      i
                    );
                  }
                }
                if (this.trackComment) {
                  n.end = {
                    line: this.lineNumber,
                    column: this.index - this.lineStart,
                  };
                  a = {
                    multiLine: !1,
                    slice: [e + t, this.index],
                    range: [e, this.index],
                    loc: n,
                  };
                  i.push(a);
                }
                return i;
              }),
              (t.prototype.skipMultiLineComment = function () {
                var t,
                  e,
                  n = [];
                for (
                  this.trackComment &&
                  ((n = []),
                  (t = this.index - 2),
                  (e = {
                    start: {
                      line: this.lineNumber,
                      column: this.index - this.lineStart - 2,
                    },
                    end: {},
                  }));
                  !this.eof();

                ) {
                  var i = this.source.charCodeAt(this.index);
                  if (r.Character.isLineTerminator(i))
                    13 === i &&
                      10 === this.source.charCodeAt(this.index + 1) &&
                      ++this.index,
                      ++this.lineNumber,
                      ++this.index,
                      (this.lineStart = this.index);
                  else if (42 === i) {
                    if (47 === this.source.charCodeAt(this.index + 1)) {
                      if (((this.index += 2), this.trackComment)) {
                        e.end = {
                          line: this.lineNumber,
                          column: this.index - this.lineStart,
                        };
                        var s = {
                          multiLine: !0,
                          slice: [t + 2, this.index - 2],
                          range: [t, this.index],
                          loc: e,
                        };
                        n.push(s);
                      }
                      return n;
                    }
                    ++this.index;
                  } else ++this.index;
                }
                if (this.trackComment) {
                  e.end = {
                    line: this.lineNumber,
                    column: this.index - this.lineStart,
                  };
                  s = {
                    multiLine: !0,
                    slice: [t + 2, this.index],
                    range: [t, this.index],
                    loc: e,
                  };
                  n.push(s);
                }
                return this.tolerateUnexpectedToken(), n;
              }),
              (t.prototype.scanComments = function () {
                var t;
                this.trackComment && (t = []);
                for (var e = 0 === this.index; !this.eof(); ) {
                  var n = this.source.charCodeAt(this.index);
                  if (r.Character.isWhiteSpace(n)) ++this.index;
                  else if (r.Character.isLineTerminator(n))
                    ++this.index,
                      13 === n &&
                        10 === this.source.charCodeAt(this.index) &&
                        ++this.index,
                      ++this.lineNumber,
                      (this.lineStart = this.index),
                      (e = !0);
                  else if (47 === n)
                    if (47 === (n = this.source.charCodeAt(this.index + 1))) {
                      this.index += 2;
                      var i = this.skipSingleLineComment(2);
                      this.trackComment && (t = t.concat(i)), (e = !0);
                    } else {
                      if (42 !== n) break;
                      this.index += 2;
                      i = this.skipMultiLineComment();
                      this.trackComment && (t = t.concat(i));
                    }
                  else if (e && 45 === n) {
                    if (
                      45 !== this.source.charCodeAt(this.index + 1) ||
                      62 !== this.source.charCodeAt(this.index + 2)
                    )
                      break;
                    this.index += 3;
                    i = this.skipSingleLineComment(3);
                    this.trackComment && (t = t.concat(i));
                  } else {
                    if (60 !== n || this.isModule) break;
                    if (
                      '!--' !==
                      this.source.slice(this.index + 1, this.index + 4)
                    )
                      break;
                    this.index += 4;
                    i = this.skipSingleLineComment(4);
                    this.trackComment && (t = t.concat(i));
                  }
                }
                return t;
              }),
              (t.prototype.isFutureReservedWord = function (t) {
                switch (t) {
                  case 'enum':
                  case 'export':
                  case 'import':
                  case 'super':
                    return !0;
                  default:
                    return !1;
                }
              }),
              (t.prototype.isStrictModeReservedWord = function (t) {
                switch (t) {
                  case 'implements':
                  case 'interface':
                  case 'package':
                  case 'private':
                  case 'protected':
                  case 'public':
                  case 'static':
                  case 'yield':
                  case 'let':
                    return !0;
                  default:
                    return !1;
                }
              }),
              (t.prototype.isRestrictedWord = function (t) {
                return 'eval' === t || 'arguments' === t;
              }),
              (t.prototype.isKeyword = function (t) {
                switch (t.length) {
                  case 2:
                    return 'if' === t || 'in' === t || 'do' === t;
                  case 3:
                    return (
                      'var' === t ||
                      'for' === t ||
                      'new' === t ||
                      'try' === t ||
                      'let' === t
                    );
                  case 4:
                    return (
                      'this' === t ||
                      'else' === t ||
                      'case' === t ||
                      'void' === t ||
                      'with' === t ||
                      'enum' === t
                    );
                  case 5:
                    return (
                      'while' === t ||
                      'break' === t ||
                      'catch' === t ||
                      'throw' === t ||
                      'const' === t ||
                      'yield' === t ||
                      'class' === t ||
                      'super' === t
                    );
                  case 6:
                    return (
                      'return' === t ||
                      'typeof' === t ||
                      'delete' === t ||
                      'switch' === t ||
                      'export' === t ||
                      'import' === t
                    );
                  case 7:
                    return (
                      'default' === t || 'finally' === t || 'extends' === t
                    );
                  case 8:
                    return (
                      'function' === t || 'continue' === t || 'debugger' === t
                    );
                  case 10:
                    return 'instanceof' === t;
                  default:
                    return !1;
                }
              }),
              (t.prototype.codePointAt = function (t) {
                var e = this.source.charCodeAt(t);
                if (e >= 55296 && e <= 56319) {
                  var n = this.source.charCodeAt(t + 1);
                  if (n >= 56320 && n <= 57343)
                    e = 1024 * (e - 55296) + n - 56320 + 65536;
                }
                return e;
              }),
              (t.prototype.scanHexEscape = function (t) {
                for (var e = 'u' === t ? 4 : 2, n = 0, i = 0; i < e; ++i) {
                  if (
                    this.eof() ||
                    !r.Character.isHexDigit(this.source.charCodeAt(this.index))
                  )
                    return null;
                  n = 16 * n + a(this.source[this.index++]);
                }
                return String.fromCharCode(n);
              }),
              (t.prototype.scanUnicodeCodePointEscape = function () {
                var t = this.source[this.index],
                  e = 0;
                for (
                  '}' === t && this.throwUnexpectedToken();
                  !this.eof() &&
                  ((t = this.source[this.index++]),
                  r.Character.isHexDigit(t.charCodeAt(0)));

                )
                  e = 16 * e + a(t);
                return (
                  (e > 1114111 || '}' !== t) && this.throwUnexpectedToken(),
                  r.Character.fromCodePoint(e)
                );
              }),
              (t.prototype.getIdentifier = function () {
                for (var t = this.index++; !this.eof(); ) {
                  var e = this.source.charCodeAt(this.index);
                  if (92 === e)
                    return (this.index = t), this.getComplexIdentifier();
                  if (e >= 55296 && e < 57343)
                    return (this.index = t), this.getComplexIdentifier();
                  if (!r.Character.isIdentifierPart(e)) break;
                  ++this.index;
                }
                return this.source.slice(t, this.index);
              }),
              (t.prototype.getComplexIdentifier = function () {
                var t,
                  e = this.codePointAt(this.index),
                  n = r.Character.fromCodePoint(e);
                for (
                  this.index += n.length,
                    92 === e &&
                      (117 !== this.source.charCodeAt(this.index) &&
                        this.throwUnexpectedToken(),
                      ++this.index,
                      '{' === this.source[this.index]
                        ? (++this.index,
                          (t = this.scanUnicodeCodePointEscape()))
                        : (null !== (t = this.scanHexEscape('u')) &&
                            '\\' !== t &&
                            r.Character.isIdentifierStart(t.charCodeAt(0))) ||
                          this.throwUnexpectedToken(),
                      (n = t));
                  !this.eof() &&
                  ((e = this.codePointAt(this.index)),
                  r.Character.isIdentifierPart(e));

                )
                  (n += t = r.Character.fromCodePoint(e)),
                    (this.index += t.length),
                    92 === e &&
                      ((n = n.substr(0, n.length - 1)),
                      117 !== this.source.charCodeAt(this.index) &&
                        this.throwUnexpectedToken(),
                      ++this.index,
                      '{' === this.source[this.index]
                        ? (++this.index,
                          (t = this.scanUnicodeCodePointEscape()))
                        : (null !== (t = this.scanHexEscape('u')) &&
                            '\\' !== t &&
                            r.Character.isIdentifierPart(t.charCodeAt(0))) ||
                          this.throwUnexpectedToken(),
                      (n += t));
                return n;
              }),
              (t.prototype.octalToDecimal = function (t) {
                var e = '0' !== t,
                  n = o(t);
                return (
                  !this.eof() &&
                    r.Character.isOctalDigit(
                      this.source.charCodeAt(this.index)
                    ) &&
                    ((e = !0),
                    (n = 8 * n + o(this.source[this.index++])),
                    '0123'.indexOf(t) >= 0 &&
                      !this.eof() &&
                      r.Character.isOctalDigit(
                        this.source.charCodeAt(this.index)
                      ) &&
                      (n = 8 * n + o(this.source[this.index++]))),
                  { code: n, octal: e }
                );
              }),
              (t.prototype.scanIdentifier = function () {
                var t,
                  e = this.index,
                  n =
                    92 === this.source.charCodeAt(e)
                      ? this.getComplexIdentifier()
                      : this.getIdentifier();
                if (
                  3 !==
                    (t =
                      1 === n.length
                        ? 3
                        : this.isKeyword(n)
                        ? 4
                        : 'null' === n
                        ? 5
                        : 'true' === n || 'false' === n
                        ? 1
                        : 3) &&
                  e + n.length !== this.index
                ) {
                  var i = this.index;
                  (this.index = e),
                    this.tolerateUnexpectedToken(
                      s.Messages.InvalidEscapedReservedWord
                    ),
                    (this.index = i);
                }
                return {
                  type: t,
                  value: n,
                  lineNumber: this.lineNumber,
                  lineStart: this.lineStart,
                  start: e,
                  end: this.index,
                };
              }),
              (t.prototype.scanPunctuator = function () {
                var t = this.index,
                  e = this.source[this.index];
                switch (e) {
                  case '(':
                  case '{':
                    '{' === e && this.curlyStack.push('{'), ++this.index;
                    break;
                  case '.':
                    ++this.index,
                      '.' === this.source[this.index] &&
                        '.' === this.source[this.index + 1] &&
                        ((this.index += 2), (e = '...'));
                    break;
                  case '}':
                    ++this.index, this.curlyStack.pop();
                    break;
                  case ')':
                  case ';':
                  case ',':
                  case '[':
                  case ']':
                  case ':':
                  case '?':
                  case '~':
                    ++this.index;
                    break;
                  default:
                    '>>>=' === (e = this.source.substr(this.index, 4))
                      ? (this.index += 4)
                      : '===' === (e = e.substr(0, 3)) ||
                        '!==' === e ||
                        '>>>' === e ||
                        '<<=' === e ||
                        '>>=' === e ||
                        '**=' === e
                      ? (this.index += 3)
                      : '&&' === (e = e.substr(0, 2)) ||
                        '||' === e ||
                        '==' === e ||
                        '!=' === e ||
                        '+=' === e ||
                        '-=' === e ||
                        '*=' === e ||
                        '/=' === e ||
                        '++' === e ||
                        '--' === e ||
                        '<<' === e ||
                        '>>' === e ||
                        '&=' === e ||
                        '|=' === e ||
                        '^=' === e ||
                        '%=' === e ||
                        '<=' === e ||
                        '>=' === e ||
                        '=>' === e ||
                        '**' === e
                      ? (this.index += 2)
                      : ((e = this.source[this.index]),
                        '<>=!+-*%&|^/'.indexOf(e) >= 0 && ++this.index);
                }
                return (
                  this.index === t && this.throwUnexpectedToken(),
                  {
                    type: 7,
                    value: e,
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: t,
                    end: this.index,
                  }
                );
              }),
              (t.prototype.scanHexLiteral = function (t) {
                for (
                  var e = '';
                  !this.eof() &&
                  r.Character.isHexDigit(this.source.charCodeAt(this.index));

                )
                  e += this.source[this.index++];
                return (
                  0 === e.length && this.throwUnexpectedToken(),
                  r.Character.isIdentifierStart(
                    this.source.charCodeAt(this.index)
                  ) && this.throwUnexpectedToken(),
                  {
                    type: 6,
                    value: parseInt('0x' + e, 16),
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: t,
                    end: this.index,
                  }
                );
              }),
              (t.prototype.scanBinaryLiteral = function (t) {
                for (
                  var e, n = '';
                  !this.eof() &&
                  ('0' === (e = this.source[this.index]) || '1' === e);

                )
                  n += this.source[this.index++];
                return (
                  0 === n.length && this.throwUnexpectedToken(),
                  this.eof() ||
                    ((e = this.source.charCodeAt(this.index)),
                    (r.Character.isIdentifierStart(e) ||
                      r.Character.isDecimalDigit(e)) &&
                      this.throwUnexpectedToken()),
                  {
                    type: 6,
                    value: parseInt(n, 2),
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: t,
                    end: this.index,
                  }
                );
              }),
              (t.prototype.scanOctalLiteral = function (t, e) {
                var n = '',
                  i = !1;
                for (
                  r.Character.isOctalDigit(t.charCodeAt(0))
                    ? ((i = !0), (n = '0' + this.source[this.index++]))
                    : ++this.index;
                  !this.eof() &&
                  r.Character.isOctalDigit(this.source.charCodeAt(this.index));

                )
                  n += this.source[this.index++];
                return (
                  i || 0 !== n.length || this.throwUnexpectedToken(),
                  (r.Character.isIdentifierStart(
                    this.source.charCodeAt(this.index)
                  ) ||
                    r.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index)
                    )) &&
                    this.throwUnexpectedToken(),
                  {
                    type: 6,
                    value: parseInt(n, 8),
                    octal: i,
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: e,
                    end: this.index,
                  }
                );
              }),
              (t.prototype.isImplicitOctalLiteral = function () {
                for (var t = this.index + 1; t < this.length; ++t) {
                  var e = this.source[t];
                  if ('8' === e || '9' === e) return !1;
                  if (!r.Character.isOctalDigit(e.charCodeAt(0))) return !0;
                }
                return !0;
              }),
              (t.prototype.scanNumericLiteral = function () {
                var t = this.index,
                  e = this.source[t];
                i.assert(
                  r.Character.isDecimalDigit(e.charCodeAt(0)) || '.' === e,
                  'Numeric literal must start with a decimal digit or a decimal point'
                );
                var n = '';
                if ('.' !== e) {
                  if (
                    ((n = this.source[this.index++]),
                    (e = this.source[this.index]),
                    '0' === n)
                  ) {
                    if ('x' === e || 'X' === e)
                      return ++this.index, this.scanHexLiteral(t);
                    if ('b' === e || 'B' === e)
                      return ++this.index, this.scanBinaryLiteral(t);
                    if ('o' === e || 'O' === e)
                      return this.scanOctalLiteral(e, t);
                    if (
                      e &&
                      r.Character.isOctalDigit(e.charCodeAt(0)) &&
                      this.isImplicitOctalLiteral()
                    )
                      return this.scanOctalLiteral(e, t);
                  }
                  for (
                    ;
                    r.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index)
                    );

                  )
                    n += this.source[this.index++];
                  e = this.source[this.index];
                }
                if ('.' === e) {
                  for (
                    n += this.source[this.index++];
                    r.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index)
                    );

                  )
                    n += this.source[this.index++];
                  e = this.source[this.index];
                }
                if ('e' === e || 'E' === e)
                  if (
                    ((n += this.source[this.index++]),
                    ('+' !== (e = this.source[this.index]) && '-' !== e) ||
                      (n += this.source[this.index++]),
                    r.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index)
                    ))
                  )
                    for (
                      ;
                      r.Character.isDecimalDigit(
                        this.source.charCodeAt(this.index)
                      );

                    )
                      n += this.source[this.index++];
                  else this.throwUnexpectedToken();
                return (
                  r.Character.isIdentifierStart(
                    this.source.charCodeAt(this.index)
                  ) && this.throwUnexpectedToken(),
                  {
                    type: 6,
                    value: parseFloat(n),
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: t,
                    end: this.index,
                  }
                );
              }),
              (t.prototype.scanStringLiteral = function () {
                var t = this.index,
                  e = this.source[t];
                i.assert(
                  "'" === e || '"' === e,
                  'String literal must starts with a quote'
                ),
                  ++this.index;
                for (var n = !1, a = ''; !this.eof(); ) {
                  var o = this.source[this.index++];
                  if (o === e) {
                    e = '';
                    break;
                  }
                  if ('\\' === o)
                    if (
                      (o = this.source[this.index++]) &&
                      r.Character.isLineTerminator(o.charCodeAt(0))
                    )
                      ++this.lineNumber,
                        '\r' === o &&
                          '\n' === this.source[this.index] &&
                          ++this.index,
                        (this.lineStart = this.index);
                    else
                      switch (o) {
                        case 'u':
                          if ('{' === this.source[this.index])
                            ++this.index,
                              (a += this.scanUnicodeCodePointEscape());
                          else {
                            var u = this.scanHexEscape(o);
                            null === u && this.throwUnexpectedToken(), (a += u);
                          }
                          break;
                        case 'x':
                          var c = this.scanHexEscape(o);
                          null === c &&
                            this.throwUnexpectedToken(
                              s.Messages.InvalidHexEscapeSequence
                            ),
                            (a += c);
                          break;
                        case 'n':
                          a += '\n';
                          break;
                        case 'r':
                          a += '\r';
                          break;
                        case 't':
                          a += '\t';
                          break;
                        case 'b':
                          a += '\b';
                          break;
                        case 'f':
                          a += '\f';
                          break;
                        case 'v':
                          a += '\v';
                          break;
                        case '8':
                        case '9':
                          (a += o), this.tolerateUnexpectedToken();
                          break;
                        default:
                          if (o && r.Character.isOctalDigit(o.charCodeAt(0))) {
                            var h = this.octalToDecimal(o);
                            (n = h.octal || n),
                              (a += String.fromCharCode(h.code));
                          } else a += o;
                      }
                  else {
                    if (r.Character.isLineTerminator(o.charCodeAt(0))) break;
                    a += o;
                  }
                }
                return (
                  '' !== e && ((this.index = t), this.throwUnexpectedToken()),
                  {
                    type: 8,
                    value: a,
                    octal: n,
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: t,
                    end: this.index,
                  }
                );
              }),
              (t.prototype.scanTemplate = function () {
                var t = '',
                  e = !1,
                  n = this.index,
                  i = '`' === this.source[n],
                  a = !1,
                  o = 2;
                for (++this.index; !this.eof(); ) {
                  var u = this.source[this.index++];
                  if ('`' === u) {
                    (o = 1), (a = !0), (e = !0);
                    break;
                  }
                  if ('$' === u) {
                    if ('{' === this.source[this.index]) {
                      this.curlyStack.push('${'), ++this.index, (e = !0);
                      break;
                    }
                    t += u;
                  } else if ('\\' === u)
                    if (
                      ((u = this.source[this.index++]),
                      r.Character.isLineTerminator(u.charCodeAt(0)))
                    )
                      ++this.lineNumber,
                        '\r' === u &&
                          '\n' === this.source[this.index] &&
                          ++this.index,
                        (this.lineStart = this.index);
                    else
                      switch (u) {
                        case 'n':
                          t += '\n';
                          break;
                        case 'r':
                          t += '\r';
                          break;
                        case 't':
                          t += '\t';
                          break;
                        case 'u':
                          if ('{' === this.source[this.index])
                            ++this.index,
                              (t += this.scanUnicodeCodePointEscape());
                          else {
                            var c = this.index,
                              h = this.scanHexEscape(u);
                            null !== h
                              ? (t += h)
                              : ((this.index = c), (t += u));
                          }
                          break;
                        case 'x':
                          var l = this.scanHexEscape(u);
                          null === l &&
                            this.throwUnexpectedToken(
                              s.Messages.InvalidHexEscapeSequence
                            ),
                            (t += l);
                          break;
                        case 'b':
                          t += '\b';
                          break;
                        case 'f':
                          t += '\f';
                          break;
                        case 'v':
                          t += '\v';
                          break;
                        default:
                          '0' === u
                            ? (r.Character.isDecimalDigit(
                                this.source.charCodeAt(this.index)
                              ) &&
                                this.throwUnexpectedToken(
                                  s.Messages.TemplateOctalLiteral
                                ),
                              (t += '\0'))
                            : r.Character.isOctalDigit(u.charCodeAt(0))
                            ? this.throwUnexpectedToken(
                                s.Messages.TemplateOctalLiteral
                              )
                            : (t += u);
                      }
                  else
                    r.Character.isLineTerminator(u.charCodeAt(0))
                      ? (++this.lineNumber,
                        '\r' === u &&
                          '\n' === this.source[this.index] &&
                          ++this.index,
                        (this.lineStart = this.index),
                        (t += '\n'))
                      : (t += u);
                }
                return (
                  e || this.throwUnexpectedToken(),
                  i || this.curlyStack.pop(),
                  {
                    type: 10,
                    value: this.source.slice(n + 1, this.index - o),
                    cooked: t,
                    head: i,
                    tail: a,
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: n,
                    end: this.index,
                  }
                );
              }),
              (t.prototype.testRegExp = function (t, e) {
                var n = t,
                  i = this;
                e.indexOf('u') >= 0 &&
                  (n = n
                    .replace(
                      /\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g,
                      function (t, e, n) {
                        var r = parseInt(e || n, 16);
                        return (
                          r > 1114111 &&
                            i.throwUnexpectedToken(s.Messages.InvalidRegExp),
                          r <= 65535 ? String.fromCharCode(r) : '￿'
                        );
                      }
                    )
                    .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, '￿'));
                try {
                  RegExp(n);
                } catch (t) {
                  this.throwUnexpectedToken(s.Messages.InvalidRegExp);
                }
                try {
                  return new RegExp(t, e);
                } catch (t) {
                  return null;
                }
              }),
              (t.prototype.scanRegExpBody = function () {
                var t = this.source[this.index];
                i.assert(
                  '/' === t,
                  'Regular expression literal must start with a slash'
                );
                for (
                  var e = this.source[this.index++], n = !1, a = !1;
                  !this.eof();

                )
                  if (((e += t = this.source[this.index++]), '\\' === t))
                    (t = this.source[this.index++]),
                      r.Character.isLineTerminator(t.charCodeAt(0)) &&
                        this.throwUnexpectedToken(
                          s.Messages.UnterminatedRegExp
                        ),
                      (e += t);
                  else if (r.Character.isLineTerminator(t.charCodeAt(0)))
                    this.throwUnexpectedToken(s.Messages.UnterminatedRegExp);
                  else if (n) ']' === t && (n = !1);
                  else {
                    if ('/' === t) {
                      a = !0;
                      break;
                    }
                    '[' === t && (n = !0);
                  }
                return (
                  a || this.throwUnexpectedToken(s.Messages.UnterminatedRegExp),
                  e.substr(1, e.length - 2)
                );
              }),
              (t.prototype.scanRegExpFlags = function () {
                for (var t = ''; !this.eof(); ) {
                  var e = this.source[this.index];
                  if (!r.Character.isIdentifierPart(e.charCodeAt(0))) break;
                  if ((++this.index, '\\' !== e || this.eof())) (t += e), e;
                  else if ('u' === (e = this.source[this.index])) {
                    ++this.index;
                    var n = this.index,
                      i = this.scanHexEscape('u');
                    if (null !== i)
                      for (t += i, '\\u'; n < this.index; ++n) this.source[n];
                    else (this.index = n), (t += 'u'), '\\u';
                    this.tolerateUnexpectedToken();
                  } else '\\', this.tolerateUnexpectedToken();
                }
                return t;
              }),
              (t.prototype.scanRegExp = function () {
                var t = this.index,
                  e = this.scanRegExpBody(),
                  n = this.scanRegExpFlags();
                return {
                  type: 9,
                  value: '',
                  pattern: e,
                  flags: n,
                  regex: this.testRegExp(e, n),
                  lineNumber: this.lineNumber,
                  lineStart: this.lineStart,
                  start: t,
                  end: this.index,
                };
              }),
              (t.prototype.lex = function () {
                if (this.eof())
                  return {
                    type: 2,
                    value: '',
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: this.index,
                    end: this.index,
                  };
                var t = this.source.charCodeAt(this.index);
                return r.Character.isIdentifierStart(t)
                  ? this.scanIdentifier()
                  : 40 === t || 41 === t || 59 === t
                  ? this.scanPunctuator()
                  : 39 === t || 34 === t
                  ? this.scanStringLiteral()
                  : 46 === t
                  ? r.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index + 1)
                    )
                    ? this.scanNumericLiteral()
                    : this.scanPunctuator()
                  : r.Character.isDecimalDigit(t)
                  ? this.scanNumericLiteral()
                  : 96 === t ||
                    (125 === t &&
                      '${' === this.curlyStack[this.curlyStack.length - 1])
                  ? this.scanTemplate()
                  : t >= 55296 &&
                    t < 57343 &&
                    r.Character.isIdentifierStart(this.codePointAt(this.index))
                  ? this.scanIdentifier()
                  : this.scanPunctuator();
              }),
              t
            );
          })();
          e.Scanner = u;
        },
        function (t, e) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.TokenName = {}),
            (e.TokenName[1] = 'Boolean'),
            (e.TokenName[2] = '<end>'),
            (e.TokenName[3] = 'Identifier'),
            (e.TokenName[4] = 'Keyword'),
            (e.TokenName[5] = 'Null'),
            (e.TokenName[6] = 'Numeric'),
            (e.TokenName[7] = 'Punctuator'),
            (e.TokenName[8] = 'String'),
            (e.TokenName[9] = 'RegularExpression'),
            (e.TokenName[10] = 'Template');
        },
        function (t, e) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.XHTMLEntities = {
              quot: '"',
              amp: '&',
              apos: "'",
              gt: '>',
              nbsp: ' ',
              iexcl: '¡',
              cent: '¢',
              pound: '£',
              curren: '¤',
              yen: '¥',
              brvbar: '¦',
              sect: '§',
              uml: '¨',
              copy: '©',
              ordf: 'ª',
              laquo: '«',
              not: '¬',
              shy: '­',
              reg: '®',
              macr: '¯',
              deg: '°',
              plusmn: '±',
              sup2: '²',
              sup3: '³',
              acute: '´',
              micro: 'µ',
              para: '¶',
              middot: '·',
              cedil: '¸',
              sup1: '¹',
              ordm: 'º',
              raquo: '»',
              frac14: '¼',
              frac12: '½',
              frac34: '¾',
              iquest: '¿',
              Agrave: 'À',
              Aacute: 'Á',
              Acirc: 'Â',
              Atilde: 'Ã',
              Auml: 'Ä',
              Aring: 'Å',
              AElig: 'Æ',
              Ccedil: 'Ç',
              Egrave: 'È',
              Eacute: 'É',
              Ecirc: 'Ê',
              Euml: 'Ë',
              Igrave: 'Ì',
              Iacute: 'Í',
              Icirc: 'Î',
              Iuml: 'Ï',
              ETH: 'Ð',
              Ntilde: 'Ñ',
              Ograve: 'Ò',
              Oacute: 'Ó',
              Ocirc: 'Ô',
              Otilde: 'Õ',
              Ouml: 'Ö',
              times: '×',
              Oslash: 'Ø',
              Ugrave: 'Ù',
              Uacute: 'Ú',
              Ucirc: 'Û',
              Uuml: 'Ü',
              Yacute: 'Ý',
              THORN: 'Þ',
              szlig: 'ß',
              agrave: 'à',
              aacute: 'á',
              acirc: 'â',
              atilde: 'ã',
              auml: 'ä',
              aring: 'å',
              aelig: 'æ',
              ccedil: 'ç',
              egrave: 'è',
              eacute: 'é',
              ecirc: 'ê',
              euml: 'ë',
              igrave: 'ì',
              iacute: 'í',
              icirc: 'î',
              iuml: 'ï',
              eth: 'ð',
              ntilde: 'ñ',
              ograve: 'ò',
              oacute: 'ó',
              ocirc: 'ô',
              otilde: 'õ',
              ouml: 'ö',
              divide: '÷',
              oslash: 'ø',
              ugrave: 'ù',
              uacute: 'ú',
              ucirc: 'û',
              uuml: 'ü',
              yacute: 'ý',
              thorn: 'þ',
              yuml: 'ÿ',
              OElig: 'Œ',
              oelig: 'œ',
              Scaron: 'Š',
              scaron: 'š',
              Yuml: 'Ÿ',
              fnof: 'ƒ',
              circ: 'ˆ',
              tilde: '˜',
              Alpha: 'Α',
              Beta: 'Β',
              Gamma: 'Γ',
              Delta: 'Δ',
              Epsilon: 'Ε',
              Zeta: 'Ζ',
              Eta: 'Η',
              Theta: 'Θ',
              Iota: 'Ι',
              Kappa: 'Κ',
              Lambda: 'Λ',
              Mu: 'Μ',
              Nu: 'Ν',
              Xi: 'Ξ',
              Omicron: 'Ο',
              Pi: 'Π',
              Rho: 'Ρ',
              Sigma: 'Σ',
              Tau: 'Τ',
              Upsilon: 'Υ',
              Phi: 'Φ',
              Chi: 'Χ',
              Psi: 'Ψ',
              Omega: 'Ω',
              alpha: 'α',
              beta: 'β',
              gamma: 'γ',
              delta: 'δ',
              epsilon: 'ε',
              zeta: 'ζ',
              eta: 'η',
              theta: 'θ',
              iota: 'ι',
              kappa: 'κ',
              lambda: 'λ',
              mu: 'μ',
              nu: 'ν',
              xi: 'ξ',
              omicron: 'ο',
              pi: 'π',
              rho: 'ρ',
              sigmaf: 'ς',
              sigma: 'σ',
              tau: 'τ',
              upsilon: 'υ',
              phi: 'φ',
              chi: 'χ',
              psi: 'ψ',
              omega: 'ω',
              thetasym: 'ϑ',
              upsih: 'ϒ',
              piv: 'ϖ',
              ensp: ' ',
              emsp: ' ',
              thinsp: ' ',
              zwnj: '‌',
              zwj: '‍',
              lrm: '‎',
              rlm: '‏',
              ndash: '–',
              mdash: '—',
              lsquo: '‘',
              rsquo: '’',
              sbquo: '‚',
              ldquo: '“',
              rdquo: '”',
              bdquo: '„',
              dagger: '†',
              Dagger: '‡',
              bull: '•',
              hellip: '…',
              permil: '‰',
              prime: '′',
              Prime: '″',
              lsaquo: '‹',
              rsaquo: '›',
              oline: '‾',
              frasl: '⁄',
              euro: '€',
              image: 'ℑ',
              weierp: '℘',
              real: 'ℜ',
              trade: '™',
              alefsym: 'ℵ',
              larr: '←',
              uarr: '↑',
              rarr: '→',
              darr: '↓',
              harr: '↔',
              crarr: '↵',
              lArr: '⇐',
              uArr: '⇑',
              rArr: '⇒',
              dArr: '⇓',
              hArr: '⇔',
              forall: '∀',
              part: '∂',
              exist: '∃',
              empty: '∅',
              nabla: '∇',
              isin: '∈',
              notin: '∉',
              ni: '∋',
              prod: '∏',
              sum: '∑',
              minus: '−',
              lowast: '∗',
              radic: '√',
              prop: '∝',
              infin: '∞',
              ang: '∠',
              and: '∧',
              or: '∨',
              cap: '∩',
              cup: '∪',
              int: '∫',
              there4: '∴',
              sim: '∼',
              cong: '≅',
              asymp: '≈',
              ne: '≠',
              equiv: '≡',
              le: '≤',
              ge: '≥',
              sub: '⊂',
              sup: '⊃',
              nsub: '⊄',
              sube: '⊆',
              supe: '⊇',
              oplus: '⊕',
              otimes: '⊗',
              perp: '⊥',
              sdot: '⋅',
              lceil: '⌈',
              rceil: '⌉',
              lfloor: '⌊',
              rfloor: '⌋',
              loz: '◊',
              spades: '♠',
              clubs: '♣',
              hearts: '♥',
              diams: '♦',
              lang: '⟨',
              rang: '⟩',
            });
        },
        function (t, e, n) {
          'use strict';
          Object.defineProperty(e, '__esModule', { value: !0 });
          var i = n(10),
            r = n(12),
            s = n(13),
            a = (function () {
              function t() {
                (this.values = []), (this.curly = this.paren = -1);
              }
              return (
                (t.prototype.beforeFunctionExpression = function (t) {
                  return (
                    [
                      '(',
                      '{',
                      '[',
                      'in',
                      'typeof',
                      'instanceof',
                      'new',
                      'return',
                      'case',
                      'delete',
                      'throw',
                      'void',
                      '=',
                      '+=',
                      '-=',
                      '*=',
                      '**=',
                      '/=',
                      '%=',
                      '<<=',
                      '>>=',
                      '>>>=',
                      '&=',
                      '|=',
                      '^=',
                      ',',
                      '+',
                      '-',
                      '*',
                      '**',
                      '/',
                      '%',
                      '++',
                      '--',
                      '<<',
                      '>>',
                      '>>>',
                      '&',
                      '|',
                      '^',
                      '!',
                      '~',
                      '&&',
                      '||',
                      '?',
                      ':',
                      '===',
                      '==',
                      '>=',
                      '<=',
                      '<',
                      '>',
                      '!=',
                      '!==',
                    ].indexOf(t) >= 0
                  );
                }),
                (t.prototype.isRegexStart = function () {
                  var t = this.values[this.values.length - 1],
                    e = null !== t;
                  switch (t) {
                    case 'this':
                    case ']':
                      e = !1;
                      break;
                    case ')':
                      var n = this.values[this.paren - 1];
                      e =
                        'if' === n ||
                        'while' === n ||
                        'for' === n ||
                        'with' === n;
                      break;
                    case '}':
                      if (
                        ((e = !1), 'function' === this.values[this.curly - 3])
                      )
                        e =
                          !!(i = this.values[this.curly - 4]) &&
                          !this.beforeFunctionExpression(i);
                      else if ('function' === this.values[this.curly - 4]) {
                        var i;
                        e =
                          !(i = this.values[this.curly - 5]) ||
                          !this.beforeFunctionExpression(i);
                      }
                  }
                  return e;
                }),
                (t.prototype.push = function (t) {
                  7 === t.type || 4 === t.type
                    ? ('{' === t.value
                        ? (this.curly = this.values.length)
                        : '(' === t.value && (this.paren = this.values.length),
                      this.values.push(t.value))
                    : this.values.push(null);
                }),
                t
              );
            })(),
            o = (function () {
              function t(t, e) {
                (this.errorHandler = new i.ErrorHandler()),
                  (this.errorHandler.tolerant =
                    !!e && 'boolean' == typeof e.tolerant && e.tolerant),
                  (this.scanner = new r.Scanner(t, this.errorHandler)),
                  (this.scanner.trackComment =
                    !!e && 'boolean' == typeof e.comment && e.comment),
                  (this.trackRange =
                    !!e && 'boolean' == typeof e.range && e.range),
                  (this.trackLoc = !!e && 'boolean' == typeof e.loc && e.loc),
                  (this.buffer = []),
                  (this.reader = new a());
              }
              return (
                (t.prototype.errors = function () {
                  return this.errorHandler.errors;
                }),
                (t.prototype.getNextToken = function () {
                  if (0 === this.buffer.length) {
                    var t = this.scanner.scanComments();
                    if (this.scanner.trackComment)
                      for (var e = 0; e < t.length; ++e) {
                        var n = t[e],
                          i = this.scanner.source.slice(n.slice[0], n.slice[1]),
                          r = {
                            type: n.multiLine ? 'BlockComment' : 'LineComment',
                            value: i,
                          };
                        this.trackRange && (r.range = n.range),
                          this.trackLoc && (r.loc = n.loc),
                          this.buffer.push(r);
                      }
                    if (!this.scanner.eof()) {
                      var a = void 0;
                      this.trackLoc &&
                        (a = {
                          start: {
                            line: this.scanner.lineNumber,
                            column: this.scanner.index - this.scanner.lineStart,
                          },
                          end: {},
                        });
                      var o =
                        '/' === this.scanner.source[this.scanner.index] &&
                        this.reader.isRegexStart()
                          ? this.scanner.scanRegExp()
                          : this.scanner.lex();
                      this.reader.push(o);
                      var u = {
                        type: s.TokenName[o.type],
                        value: this.scanner.source.slice(o.start, o.end),
                      };
                      if (
                        (this.trackRange && (u.range = [o.start, o.end]),
                        this.trackLoc &&
                          ((a.end = {
                            line: this.scanner.lineNumber,
                            column: this.scanner.index - this.scanner.lineStart,
                          }),
                          (u.loc = a)),
                        9 === o.type)
                      ) {
                        var c = o.pattern,
                          h = o.flags;
                        u.regex = { pattern: c, flags: h };
                      }
                      this.buffer.push(u);
                    }
                  }
                  return this.buffer.shift();
                }),
                t
              );
            })();
          e.Tokenizer = o;
        },
      ]);
    }),
      (t.exports = i());
  },
  function (t, e, n) {
    'use strict';
    var i = n(5),
      r = n(8),
      s = n(11),
      a = n(9),
      o = Object.prototype.toString,
      u = Object.prototype.hasOwnProperty,
      c = 9,
      h = 10,
      l = 32,
      p = 33,
      f = 34,
      d = 35,
      m = 37,
      y = 38,
      v = 39,
      g = 42,
      x = 44,
      D = 45,
      S = 58,
      E = 62,
      w = 63,
      A = 64,
      C = 91,
      b = 93,
      F = 96,
      k = 123,
      T = 124,
      _ = 125,
      M = {
        0: '\\0',
        7: '\\a',
        8: '\\b',
        9: '\\t',
        10: '\\n',
        11: '\\v',
        12: '\\f',
        13: '\\r',
        27: '\\e',
        34: '\\"',
        92: '\\\\',
        133: '\\N',
        160: '\\_',
        8232: '\\L',
        8233: '\\P',
      },
      P = [
        'y',
        'Y',
        'yes',
        'Yes',
        'YES',
        'on',
        'On',
        'ON',
        'n',
        'N',
        'no',
        'No',
        'NO',
        'off',
        'Off',
        'OFF',
      ];
    function I(t) {
      var e, n, s;
      if (((e = t.toString(16).toUpperCase()), t <= 255)) (n = 'x'), (s = 2);
      else if (t <= 65535) (n = 'u'), (s = 4);
      else {
        if (!(t <= 4294967295))
          throw new r(
            'code point within a string may not be greater than 0xFFFFFFFF'
          );
        (n = 'U'), (s = 8);
      }
      return '\\' + n + i.repeat('0', s - e.length) + e;
    }
    function O(t) {
      (this.schema = t.schema || s),
        (this.indent = Math.max(1, t.indent || 2)),
        (this.noArrayIndent = t.noArrayIndent || !1),
        (this.skipInvalid = t.skipInvalid || !1),
        (this.flowLevel = i.isNothing(t.flowLevel) ? -1 : t.flowLevel),
        (this.styleMap = (function (t, e) {
          var n, i, r, s, a, o, c;
          if (null === e) return {};
          for (n = {}, r = 0, s = (i = Object.keys(e)).length; r < s; r += 1)
            (a = i[r]),
              (o = String(e[a])),
              '!!' === a.slice(0, 2) && (a = 'tag:yaml.org,2002:' + a.slice(2)),
              (c = t.compiledTypeMap.fallback[a]) &&
                u.call(c.styleAliases, o) &&
                (o = c.styleAliases[o]),
              (n[a] = o);
          return n;
        })(this.schema, t.styles || null)),
        (this.sortKeys = t.sortKeys || !1),
        (this.lineWidth = t.lineWidth || 80),
        (this.noRefs = t.noRefs || !1),
        (this.noCompatMode = t.noCompatMode || !1),
        (this.condenseFlow = t.condenseFlow || !1),
        (this.implicitTypes = this.schema.compiledImplicit),
        (this.explicitTypes = this.schema.compiledExplicit),
        (this.tag = null),
        (this.result = ''),
        (this.duplicates = []),
        (this.usedDuplicates = null);
    }
    function N(t, e) {
      for (
        var n, r = i.repeat(' ', e), s = 0, a = -1, o = '', u = t.length;
        s < u;

      )
        -1 === (a = t.indexOf('\n', s))
          ? ((n = t.slice(s)), (s = u))
          : ((n = t.slice(s, a + 1)), (s = a + 1)),
          n.length && '\n' !== n && (o += r),
          (o += n);
      return o;
    }
    function B(t, e) {
      return '\n' + i.repeat(' ', t.indent * e);
    }
    function L(t) {
      return t === l || t === c;
    }
    function U(t) {
      return (
        (32 <= t && t <= 126) ||
        (161 <= t && t <= 55295 && 8232 !== t && 8233 !== t) ||
        (57344 <= t && t <= 65533 && 65279 !== t) ||
        (65536 <= t && t <= 1114111)
      );
    }
    function R(t) {
      return (
        U(t) &&
        65279 !== t &&
        t !== x &&
        t !== C &&
        t !== b &&
        t !== k &&
        t !== _ &&
        t !== S &&
        t !== d
      );
    }
    function Y(t) {
      return /^\n* /.test(t);
    }
    var j = 1,
      X = 2,
      V = 3,
      J = 4,
      z = 5;
    function H(t, e, n, i, r) {
      var s,
        a,
        o,
        u = !1,
        c = !1,
        l = -1 !== i,
        M = -1,
        P =
          U((o = t.charCodeAt(0))) &&
          65279 !== o &&
          !L(o) &&
          o !== D &&
          o !== w &&
          o !== S &&
          o !== x &&
          o !== C &&
          o !== b &&
          o !== k &&
          o !== _ &&
          o !== d &&
          o !== y &&
          o !== g &&
          o !== p &&
          o !== T &&
          o !== E &&
          o !== v &&
          o !== f &&
          o !== m &&
          o !== A &&
          o !== F &&
          !L(t.charCodeAt(t.length - 1));
      if (e)
        for (s = 0; s < t.length; s++) {
          if (!U((a = t.charCodeAt(s)))) return z;
          P = P && R(a);
        }
      else {
        for (s = 0; s < t.length; s++) {
          if ((a = t.charCodeAt(s)) === h)
            (u = !0),
              l && ((c = c || (s - M - 1 > i && ' ' !== t[M + 1])), (M = s));
          else if (!U(a)) return z;
          P = P && R(a);
        }
        c = c || (l && s - M - 1 > i && ' ' !== t[M + 1]);
      }
      return u || c ? (n > 9 && Y(t) ? z : c ? J : V) : P && !r(t) ? j : X;
    }
    function W(t, e, n, i) {
      t.dump = (function () {
        if (0 === e.length) return "''";
        if (!t.noCompatMode && -1 !== P.indexOf(e)) return "'" + e + "'";
        var s = t.indent * Math.max(1, n),
          a =
            -1 === t.lineWidth
              ? -1
              : Math.max(Math.min(t.lineWidth, 40), t.lineWidth - s),
          o = i || (t.flowLevel > -1 && n >= t.flowLevel);
        switch (
          H(e, o, t.indent, a, function (e) {
            return (function (t, e) {
              var n, i;
              for (n = 0, i = t.implicitTypes.length; n < i; n += 1)
                if (t.implicitTypes[n].resolve(e)) return !0;
              return !1;
            })(t, e);
          })
        ) {
          case j:
            return e;
          case X:
            return "'" + e.replace(/'/g, "''") + "'";
          case V:
            return '|' + G(e, t.indent) + K(N(e, s));
          case J:
            return (
              '>' +
              G(e, t.indent) +
              K(
                N(
                  (function (t, e) {
                    var n,
                      i,
                      r = /(\n+)([^\n]*)/g,
                      s =
                        ((o = t.indexOf('\n')),
                        (o = -1 !== o ? o : t.length),
                        (r.lastIndex = o),
                        q(t.slice(0, o), e)),
                      a = '\n' === t[0] || ' ' === t[0];
                    var o;
                    for (; (i = r.exec(t)); ) {
                      var u = i[1],
                        c = i[2];
                      (n = ' ' === c[0]),
                        (s += u + (a || n || '' === c ? '' : '\n') + q(c, e)),
                        (a = n);
                    }
                    return s;
                  })(e, a),
                  s
                )
              )
            );
          case z:
            return (
              '"' +
              (function (t) {
                for (var e, n, i, r = '', s = 0; s < t.length; s++)
                  (e = t.charCodeAt(s)) >= 55296 &&
                  e <= 56319 &&
                  (n = t.charCodeAt(s + 1)) >= 56320 &&
                  n <= 57343
                    ? ((r += I(1024 * (e - 55296) + n - 56320 + 65536)), s++)
                    : ((i = M[e]), (r += !i && U(e) ? t[s] : i || I(e)));
                return r;
              })(e) +
              '"'
            );
          default:
            throw new r('impossible error: invalid scalar style');
        }
      })();
    }
    function G(t, e) {
      var n = Y(t) ? String(e) : '',
        i = '\n' === t[t.length - 1];
      return (
        n +
        (i && ('\n' === t[t.length - 2] || '\n' === t) ? '+' : i ? '' : '-') +
        '\n'
      );
    }
    function K(t) {
      return '\n' === t[t.length - 1] ? t.slice(0, -1) : t;
    }
    function q(t, e) {
      if ('' === t || ' ' === t[0]) return t;
      for (
        var n, i, r = / [^ ]/g, s = 0, a = 0, o = 0, u = '';
        (n = r.exec(t));

      )
        (o = n.index) - s > e &&
          ((i = a > s ? a : o), (u += '\n' + t.slice(s, i)), (s = i + 1)),
          (a = o);
      return (
        (u += '\n'),
        t.length - s > e && a > s
          ? (u += t.slice(s, a) + '\n' + t.slice(a + 1))
          : (u += t.slice(s)),
        u.slice(1)
      );
    }
    function Z(t, e, n) {
      var i, s, a, c, h, l;
      for (
        a = 0, c = (s = n ? t.explicitTypes : t.implicitTypes).length;
        a < c;
        a += 1
      )
        if (
          ((h = s[a]).instanceOf || h.predicate) &&
          (!h.instanceOf ||
            ('object' == typeof e && e instanceof h.instanceOf)) &&
          (!h.predicate || h.predicate(e))
        ) {
          if (((t.tag = n ? h.tag : '?'), h.represent)) {
            if (
              ((l = t.styleMap[h.tag] || h.defaultStyle),
              '[object Function]' === o.call(h.represent))
            )
              i = h.represent(e, l);
            else {
              if (!u.call(h.represent, l))
                throw new r(
                  '!<' + h.tag + '> tag resolver accepts not "' + l + '" style'
                );
              i = h.represent[l](e, l);
            }
            t.dump = i;
          }
          return !0;
        }
      return !1;
    }
    function $(t, e, n, i, s, a) {
      (t.tag = null), (t.dump = n), Z(t, n, !1) || Z(t, n, !0);
      var u = o.call(t.dump);
      i && (i = t.flowLevel < 0 || t.flowLevel > e);
      var c,
        l,
        p = '[object Object]' === u || '[object Array]' === u;
      if (
        (p && (l = -1 !== (c = t.duplicates.indexOf(n))),
        ((null !== t.tag && '?' !== t.tag) || l || (2 !== t.indent && e > 0)) &&
          (s = !1),
        l && t.usedDuplicates[c])
      )
        t.dump = '*ref_' + c;
      else {
        if (
          (p && l && !t.usedDuplicates[c] && (t.usedDuplicates[c] = !0),
          '[object Object]' === u)
        )
          i && 0 !== Object.keys(t.dump).length
            ? (!(function (t, e, n, i) {
                var s,
                  a,
                  o,
                  u,
                  c,
                  l,
                  p = '',
                  f = t.tag,
                  d = Object.keys(n);
                if (!0 === t.sortKeys) d.sort();
                else if ('function' == typeof t.sortKeys) d.sort(t.sortKeys);
                else if (t.sortKeys)
                  throw new r('sortKeys must be a boolean or a function');
                for (s = 0, a = d.length; s < a; s += 1)
                  (l = ''),
                    (i && 0 === s) || (l += B(t, e)),
                    (u = n[(o = d[s])]),
                    $(t, e + 1, o, !0, !0, !0) &&
                      ((c =
                        (null !== t.tag && '?' !== t.tag) ||
                        (t.dump && t.dump.length > 1024)) &&
                        (t.dump && h === t.dump.charCodeAt(0)
                          ? (l += '?')
                          : (l += '? ')),
                      (l += t.dump),
                      c && (l += B(t, e)),
                      $(t, e + 1, u, !0, c) &&
                        (t.dump && h === t.dump.charCodeAt(0)
                          ? (l += ':')
                          : (l += ': '),
                        (p += l += t.dump)));
                (t.tag = f), (t.dump = p || '{}');
              })(t, e, t.dump, s),
              l && (t.dump = '&ref_' + c + t.dump))
            : (!(function (t, e, n) {
                var i,
                  r,
                  s,
                  a,
                  o,
                  u = '',
                  c = t.tag,
                  h = Object.keys(n);
                for (i = 0, r = h.length; i < r; i += 1)
                  (o = t.condenseFlow ? '"' : ''),
                    0 !== i && (o += ', '),
                    (a = n[(s = h[i])]),
                    $(t, e, s, !1, !1) &&
                      (t.dump.length > 1024 && (o += '? '),
                      (o +=
                        t.dump +
                        (t.condenseFlow ? '"' : '') +
                        ':' +
                        (t.condenseFlow ? '' : ' ')),
                      $(t, e, a, !1, !1) && (u += o += t.dump));
                (t.tag = c), (t.dump = '{' + u + '}');
              })(t, e, t.dump),
              l && (t.dump = '&ref_' + c + ' ' + t.dump));
        else if ('[object Array]' === u) {
          var f = t.noArrayIndent && e > 0 ? e - 1 : e;
          i && 0 !== t.dump.length
            ? (!(function (t, e, n, i) {
                var r,
                  s,
                  a = '',
                  o = t.tag;
                for (r = 0, s = n.length; r < s; r += 1)
                  $(t, e + 1, n[r], !0, !0) &&
                    ((i && 0 === r) || (a += B(t, e)),
                    t.dump && h === t.dump.charCodeAt(0)
                      ? (a += '-')
                      : (a += '- '),
                    (a += t.dump));
                (t.tag = o), (t.dump = a || '[]');
              })(t, f, t.dump, s),
              l && (t.dump = '&ref_' + c + t.dump))
            : (!(function (t, e, n) {
                var i,
                  r,
                  s = '',
                  a = t.tag;
                for (i = 0, r = n.length; i < r; i += 1)
                  $(t, e, n[i], !1, !1) &&
                    (0 !== i && (s += ',' + (t.condenseFlow ? '' : ' ')),
                    (s += t.dump));
                (t.tag = a), (t.dump = '[' + s + ']');
              })(t, f, t.dump),
              l && (t.dump = '&ref_' + c + ' ' + t.dump));
        } else {
          if ('[object String]' !== u) {
            if (t.skipInvalid) return !1;
            throw new r('unacceptable kind of an object to dump ' + u);
          }
          '?' !== t.tag && W(t, t.dump, e, a);
        }
        null !== t.tag &&
          '?' !== t.tag &&
          (t.dump = '!<' + t.tag + '> ' + t.dump);
      }
      return !0;
    }
    function Q(t, e) {
      var n,
        i,
        r = [],
        s = [];
      for (
        (function t(e, n, i) {
          var r, s, a;
          if (null !== e && 'object' == typeof e)
            if (-1 !== (s = n.indexOf(e))) -1 === i.indexOf(s) && i.push(s);
            else if ((n.push(e), Array.isArray(e)))
              for (s = 0, a = e.length; s < a; s += 1) t(e[s], n, i);
            else
              for (r = Object.keys(e), s = 0, a = r.length; s < a; s += 1)
                t(e[r[s]], n, i);
        })(t, r, s),
          n = 0,
          i = s.length;
        n < i;
        n += 1
      )
        e.duplicates.push(r[s[n]]);
      e.usedDuplicates = new Array(i);
    }
    function tt(t, e) {
      var n = new O((e = e || {}));
      return n.noRefs || Q(t, n), $(n, 0, t, !0, !0) ? n.dump + '\n' : '';
    }
    (t.exports.dump = tt),
      (t.exports.safeDump = function (t, e) {
        return tt(t, i.extend({ schema: a }, e));
      });
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(2),
      a = (function (t) {
        function e(e) {
          var n = t.call(this) || this;
          return (n.actionType = s.ActionType.SLIDE), (n.value = e), n;
        }
        return (
          r(e, t),
          (e.cast = function (t) {
            if ('string' == typeof t) {
              var i = n(0).safeLoad(t);
              return this.cast(i);
            }
            var r = Object.create(e.prototype);
            if (!Object.values(s.ActionType).includes(t.type))
              throw new Error(t.type + ' is not a valid type');
            if (
              ('number' == typeof t.valueToSlideTo &&
                (t.valueToSlideTo = t.valueToSlideTo.toString()),
              null === t.valueToSlideTo ||
                void 0 === t.valueToSlideTo ||
                'string' != typeof t.valueToSlideTo ||
                '' === t.valueToSlideTo ||
                isNaN(+t.valueToSlideTo))
            )
              throw new Error(
                'A value must be provided and castable to a number'
              );
            return Object.assign(r, {
              actionType: t.type,
              value: t.valueToSlideTo,
            });
          }),
          e
        );
      })(n(7).AbstractActionWithValue);
    e.SlideAction = a;
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(2),
      a = (function (t) {
        function e(e) {
          var n = t.call(this) || this;
          return (n.actionType = s.ActionType.CONTAINS_TEXT), (n.value = e), n;
        }
        return (
          r(e, t),
          (e.cast = function (t) {
            if ('string' == typeof t) {
              var i = n(0).safeLoad(t);
              return this.cast(i);
            }
            var r = Object.create(e.prototype);
            if (!Object.values(s.ActionType).includes(t.type))
              throw new Error(t.type + ' is not a valid type');
            if (
              null === t.searchText ||
              void 0 === t.searchText ||
              'string' != typeof t.searchText ||
              t.searchText.length < 1
            )
              throw new Error('A searchText must be provided');
            return Object.assign(r, {
              actionType: t.type,
              value: t.searchText,
            });
          }),
          e
        );
      })(n(7).AbstractActionWithValue);
    e.ContainsTextAction = a;
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(29),
      a = n(3),
      o = n(4),
      u = (function (t) {
        function e(e, n, i) {
          var r = t.call(this, n, i) || this;
          return (r._found = e), r;
        }
        return (
          r(e, t),
          Object.defineProperty(e.prototype, 'found', {
            get: function () {
              return this._found;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (e.cast = function (t) {
            if ('string' == typeof t) {
              var i = n(0).safeLoad(t);
              return this.cast(i);
            }
            if (
              !(
                (null !== t.found && void 0 !== t.found) ||
                (null != t.notFound && void 0 !== t.notFound)
              )
            )
              throw new Error('Must contain either "found" or "notFound"');
            if (
              null === t.with ||
              void 0 === t.with ||
              !Object.values(a.SelectorType).includes(t.with)
            )
              throw new Error('Must contain a valid type');
            var r = null,
              s = !1;
            return (
              null !== t.found && void 0 !== t.found
                ? ((r = o.StepParser.parseSelector(t.found)), (s = !0))
                : (r = o.StepParser.parseSelector(t.notFound)),
              new e(s, r, t.with)
            );
          }),
          (e.prototype.isValid = function () {
            return this.selector.isValid();
          }),
          e
        );
      })(s.SelectionCriteria);
    e.UnlessSelectionCriteria = u;
  },
  function (t, e) {
    t.exports = function (t) {
      return (
        t.webpackPolyfill ||
          ((t.deprecate = function () {}),
          (t.paths = []),
          t.children || (t.children = []),
          Object.defineProperty(t, 'loaded', {
            enumerable: !0,
            get: function () {
              return t.l;
            },
          }),
          Object.defineProperty(t, 'id', {
            enumerable: !0,
            get: function () {
              return t.i;
            },
          }),
          (t.webpackPolyfill = 1)),
        t
      );
    };
  },
  function (t, e, n) {
    'use strict';
    var i,
      r =
        (this && this.__extends) ||
        ((i = function (t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (t, e) {
                t.__proto__ = e;
              }) ||
            function (t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function (t, e) {
          function n() {
            this.constructor = t;
          }
          i(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(3),
      a = n(20),
      o = n(30),
      u = n(31),
      c = n(29),
      h = (function (t) {
        function e(e) {
          void 0 === e && (e = !1);
          var n = t.call(this) || this;
          return (n.ignoreMutations = e), n;
        }
        return (
          r(e, t),
          (e.prototype.getCurrentUrl = function () {
            return window.location.href;
          }),
          (e.prototype.getClickAction = function (t) {
            return function (e) {
              if (!s.NavigationStep.isValid(t)) return null;
              try {
                return (
                  ['mousedown', 'click', 'mouseup'].forEach(function (t) {
                    return e.dispatchEvent(
                      new MouseEvent(t, {
                        view: window,
                        bubbles: !0,
                        cancelable: !0,
                        buttons: 1,
                      })
                    );
                  }),
                  Promise.resolve(!0)
                );
              } catch (t) {
                return Promise.reject(t);
              }
            };
          }),
          (e.prototype.getSubmitAction = function (t) {
            return function (e) {
              if (!s.NavigationStep.isValid(t)) return null;
              try {
                return e.submit(), Promise.resolve(!0);
              } catch (t) {
                return Promise.reject(t);
              }
            };
          }),
          (e.prototype.getEnterTextAction = function (t) {
            return function (n) {
              if (!s.NavigationStep.isValid(t)) return null;
              try {
                var i = ['keydown', 'keypress', 'input', 'keyup'],
                  r = t.getAction().getValue();
                n.focus(), e.fireEvent('focus', n), (n.value = '');
                for (var a = 0; a < r.length; a++) {
                  var o = r.charAt(a);
                  n.value = 0 === a ? '' + o : '' + n.value + o;
                  for (var u = 0; u < i.length; u++) e.fireEvent(i[u], n, !0);
                }
                return n.blur(), e.fireEvent('blur', n), Promise.resolve(!0);
              } catch (t) {
                return Promise.reject(t);
              }
            };
          }),
          (e.fireEvent = function (t, e, n) {
            var i = new Event(t, { bubbles: !0 });
            null != n && (i.simulated = n), e.dispatchEvent(i);
          }),
          (e.prototype.getSelectAction = function (t) {
            return function (e) {
              if (!s.NavigationStep.isValid(t)) return null;
              try {
                e.value = t.getAction().getValue();
                var n = new Event('change', { bubbles: !0 });
                return e.dispatchEvent(n), Promise.resolve(!0);
              } catch (t) {
                return Promise.reject(t);
              }
            };
          }),
          (e.prototype.getContextSwitchAction = function (t) {
            throw new Error('Not yet implemented');
          }),
          (e.prototype.getSlideAction = function (t) {
            return function (e) {
              if (!s.NavigationStep.isValid(t)) return null;
              var n = t.getAction().getValue(),
                i = e.getAttribute('min'),
                r = e.getAttribute('max'),
                a = null === i ? 0 : Number(i),
                o = null === r ? 100 : Number(r);
              if (isNaN(a) || isNaN(o))
                return Promise.reject('Invalid html for range min/max');
              if (
                null === n ||
                Number(n) > o ||
                Number(n) < a ||
                isNaN(Number(n))
              )
                return Promise.reject('Invalid valueToSlideTo');
              try {
                e.value = n;
                var u = new Event('change', { bubbles: !0 });
                return e.dispatchEvent(u), Promise.resolve(!0);
              } catch (t) {
                return Promise.reject(t);
              }
            };
          }),
          (e.prototype.getConfirmPresenceAction = function (t) {
            return function (t) {
              return t ? Promise.resolve(!0) : Promise.reject(!1);
            };
          }),
          (e.prototype.getContainsTextAction = function (t) {
            return function (e) {
              return (
                e.normalize(),
                e.innerText.includes(t.getAction().getValue())
                  ? Promise.resolve(!0)
                  : Promise.reject('Did not find the searchText')
              );
            };
          }),
          (e.prototype.getSelectorFunctionByType = function (t, e) {
            try {
              switch (t) {
                case s.SelectorType.CLASSNAME:
                  return function () {
                    try {
                      return document.getElementsByClassName(e).item(0);
                    } catch (t) {
                      return null;
                    }
                  };
                case s.SelectorType.CSS_SELECTOR:
                  return function () {
                    try {
                      return document.querySelector(e);
                    } catch (t) {
                      return null;
                    }
                  };
                case s.SelectorType.LINK_TEXT:
                  var n = this;
                  return function () {
                    try {
                      var t = "a[text()='" + e + "']";
                      return n.getSelectorFunctionByType(
                        s.SelectorType.XPATH,
                        t
                      );
                    } catch (t) {
                      return null;
                    }
                  };
                case s.SelectorType.NA:
                  return function () {
                    return !1;
                  };
                case s.SelectorType.NAME:
                  return function () {
                    try {
                      return document.getElementsByName(e).item(0);
                    } catch (t) {
                      return null;
                    }
                  };
                case s.SelectorType.XPATH:
                  return function () {
                    try {
                      var t = document.evaluate(
                        e,
                        document,
                        null,
                        XPathResult.FIRST_ORDERED_NODE_TYPE,
                        null
                      ).singleNodeValue;
                      return null != t && t.nodeType === Node.ELEMENT_NODE
                        ? t
                        : null;
                    } catch (t) {
                      return null;
                    }
                  };
                case s.SelectorType.ID:
                  return function () {
                    try {
                      return document.getElementById(e);
                    } catch (t) {
                      return null;
                    }
                  };
                default:
                  throw new TypeError('Invalid SelectorType');
              }
            } catch (t) {
              throw new TypeError('Invalid SelectorType');
            }
          }),
          (e.prototype.findElementWithTimeout = function (t, e) {
            var n = this;
            return new Promise(function (i, r) {
              e < 0 && r('Timeout must be 0 or greater');
              var s = new c.SelectionCriteria(
                  t.getSelector(),
                  t.getSelectorType()
                ),
                a = t.getUnless(),
                h = o().add(e, 'seconds'),
                l = new MutationObserver(function (t, e) {
                  if (f) {
                    if ((clearInterval(f), h && h.diff(o()) < 0))
                      return (
                        r(
                          'DOM keeps changing every 300ms. Set ignoreMutations to true ie. new InBrowserExecutionEngine(true);'
                        ),
                        void l.disconnect()
                      );
                    f = setInterval(p.bind(this), 300);
                  }
                });
              function p() {
                if (
                  (u.Heartbeat.sendHeartbeat(), !n.shouldShortCircuitStep(a))
                ) {
                  var t = n.findElement(s);
                  if (null !== t && !t.hidden && !t.disabled)
                    return clearInterval(f), i(t), void l.disconnect();
                  if (h && h.diff(o()) < 0)
                    return (
                      clearInterval(f),
                      r('Element not found'),
                      void l.disconnect()
                    );
                }
              }
              n.ignoreMutations ||
                l.observe(document, { attributes: !0, subtree: !0 });
              var f = setInterval(p.bind(this), 300);
            });
          }),
          e
        );
      })(a.AbstractExecutionEngine);
    e.InBrowserExecutionEngine = h;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = (function () {
      function t(t) {
        this.variables = t || new Map();
      }
      return (
        (t.prototype.addVariable = function (t) {
          if (!t.isValid()) throw new Error('Variables must be valid');
          if (this.variables.has(t.getName()))
            throw new Error(t.getName() + ' already defined');
          return this.variables.set(t.getName(), t), this;
        }),
        (t.prototype.resolveVariable = function (t) {
          var e = this;
          return new Promise(function (n, i) {
            e.variables.has(t) && n(e.variables.get(t)), i(t + ' is undefined');
          });
        }),
        t
      );
    })();
    e.SimpleMapVariableResolver = i;
  },
  function (t, e, n) {
    'use strict';
    var i =
        (this && this.__awaiter) ||
        function (t, e, n, i) {
          return new (n || (n = Promise))(function (r, s) {
            function a(t) {
              try {
                u(i.next(t));
              } catch (t) {
                s(t);
              }
            }
            function o(t) {
              try {
                u(i.throw(t));
              } catch (t) {
                s(t);
              }
            }
            function u(t) {
              t.done
                ? r(t.value)
                : new n(function (e) {
                    e(t.value);
                  }).then(a, o);
            }
            u((i = i.apply(t, e || [])).next());
          });
        },
      r =
        (this && this.__generator) ||
        function (t, e) {
          var n,
            i,
            r,
            s,
            a = {
              label: 0,
              sent: function () {
                if (1 & r[0]) throw r[1];
                return r[1];
              },
              trys: [],
              ops: [],
            };
          return (
            (s = { next: o(0), throw: o(1), return: o(2) }),
            'function' == typeof Symbol &&
              (s[Symbol.iterator] = function () {
                return this;
              }),
            s
          );
          function o(s) {
            return function (o) {
              return (function (s) {
                if (n) throw new TypeError('Generator is already executing.');
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      i &&
                        (r =
                          2 & s[0]
                            ? i.return
                            : s[0]
                            ? i.throw || ((r = i.return) && r.call(i), 0)
                            : i.next) &&
                        !(r = r.call(i, s[1])).done)
                    )
                      return r;
                    switch (((i = 0), r && (s = [2 & s[0], r.value]), s[0])) {
                      case 0:
                      case 1:
                        r = s;
                        break;
                      case 4:
                        return a.label++, { value: s[1], done: !1 };
                      case 5:
                        a.label++, (i = s[1]), (s = [0]);
                        continue;
                      case 7:
                        (s = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(r = (r = a.trys).length > 0 && r[r.length - 1]) &&
                          (6 === s[0] || 2 === s[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === s[0] &&
                          (!r || (s[1] > r[0] && s[1] < r[3]))
                        ) {
                          a.label = s[1];
                          break;
                        }
                        if (6 === s[0] && a.label < r[1]) {
                          (a.label = r[1]), (r = s);
                          break;
                        }
                        if (r && a.label < r[2]) {
                          (a.label = r[2]), a.ops.push(s);
                          break;
                        }
                        r[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    s = e.call(t, a);
                  } catch (t) {
                    (s = [6, t]), (i = 0);
                  } finally {
                    n = r = 0;
                  }
                if (5 & s[0]) throw s[1];
                return { value: s[0] ? s[1] : void 0, done: !0 };
              })([s, o]);
            };
          }
        };
    Object.defineProperty(e, '__esModule', { value: !0 });
    var s = n(17),
      a = n(16),
      o = n(15),
      u = n(32),
      c = n(34),
      h = (function () {
        function t(t) {
          (this.executionEngine = null != t ? t : null),
            (this.variableResolutionManager =
              new c.VariableResolutionManager());
        }
        return (
          (t.prototype.getExecutionEngine = function () {
            return this.executionEngine;
          }),
          (t.prototype.getVariableResolutionManager = function () {
            return this.variableResolutionManager;
          }),
          (t.prototype.engine = function (t) {
            if (null == t)
              throw new Error(
                'The execution engine cannot be null or undefined'
              );
            return (this.executionEngine = t), this;
          }),
          (t.prototype.variableResolver = function (t) {
            if (null == t)
              throw new Error(
                'The variable resolver cannot be null or undefined'
              );
            return this.variableResolutionManager.addResolver(t), this;
          }),
          (t.prototype.executeScenario = function (t, e) {
            return i(this, void 0, void 0, function () {
              var n,
                i = this;
              return r(this, function (r) {
                if (
                  null === this.executionEngine ||
                  void 0 === this.executionEngine
                )
                  throw new Error('There is no defined execution engine');
                return (
                  (n = null),
                  null !=
                    (n = Object.getPrototypeOf(t).hasOwnProperty('getSteps')
                      ? t
                      : u.ScenarioParser.parseNavigationScenario(t)) &&
                    null != n.getSteps() &&
                    this.executionEngine.setup(n).then(function (t) {
                      i.performStep(n, 0, t, e);
                    }),
                  [2]
                );
              });
            });
          }),
          (t.prototype.executeMultipleScenarios = function (t, e) {
            return i(this, void 0, void 0, function () {
              var n, i, s, a;
              return r(this, function (r) {
                switch (r.label) {
                  case 0:
                    if (null == t)
                      throw new Error('You must provide an array of scenarios');
                    (n = []), (i = 0), (s = t), (r.label = 1);
                  case 1:
                    return i < s.length
                      ? ((a = s[i]),
                        [
                          4,
                          this.executeScenario(a, function (t) {
                            n.push(t);
                          }),
                        ])
                      : [3, 4];
                  case 2:
                    r.sent(), (r.label = 3);
                  case 3:
                    return i++, [3, 1];
                  case 4:
                    return null != e && e(n), [2];
                }
              });
            });
          }),
          (t.prototype.executeStep = function (t, e) {
            return i(this, void 0, void 0, function () {
              return r(this, function (n) {
                return (
                  this.didPerformStep(t, t.isOptional()).then(
                    function (n) {
                      t.setSuccessfullyRun(n), null != e && e(t);
                    },
                    function (n) {
                      t.setSuccessfullyRun(!1),
                        t.setFailureReason(n),
                        null != e && e(t);
                    }
                  ),
                  [2]
                );
              });
            });
          }),
          (t.prototype.executeMultipleSteps = function (t, e) {
            return i(this, void 0, void 0, function () {
              var n, i, s, a;
              return r(this, function (r) {
                switch (r.label) {
                  case 0:
                    if (null == t)
                      throw new Error('You must provide an array of steps');
                    (n = []), (i = 0), (s = t), (r.label = 1);
                  case 1:
                    return i < s.length
                      ? ((a = s[i]),
                        [
                          4,
                          this.executeStep(a, function (t) {
                            n.push(t);
                          }),
                        ])
                      : [3, 4];
                  case 2:
                    r.sent(), (r.label = 3);
                  case 3:
                    return i++, [3, 1];
                  case 4:
                    return null != e && e(n), [2];
                }
              });
            });
          }),
          (t.prototype.performStep = function (t, e, n, i) {
            var r = this,
              s = t.getSteps(),
              a = null;
            e > 0 &&
              ((a = s[e - 1]),
              this.stepRelevantForCurrentUrl(a) && a.setSuccessfullyRun(n)),
              n || (a && a.isOptional())
                ? e < s.length
                  ? this.didPerformStep(s[e], s[e].isOptional()).then(
                      function (s) {
                        r.performStep(t, e + 1, n, i);
                      },
                      function (n) {
                        s[e].setFailureReason(n),
                          r.performStep(t, e + 1, !1, i);
                      }
                    )
                  : (console.log('All steps completed'), this.finishSteps(t, i))
                : (console.log('Failed on step: ' + s[e - 1].getDescription()),
                  console.log(s[e - 1].getFailureReason()),
                  this.finishSteps(t, i));
          }),
          (t.prototype.finishSteps = function (t, e) {
            this.executionEngine.teardown(t),
              null != e && 'function' == typeof e && e(t.getSteps());
          }),
          (t.prototype.stepRelevantForCurrentUrl = function (e) {
            if (null !== e.getUrl() && void 0 !== e.getUrl()) {
              var n = t.removeTrailingSlashes(e.getUrl());
              return (
                t.removeTrailingSlashes(
                  t.removeQueryStringFromUrl(
                    this.executionEngine.getCurrentUrl()
                  )
                ) === n
              );
            }
            return !0;
          }),
          (t.removeTrailingSlashes = function (t) {
            return null != t && '/' === t.substring(t.length - 1, t.length)
              ? t.slice(0, -1)
              : t;
          }),
          (t.removeQueryStringFromUrl = function (t) {
            var e = t,
              n = new RegExp(/(.+)(\?.+)$/g);
            return null != t && (e = t.replace(n, '$1')), e;
          }),
          (t.prototype.didPerformStep = function (e, n) {
            if (t.isStepInvalid(e)) {
              return (
                e.setFailureReason('Step is invalid'),
                Promise.reject('Step is invalid')
              );
            }
            return this.stepRelevantForCurrentUrl(e)
              ? ((n = n || e.isOptional()),
                e instanceof s.IfElseStep
                  ? this.didPerformIfElseStep(e, n)
                  : e instanceof a.IFTTTStep
                  ? this.didPerformIFTTTStep(e, n)
                  : this.didPerformSimpleStep(e, n))
              : Promise.resolve(!0);
          }),
          (t.prototype.didPerformIfElseStep = function (e, n) {
            var i = this;
            if (t.isStepInvalid(e)) {
              return (
                e.setFailureReason('Step is invalid'),
                Promise.reject('Step is invalid')
              );
            }
            return this.didPerformStep(e.getIfStep(), !0).then(
              function (t) {
                if (t) return Promise.resolve(!0);
                n = n || e.getElseStep().isOptional();
                var r = e.getElseIfStep();
                return r
                  ? i.didPerformStep(r, !0).then(function (t) {
                      return t
                        ? Promise.resolve(!0)
                        : i.didPerformStep(e.getElseStep(), n);
                    })
                  : i.didPerformStep(e.getElseStep(), n);
              },
              function (t) {
                return Promise.reject(t);
              }
            );
          }),
          (t.prototype.didPerformIFTTTStep = function (e, n) {
            var i = this;
            if (t.isStepInvalid(e)) {
              return (
                e.setFailureReason('Step is invalid'),
                Promise.reject('Step is invalid')
              );
            }
            return this.didPerformStep(e.getIfThis(), !0).then(function (t) {
              return t
                ? i.beginThenThisStep(e.getThenThese(), 0, n)
                : Promise.resolve(!0);
            });
          }),
          (t.prototype.beginThenThisStep = function (t, e, n) {
            var i = this;
            return e === t.length
              ? Promise.resolve(!0)
              : this.didPerformStep(t[e], n || t[e].isOptional()).then(
                  function (r) {
                    return r
                      ? i.beginThenThisStep(t, e + 1, n)
                      : t[e].isOptional()
                      ? Promise.resolve(!1)
                      : Promise.reject('Unknown issue occurred');
                  },
                  function (t) {
                    return Promise.reject(t);
                  }
                );
          }),
          (t.prototype.didPerformSimpleStep = function (e, n) {
            if (t.isStepInvalid(e)) {
              return (
                e.setFailureReason('Step is invalid'),
                Promise.reject('Step is invalid')
              );
            }
            return e instanceof o.SleepStep
              ? this.didPerformSleepStep(e)
              : ((n = n || e.isOptional()),
                this.didPerformNavigationStep(e, n));
          }),
          (t.prototype.didPerformNavigationStep = function (e, n) {
            var i = this;
            if (t.isStepInvalid(e)) {
              return (
                e.setFailureReason('Step is invalid'),
                Promise.reject('Step is invalid')
              );
            }
            return new Promise(function (t, r) {
              e.resolveVariables(i.variableResolutionManager).then(
                function () {
                  i.executionEngine.findElementAndPerformAction(e, n).then(
                    function (e) {
                      t(e);
                    },
                    function (n) {
                      e.setFailureReason(n), e.isOptional() ? t(!1) : r(n);
                    }
                  );
                },
                function (t) {
                  e.setFailureReason(t), r(t);
                }
              );
            });
          }),
          (t.prototype.didPerformSleepStep = function (t) {
            return this.executionEngine.shouldShortCircuitStep(t.getUnless())
              ? Promise.resolve(!0)
              : Promise.resolve()
                  .then(function (e) {
                    return new Promise(function (e) {
                      setTimeout(function () {
                        e(!0);
                      }, t.getTimeToSleepInMillis());
                    });
                  })
                  .then(function (t) {
                    return t;
                  });
          }),
          (t.isStepInvalid = function (t) {
            return !(null != t && t.isValid());
          }),
          t
        );
      })();
    e.StepExecutor = h;
  },
  function (t, e, n) {
    'use strict';
    Object.defineProperty(e, '__esModule', { value: !0 });
    var i = (function () {
      function t(t, e) {
        (this.name = t), (this.value = e);
      }
      return (
        (t.prototype.getName = function () {
          return this.name;
        }),
        (t.prototype.getValue = function () {
          return this.value;
        }),
        (t.prototype.isValid = function () {
          return (
            !!(
              null !== this.name &&
              void 0 !== this.name &&
              this.name.length > 0 &&
              null !== this.value &&
              void 0 !== this.value
            ) &&
            ('string' == typeof this.value ||
              'number' == typeof this.value ||
              this.value instanceof Date)
          );
        }),
        (t.cast = function (e) {
          if ('string' == typeof e) {
            var i = n(0).safeLoad(e);
            return this.cast(i);
          }
          var r = Object.create(t.prototype);
          if (null === e.name || void 0 === e.name || e.name.length < 1)
            throw new Error('A name must be provided');
          if (null === e.value || void 0 === e.value)
            throw new Error('A value must be provided');
          return Object.assign(r, e, { name: e.name, value: e.value });
        }),
        t
      );
    })();
    e.Variable = i;
  },
]);
